ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"register_interface.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  20              		.align	2
  23              	OFFSET_TAB_CCMRx:
  24 0000 00000000 		.ascii	"\000\000\000\000\004\004\004<<"
  24      0404043C 
  24      3C
  25              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  26              		.align	2
  29              	SHIFT_TAB_OCxx:
  30 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\010"
  30      00000800 
  30      08
  31              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  32              		.align	2
  35              	SHIFT_TAB_ICxx:
  36 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000"
  36      00000800 
  36      00
  37              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  38              		.align	2
  41              	SHIFT_TAB_CCxP:
  42 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\020\024"
  42      080A0C10 
  42      14
  43              		.section	.rodata.SHIFT_TAB_OISx,"a"
  44              		.align	2
  47              	SHIFT_TAB_OISx:
  48 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\010\012"
  48      04050608 
  48      0A
  49              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  50              		.align	2
  53              	CHANNEL_OFFSET_TAB:
  54 0000 081C3044 		.ascii	"\010\0340DXl\200"
  54      586C80
  55              		.section	.text.RI_SetRegisterGlobal,"ax",%progbits
  56              		.align	1
  57              		.global	RI_SetRegisterGlobal
  58              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 2


  59              		.thumb
  60              		.thumb_func
  62              	RI_SetRegisterGlobal:
  63              	.LFB1090:
  64              		.file 1 "Src/register_interface.c"
   1:Src/register_interface.c **** 
   2:Src/register_interface.c **** /**
   3:Src/register_interface.c ****   ******************************************************************************
   4:Src/register_interface.c ****   * @file    register_interface.c
   5:Src/register_interface.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   6:Src/register_interface.c ****   * @brief   This file provides firmware functions that implement the register access for the MCP p
   7:Src/register_interface.c ****   *
   8:Src/register_interface.c ****   *
   9:Src/register_interface.c ****   ******************************************************************************
  10:Src/register_interface.c ****   * @attention
  11:Src/register_interface.c ****   *
  12:Src/register_interface.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  13:Src/register_interface.c ****   * All rights reserved.</center></h2>
  14:Src/register_interface.c ****   *
  15:Src/register_interface.c ****   * This software component is licensed by ST under Ultimate Liberty license
  16:Src/register_interface.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  17:Src/register_interface.c ****   * the License. You may obtain a copy of the License at:
  18:Src/register_interface.c ****   *                             www.st.com/SLA0044
  19:Src/register_interface.c ****   *
  20:Src/register_interface.c ****   ******************************************************************************
  21:Src/register_interface.c ****   */
  22:Src/register_interface.c **** 
  23:Src/register_interface.c **** #include "mc_type.h"
  24:Src/register_interface.c **** #include "string.h"
  25:Src/register_interface.c **** #include "register_interface.h"
  26:Src/register_interface.c **** #include "mc_config.h"
  27:Src/register_interface.c **** #include "mcp.h"
  28:Src/register_interface.c **** #include "mcp_config.h"
  29:Src/register_interface.c **** #include "mcpa.h"
  30:Src/register_interface.c **** #include "mc_configuration_registers.h"
  31:Src/register_interface.c **** 
  32:Src/register_interface.c **** uint8_t RI_SetRegisterGlobal(uint16_t regID, uint8_t typeID, uint8_t *data, uint16_t *size, int16_t
  33:Src/register_interface.c **** {
  65              		.loc 1 33 1
  66              		.cfi_startproc
  67              		@ args = 4, pretend = 0, frame = 32
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 80B5     		push	{r7, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 88B0     		sub	sp, sp, #32
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 40
  77 0004 00AF     		add	r7, sp, #0
  78              	.LCFI2:
  79              		.cfi_def_cfa_register 7
  80 0006 BA60     		str	r2, [r7, #8]
  81 0008 7B60     		str	r3, [r7, #4]
  82 000a 0346     		mov	r3, r0	@ movhi
  83 000c FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 3


  84 000e 0B46     		mov	r3, r1
  85 0010 7B73     		strb	r3, [r7, #13]
  34:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
  86              		.loc 1 34 11
  87 0012 0023     		movs	r3, #0
  88 0014 FB77     		strb	r3, [r7, #31]
  35:Src/register_interface.c ****   switch(typeID)
  89              		.loc 1 35 3
  90 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
  91 0018 083B     		subs	r3, r3, #8
  92 001a 202B     		cmp	r3, #32
  93 001c 00F2C380 		bhi	.L2
  94 0020 01A2     		adr	r2, .L4
  95 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  96 0026 00BF     		.p2align 2
  97              	.L4:
  98 0028 AD000000 		.word	.L8+1
  99 002c A7010000 		.word	.L2+1
 100 0030 A7010000 		.word	.L2+1
 101 0034 A7010000 		.word	.L2+1
 102 0038 A7010000 		.word	.L2+1
 103 003c A7010000 		.word	.L2+1
 104 0040 A7010000 		.word	.L2+1
 105 0044 A7010000 		.word	.L2+1
 106 0048 C7000000 		.word	.L7+1
 107 004c A7010000 		.word	.L2+1
 108 0050 A7010000 		.word	.L2+1
 109 0054 A7010000 		.word	.L2+1
 110 0058 A7010000 		.word	.L2+1
 111 005c A7010000 		.word	.L2+1
 112 0060 A7010000 		.word	.L2+1
 113 0064 A7010000 		.word	.L2+1
 114 0068 13010000 		.word	.L6+1
 115 006c A7010000 		.word	.L2+1
 116 0070 A7010000 		.word	.L2+1
 117 0074 A7010000 		.word	.L2+1
 118 0078 A7010000 		.word	.L2+1
 119 007c A7010000 		.word	.L2+1
 120 0080 A7010000 		.word	.L2+1
 121 0084 A7010000 		.word	.L2+1
 122 0088 2D010000 		.word	.L5+1
 123 008c A7010000 		.word	.L2+1
 124 0090 A7010000 		.word	.L2+1
 125 0094 A7010000 		.word	.L2+1
 126 0098 A7010000 		.word	.L2+1
 127 009c A7010000 		.word	.L2+1
 128 00a0 A7010000 		.word	.L2+1
 129 00a4 A7010000 		.word	.L2+1
 130 00a8 49010000 		.word	.L3+1
 131              		.p2align 1
 132              	.L8:
  36:Src/register_interface.c ****   {
  37:Src/register_interface.c ****     case TYPE_DATA_8BIT:
  38:Src/register_interface.c ****     {
  39:Src/register_interface.c ****       switch (regID)
 133              		.loc 1 39 7
 134 00ac FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 4


 135 00ae 482B     		cmp	r3, #72
 136 00b0 02D1     		bne	.L9
  40:Src/register_interface.c ****       {
  41:Src/register_interface.c ****         case MC_REG_STATUS:
  42:Src/register_interface.c ****         {
  43:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 137              		.loc 1 43 18
 138 00b2 0423     		movs	r3, #4
 139 00b4 FB77     		strb	r3, [r7, #31]
  44:Src/register_interface.c ****           break;
 140              		.loc 1 44 11
 141 00b6 02E0     		b	.L10
 142              	.L9:
  45:Src/register_interface.c ****         }
  46:Src/register_interface.c **** 
  47:Src/register_interface.c ****         default:
  48:Src/register_interface.c ****         {
  49:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 143              		.loc 1 49 18
 144 00b8 0523     		movs	r3, #5
 145 00ba FB77     		strb	r3, [r7, #31]
  50:Src/register_interface.c ****           break;
 146              		.loc 1 50 11
 147 00bc 00BF     		nop
 148              	.L10:
  51:Src/register_interface.c ****         }
  52:Src/register_interface.c ****       }
  53:Src/register_interface.c ****       *size = 1;
 149              		.loc 1 53 13
 150 00be 7B68     		ldr	r3, [r7, #4]
 151 00c0 0122     		movs	r2, #1
 152 00c2 1A80     		strh	r2, [r3]	@ movhi
  54:Src/register_interface.c ****       break;
 153              		.loc 1 54 7
 154 00c4 75E0     		b	.L11
 155              	.L7:
  55:Src/register_interface.c ****     }
  56:Src/register_interface.c **** 
  57:Src/register_interface.c ****     case TYPE_DATA_16BIT:
  58:Src/register_interface.c ****     {
  59:Src/register_interface.c ****       switch (regID)
 156              		.loc 1 59 7
 157 00c6 FB89     		ldrh	r3, [r7, #14]
 158 00c8 41F65832 		movw	r2, #7000
 159 00cc 9342     		cmp	r3, r2
 160 00ce 15D0     		beq	.L12
 161 00d0 41F65832 		movw	r2, #7000
 162 00d4 9342     		cmp	r3, r2
 163 00d6 14DC     		bgt	.L13
 164 00d8 B3F5696F 		cmp	r3, #3728
 165 00dc 14D0     		beq	.L23
 166 00de B3F5696F 		cmp	r3, #3728
 167 00e2 0EDC     		bgt	.L13
 168 00e4 B3F5656F 		cmp	r3, #3664
 169 00e8 0ED0     		beq	.L23
 170 00ea B3F5656F 		cmp	r3, #3664
 171 00ee 08DC     		bgt	.L13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 5


 172 00f0 B3F5B26F 		cmp	r3, #1424
 173 00f4 02D0     		beq	.L12
 174 00f6 B3F5BA6F 		cmp	r3, #1488
 175 00fa 02D1     		bne	.L13
 176              	.L12:
  60:Src/register_interface.c ****       {
  61:Src/register_interface.c **** 
  62:Src/register_interface.c ****         case MC_REG_BUS_VOLTAGE:
  63:Src/register_interface.c ****         case MC_REG_HEATS_TEMP:
  64:Src/register_interface.c ****         case MC_REG_MOTOR_POWER:
  65:Src/register_interface.c ****         {
  66:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 177              		.loc 1 66 18
 178 00fc 0423     		movs	r3, #4
 179 00fe FB77     		strb	r3, [r7, #31]
  67:Src/register_interface.c ****           break;
 180              		.loc 1 67 11
 181 0100 03E0     		b	.L15
 182              	.L13:
  68:Src/register_interface.c ****         }
  69:Src/register_interface.c **** 
  70:Src/register_interface.c ****         case MC_REG_DAC_USER1:
  71:Src/register_interface.c ****         case MC_REG_DAC_USER2:
  72:Src/register_interface.c ****         break;
  73:Src/register_interface.c **** 
  74:Src/register_interface.c ****         default:
  75:Src/register_interface.c ****         {
  76:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 183              		.loc 1 76 18
 184 0102 0523     		movs	r3, #5
 185 0104 FB77     		strb	r3, [r7, #31]
  77:Src/register_interface.c ****           break;
 186              		.loc 1 77 11
 187 0106 00E0     		b	.L15
 188              	.L23:
  72:Src/register_interface.c **** 
 189              		.loc 1 72 9
 190 0108 00BF     		nop
 191              	.L15:
  78:Src/register_interface.c ****         }
  79:Src/register_interface.c ****       }
  80:Src/register_interface.c ****       *size = 2;
 192              		.loc 1 80 13
 193 010a 7B68     		ldr	r3, [r7, #4]
 194 010c 0222     		movs	r2, #2
 195 010e 1A80     		strh	r2, [r3]	@ movhi
  81:Src/register_interface.c ****       break;
 196              		.loc 1 81 7
 197 0110 4FE0     		b	.L11
 198              	.L6:
  82:Src/register_interface.c ****     }
  83:Src/register_interface.c **** 
  84:Src/register_interface.c ****     case TYPE_DATA_32BIT:
  85:Src/register_interface.c ****     {
  86:Src/register_interface.c **** 
  87:Src/register_interface.c ****       switch (regID)
 199              		.loc 1 87 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 6


 200 0112 FB89     		ldrh	r3, [r7, #14]
 201 0114 182B     		cmp	r3, #24
 202 0116 02D1     		bne	.L16
  88:Src/register_interface.c ****       {
  89:Src/register_interface.c ****         case MC_REG_FAULTS_FLAGS:
  90:Src/register_interface.c ****         {
  91:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 203              		.loc 1 91 18
 204 0118 0423     		movs	r3, #4
 205 011a FB77     		strb	r3, [r7, #31]
  92:Src/register_interface.c ****           break;
 206              		.loc 1 92 11
 207 011c 02E0     		b	.L17
 208              	.L16:
  93:Src/register_interface.c ****         }
  94:Src/register_interface.c **** 
  95:Src/register_interface.c ****         default:
  96:Src/register_interface.c ****         {
  97:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 209              		.loc 1 97 18
 210 011e 0523     		movs	r3, #5
 211 0120 FB77     		strb	r3, [r7, #31]
  98:Src/register_interface.c ****           break;
 212              		.loc 1 98 11
 213 0122 00BF     		nop
 214              	.L17:
  99:Src/register_interface.c ****         }
 100:Src/register_interface.c ****       }
 101:Src/register_interface.c ****       *size = 4;
 215              		.loc 1 101 13
 216 0124 7B68     		ldr	r3, [r7, #4]
 217 0126 0422     		movs	r2, #4
 218 0128 1A80     		strh	r2, [r3]	@ movhi
 102:Src/register_interface.c ****       break;
 219              		.loc 1 102 7
 220 012a 42E0     		b	.L11
 221              	.L5:
 222              	.LBB2:
 103:Src/register_interface.c ****     }
 104:Src/register_interface.c **** 
 105:Src/register_interface.c ****     case TYPE_DATA_STRING:
 106:Src/register_interface.c ****     {
 107:Src/register_interface.c ****       const char_t *charData = (const char_t *)data;
 223              		.loc 1 107 21
 224 012c BB68     		ldr	r3, [r7, #8]
 225 012e 7B61     		str	r3, [r7, #20]
 108:Src/register_interface.c ****       char_t *dummy = (char_t *)data;
 226              		.loc 1 108 15
 227 0130 BB68     		ldr	r3, [r7, #8]
 228 0132 3B61     		str	r3, [r7, #16]
 109:Src/register_interface.c ****       retVal = MCP_ERROR_RO_REG;
 229              		.loc 1 109 14
 230 0134 0423     		movs	r3, #4
 231 0136 FB77     		strb	r3, [r7, #31]
 110:Src/register_interface.c ****       /* Used to compute String length stored in RXBUFF even if Reg does not exist */
 111:Src/register_interface.c ****       /* It allows to jump to the next command in the buffer */
 112:Src/register_interface.c ****       (void)RI_MovString(charData, dummy, size, dataAvailable);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 7


 232              		.loc 1 112 13
 233 0138 B7F92830 		ldrsh	r3, [r7, #40]
 234 013c 7A68     		ldr	r2, [r7, #4]
 235 013e 3969     		ldr	r1, [r7, #16]
 236 0140 7869     		ldr	r0, [r7, #20]
 237 0142 FFF7FEFF 		bl	RI_MovString
 113:Src/register_interface.c ****       break;
 238              		.loc 1 113 7
 239 0146 34E0     		b	.L11
 240              	.L3:
 241              	.LBE2:
 242              	.LBB3:
 114:Src/register_interface.c ****     }
 115:Src/register_interface.c **** 
 116:Src/register_interface.c ****     case TYPE_DATA_RAW:
 117:Src/register_interface.c ****     {
 118:Src/register_interface.c ****       uint16_t rawSize = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 243              		.loc 1 118 16
 244 0148 BB68     		ldr	r3, [r7, #8]
 245 014a 1B88     		ldrh	r3, [r3]	@ movhi
 246 014c BB83     		strh	r3, [r7, #28]	@ movhi
 119:Src/register_interface.c ****       /* The size consumed by the structure is the structure size + 2 bytes used to store the size 
 120:Src/register_interface.c ****       *size = rawSize + 2U;
 247              		.loc 1 120 23
 248 014e BB8B     		ldrh	r3, [r7, #28]	@ movhi
 249 0150 0233     		adds	r3, r3, #2
 250 0152 9AB2     		uxth	r2, r3
 251              		.loc 1 120 13
 252 0154 7B68     		ldr	r3, [r7, #4]
 253 0156 1A80     		strh	r2, [r3]	@ movhi
 121:Src/register_interface.c ****       uint8_t *rawData = data; /* rawData points to the first data (after size extraction) */
 254              		.loc 1 121 16
 255 0158 BB68     		ldr	r3, [r7, #8]
 256 015a BB61     		str	r3, [r7, #24]
 122:Src/register_interface.c ****       rawData++;
 257              		.loc 1 122 14
 258 015c BB69     		ldr	r3, [r7, #24]
 259 015e 0133     		adds	r3, r3, #1
 260 0160 BB61     		str	r3, [r7, #24]
 123:Src/register_interface.c ****       rawData++;
 261              		.loc 1 123 14
 262 0162 BB69     		ldr	r3, [r7, #24]
 263 0164 0133     		adds	r3, r3, #1
 264 0166 BB61     		str	r3, [r7, #24]
 124:Src/register_interface.c **** 
 125:Src/register_interface.c ****       if (*size > (uint16_t)dataAvailable)
 265              		.loc 1 125 11
 266 0168 7B68     		ldr	r3, [r7, #4]
 267 016a 1A88     		ldrh	r2, [r3]
 268              		.loc 1 125 17
 269 016c 3B8D     		ldrh	r3, [r7, #40]
 270              		.loc 1 125 10
 271 016e 9A42     		cmp	r2, r3
 272 0170 05D9     		bls	.L18
 126:Src/register_interface.c ****       {
 127:Src/register_interface.c ****         /* The decoded size of the raw structure can not match with transmitted buffer, error in bu
 128:Src/register_interface.c ****            construction */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 8


 129:Src/register_interface.c ****         *size = 0;
 273              		.loc 1 129 15
 274 0172 7B68     		ldr	r3, [r7, #4]
 275 0174 0022     		movs	r2, #0
 276 0176 1A80     		strh	r2, [r3]	@ movhi
 130:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_RAW_FORMAT; /* This error stop the parsing of the CMD buffer */
 277              		.loc 1 130 16
 278 0178 0A23     		movs	r3, #10
 279 017a FB77     		strb	r3, [r7, #31]
 131:Src/register_interface.c ****       }
 132:Src/register_interface.c ****       else
 133:Src/register_interface.c ****       {
 134:Src/register_interface.c ****         switch (regID)
 135:Src/register_interface.c ****         {
 136:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
 137:Src/register_interface.c ****           case MC_REG_MOTOR_CONFIG:
 138:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 139:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
 140:Src/register_interface.c ****           {
 141:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 142:Src/register_interface.c ****             break;
 143:Src/register_interface.c ****           }
 144:Src/register_interface.c **** 
 145:Src/register_interface.c ****           default:
 146:Src/register_interface.c ****           {
 147:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 148:Src/register_interface.c ****             break;
 149:Src/register_interface.c ****           }
 150:Src/register_interface.c ****         }
 151:Src/register_interface.c **** 
 152:Src/register_interface.c ****       }
 153:Src/register_interface.c ****       break;
 280              		.loc 1 153 7
 281 017c 19E0     		b	.L11
 282              	.L18:
 134:Src/register_interface.c ****         {
 283              		.loc 1 134 9
 284 017e FB89     		ldrh	r3, [r7, #14]
 285 0180 E82B     		cmp	r3, #232
 286 0182 09D0     		beq	.L20
 287 0184 E82B     		cmp	r3, #232
 288 0186 0ADC     		bgt	.L21
 289 0188 A82B     		cmp	r3, #168
 290 018a 05D0     		beq	.L20
 291 018c A82B     		cmp	r3, #168
 292 018e 06DC     		bgt	.L21
 293 0190 282B     		cmp	r3, #40
 294 0192 01D0     		beq	.L20
 295 0194 682B     		cmp	r3, #104
 296 0196 02D1     		bne	.L21
 297              	.L20:
 141:Src/register_interface.c ****             break;
 298              		.loc 1 141 20
 299 0198 0423     		movs	r3, #4
 300 019a FB77     		strb	r3, [r7, #31]
 142:Src/register_interface.c ****           }
 301              		.loc 1 142 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 9


 302 019c 02E0     		b	.L19
 303              	.L21:
 147:Src/register_interface.c ****             break;
 304              		.loc 1 147 20
 305 019e 0523     		movs	r3, #5
 306 01a0 FB77     		strb	r3, [r7, #31]
 148:Src/register_interface.c ****           }
 307              		.loc 1 148 13
 308 01a2 00BF     		nop
 309              	.L19:
 310              		.loc 1 153 7
 311 01a4 05E0     		b	.L11
 312              	.L2:
 313              	.LBE3:
 154:Src/register_interface.c ****     }
 155:Src/register_interface.c **** 
 156:Src/register_interface.c ****     default:
 157:Src/register_interface.c ****     {
 158:Src/register_interface.c ****       retVal = MCP_ERROR_BAD_DATA_TYPE;
 314              		.loc 1 158 14
 315 01a6 0723     		movs	r3, #7
 316 01a8 FB77     		strb	r3, [r7, #31]
 159:Src/register_interface.c ****       *size =0; /* From this point we are not able anymore to decode the RX buffer */
 317              		.loc 1 159 13
 318 01aa 7B68     		ldr	r3, [r7, #4]
 319 01ac 0022     		movs	r2, #0
 320 01ae 1A80     		strh	r2, [r3]	@ movhi
 160:Src/register_interface.c ****       break;
 321              		.loc 1 160 7
 322 01b0 00BF     		nop
 323              	.L11:
 161:Src/register_interface.c ****     }
 162:Src/register_interface.c ****   }
 163:Src/register_interface.c ****   return (retVal);
 324              		.loc 1 163 10
 325 01b2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 164:Src/register_interface.c **** }
 326              		.loc 1 164 1
 327 01b4 1846     		mov	r0, r3
 328 01b6 2037     		adds	r7, r7, #32
 329              	.LCFI3:
 330              		.cfi_def_cfa_offset 8
 331 01b8 BD46     		mov	sp, r7
 332              	.LCFI4:
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 01ba 80BD     		pop	{r7, pc}
 336              		.cfi_endproc
 337              	.LFE1090:
 339              		.section	.text.RI_SetRegisterMotor1,"ax",%progbits
 340              		.align	1
 341              		.global	RI_SetRegisterMotor1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	RI_SetRegisterMotor1:
 347              	.LFB1091:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 10


 165:Src/register_interface.c **** 
 166:Src/register_interface.c **** uint8_t RI_SetRegisterMotor1(uint16_t regID, uint8_t typeID, uint8_t *data, uint16_t *size, int16_t
 167:Src/register_interface.c **** {
 348              		.loc 1 167 1
 349              		.cfi_startproc
 350              		@ args = 4, pretend = 0, frame = 88
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              	.LCFI5:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 96B0     		sub	sp, sp, #88
 358              	.LCFI6:
 359              		.cfi_def_cfa_offset 96
 360 0004 00AF     		add	r7, sp, #0
 361              	.LCFI7:
 362              		.cfi_def_cfa_register 7
 363 0006 BA60     		str	r2, [r7, #8]
 364 0008 7B60     		str	r3, [r7, #4]
 365 000a 0346     		mov	r3, r0	@ movhi
 366 000c FB81     		strh	r3, [r7, #14]	@ movhi
 367 000e 0B46     		mov	r3, r1
 368 0010 7B73     		strb	r3, [r7, #13]
 168:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 369              		.loc 1 168 11
 370 0012 0023     		movs	r3, #0
 371 0014 87F85730 		strb	r3, [r7, #87]
 169:Src/register_interface.c ****   uint8_t motorID=0;
 372              		.loc 1 169 11
 373 0018 0023     		movs	r3, #0
 374 001a 87F85630 		strb	r3, [r7, #86]
 170:Src/register_interface.c ****   MCI_Handle_t *pMCIN = &Mci[motorID];
 375              		.loc 1 170 29
 376 001e 97F85620 		ldrb	r2, [r7, #86]	@ zero_extendqisi2
 377              		.loc 1 170 17
 378 0022 1346     		mov	r3, r2
 379 0024 5B00     		lsls	r3, r3, #1
 380 0026 1344     		add	r3, r3, r2
 381 0028 1B01     		lsls	r3, r3, #4
 382 002a 474A     		ldr	r2, .L88
 383 002c 1344     		add	r3, r3, r2
 384 002e 3B65     		str	r3, [r7, #80]
 171:Src/register_interface.c **** 
 172:Src/register_interface.c ****   switch(typeID)
 385              		.loc 1 172 3
 386 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 387 0032 083B     		subs	r3, r3, #8
 388 0034 202B     		cmp	r3, #32
 389 0036 00F2B183 		bhi	.L25
 390 003a 01A2     		adr	r2, .L27
 391 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 392              		.p2align 2
 393              	.L27:
 394 0040 C5000000 		.word	.L31+1
 395 0044 9D070000 		.word	.L25+1
 396 0048 9D070000 		.word	.L25+1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 11


 397 004c 9D070000 		.word	.L25+1
 398 0050 9D070000 		.word	.L25+1
 399 0054 9D070000 		.word	.L25+1
 400 0058 9D070000 		.word	.L25+1
 401 005c 9D070000 		.word	.L25+1
 402 0060 4D010000 		.word	.L30+1
 403 0064 9D070000 		.word	.L25+1
 404 0068 9D070000 		.word	.L25+1
 405 006c 9D070000 		.word	.L25+1
 406 0070 9D070000 		.word	.L25+1
 407 0074 9D070000 		.word	.L25+1
 408 0078 9D070000 		.word	.L25+1
 409 007c 9D070000 		.word	.L25+1
 410 0080 C3050000 		.word	.L29+1
 411 0084 9D070000 		.word	.L25+1
 412 0088 9D070000 		.word	.L25+1
 413 008c 9D070000 		.word	.L25+1
 414 0090 9D070000 		.word	.L25+1
 415 0094 9D070000 		.word	.L25+1
 416 0098 9D070000 		.word	.L25+1
 417 009c 9D070000 		.word	.L25+1
 418 00a0 0F060000 		.word	.L28+1
 419 00a4 9D070000 		.word	.L25+1
 420 00a8 9D070000 		.word	.L25+1
 421 00ac 9D070000 		.word	.L25+1
 422 00b0 9D070000 		.word	.L25+1
 423 00b4 9D070000 		.word	.L25+1
 424 00b8 9D070000 		.word	.L25+1
 425 00bc 9D070000 		.word	.L25+1
 426 00c0 2D060000 		.word	.L26+1
 427              		.p2align 1
 428              	.L31:
 173:Src/register_interface.c ****   {
 174:Src/register_interface.c ****     case TYPE_DATA_8BIT:
 175:Src/register_interface.c ****     {
 176:Src/register_interface.c ****       switch (regID)
 429              		.loc 1 176 7
 430 00c4 FB89     		ldrh	r3, [r7, #14]
 431 00c6 B3F5B16F 		cmp	r3, #1416
 432 00ca 30D0     		beq	.L32
 433 00cc B3F5B16F 		cmp	r3, #1416
 434 00d0 31DC     		bgt	.L33
 435 00d2 B3F5A96F 		cmp	r3, #1352
 436 00d6 2AD0     		beq	.L32
 437 00d8 B3F5A96F 		cmp	r3, #1352
 438 00dc 2BDC     		bgt	.L33
 439 00de 482B     		cmp	r3, #72
 440 00e0 02D0     		beq	.L34
 441 00e2 882B     		cmp	r3, #136
 442 00e4 04D0     		beq	.L35
 443 00e6 26E0     		b	.L33
 444              	.L34:
 177:Src/register_interface.c ****       {
 178:Src/register_interface.c ****         case MC_REG_STATUS:
 179:Src/register_interface.c ****           {
 180:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 445              		.loc 1 180 20
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 12


 446 00e8 0423     		movs	r3, #4
 447 00ea 87F85730 		strb	r3, [r7, #87]
 181:Src/register_interface.c ****             break;
 448              		.loc 1 181 13
 449 00ee 27E0     		b	.L36
 450              	.L35:
 451              	.LBB4:
 182:Src/register_interface.c ****           }
 183:Src/register_interface.c **** 
 184:Src/register_interface.c ****         case MC_REG_CONTROL_MODE:
 185:Src/register_interface.c ****         {
 186:Src/register_interface.c ****           uint8_t regdata8 = *data;
 452              		.loc 1 186 19
 453 00f0 BB68     		ldr	r3, [r7, #8]
 454 00f2 1B78     		ldrb	r3, [r3]
 455 00f4 87F82930 		strb	r3, [r7, #41]
 187:Src/register_interface.c ****           if ((uint8_t)MCM_TORQUE_MODE == regdata8)
 456              		.loc 1 187 14
 457 00f8 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 458 00fc 042B     		cmp	r3, #4
 459 00fe 08D1     		bne	.L37
 188:Src/register_interface.c ****           {
 189:Src/register_interface.c ****             MCI_ExecTorqueRamp(pMCIN, MCI_GetTeref(pMCIN), 0);
 460              		.loc 1 189 13
 461 0100 386D     		ldr	r0, [r7, #80]
 462 0102 FFF7FEFF 		bl	MCI_GetTeref
 463 0106 0346     		mov	r3, r0
 464 0108 0022     		movs	r2, #0
 465 010a 1946     		mov	r1, r3
 466 010c 386D     		ldr	r0, [r7, #80]
 467 010e FFF7FEFF 		bl	MCI_ExecTorqueRamp
 468              	.L37:
 190:Src/register_interface.c ****           }
 191:Src/register_interface.c ****           else
 192:Src/register_interface.c ****           {
 193:Src/register_interface.c ****             /* Nothing to do */
 194:Src/register_interface.c ****           }
 195:Src/register_interface.c **** 
 196:Src/register_interface.c ****           if ((uint8_t)MCM_SPEED_MODE == regdata8)
 469              		.loc 1 196 14
 470 0112 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 471 0116 032B     		cmp	r3, #3
 472 0118 11D1     		bne	.L86
 197:Src/register_interface.c ****           {
 198:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, MCI_GetMecSpeedRefUnit(pMCIN), 0);
 473              		.loc 1 198 13
 474 011a 386D     		ldr	r0, [r7, #80]
 475 011c FFF7FEFF 		bl	MCI_GetMecSpeedRefUnit
 476 0120 0346     		mov	r3, r0
 477 0122 0022     		movs	r2, #0
 478 0124 1946     		mov	r1, r3
 479 0126 386D     		ldr	r0, [r7, #80]
 480 0128 FFF7FEFF 		bl	MCI_ExecSpeedRamp
 199:Src/register_interface.c ****           }
 200:Src/register_interface.c ****           else
 201:Src/register_interface.c ****           {
 202:Src/register_interface.c ****             /* Nothing to do */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 13


 203:Src/register_interface.c ****           }
 204:Src/register_interface.c **** 
 205:Src/register_interface.c ****           break;
 481              		.loc 1 205 11
 482 012c 07E0     		b	.L86
 483              	.L32:
 484              	.LBE4:
 206:Src/register_interface.c ****         }
 207:Src/register_interface.c **** 
 208:Src/register_interface.c ****         case MC_REG_POSITION_CTRL_STATE:
 209:Src/register_interface.c ****         case MC_REG_POSITION_ALIGN_STATE:
 210:Src/register_interface.c ****         {
 211:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 485              		.loc 1 211 18
 486 012e 0423     		movs	r3, #4
 487 0130 87F85730 		strb	r3, [r7, #87]
 212:Src/register_interface.c ****           break;
 488              		.loc 1 212 11
 489 0134 04E0     		b	.L36
 490              	.L33:
 213:Src/register_interface.c ****         }
 214:Src/register_interface.c **** 
 215:Src/register_interface.c ****         default:
 216:Src/register_interface.c ****         {
 217:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 491              		.loc 1 217 18
 492 0136 0523     		movs	r3, #5
 493 0138 87F85730 		strb	r3, [r7, #87]
 218:Src/register_interface.c ****           break;
 494              		.loc 1 218 11
 495 013c 00E0     		b	.L36
 496              	.L86:
 497              	.LBB5:
 205:Src/register_interface.c ****         }
 498              		.loc 1 205 11
 499 013e 00BF     		nop
 500              	.L36:
 501              	.LBE5:
 219:Src/register_interface.c ****         }
 220:Src/register_interface.c ****       }
 221:Src/register_interface.c ****       *size = 1;
 502              		.loc 1 221 13
 503 0140 7B68     		ldr	r3, [r7, #4]
 504 0142 0122     		movs	r2, #1
 505 0144 1A80     		strh	r2, [r3]	@ movhi
 222:Src/register_interface.c ****       break;
 506              		.loc 1 222 7
 507 0146 30E3     		b	.L39
 508              	.L89:
 509              		.align	2
 510              	.L88:
 511 0148 00000000 		.word	Mci
 512              	.L30:
 513              	.LBB6:
 223:Src/register_interface.c ****     }
 224:Src/register_interface.c **** 
 225:Src/register_interface.c ****     case TYPE_DATA_16BIT:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 14


 226:Src/register_interface.c ****     {
 227:Src/register_interface.c ****       uint16_t regdata16 = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 514              		.loc 1 227 16
 515 014c BB68     		ldr	r3, [r7, #8]
 516 014e 1B88     		ldrh	r3, [r3]	@ movhi
 517 0150 7B85     		strh	r3, [r7, #42]	@ movhi
 228:Src/register_interface.c ****       switch (regID)
 518              		.loc 1 228 7
 519 0152 FB89     		ldrh	r3, [r7, #14]
 520 0154 41F65832 		movw	r2, #7000
 521 0158 9342     		cmp	r3, r2
 522 015a 00F0A681 		beq	.L40
 523 015e 41F65832 		movw	r2, #7000
 524 0162 9342     		cmp	r3, r2
 525 0164 00F32482 		bgt	.L41
 526 0168 41F21072 		movw	r2, #5904
 527 016c 9342     		cmp	r3, r2
 528 016e 00F01982 		beq	.L42
 529 0172 41F21072 		movw	r2, #5904
 530 0176 9342     		cmp	r3, r2
 531 0178 00F31A82 		bgt	.L41
 532 017c 41F2D062 		movw	r2, #5840
 533 0180 9342     		cmp	r3, r2
 534 0182 00F00982 		beq	.L43
 535 0186 41F2D062 		movw	r2, #5840
 536 018a 9342     		cmp	r3, r2
 537 018c 00F31082 		bgt	.L41
 538 0190 41F29062 		movw	r2, #5776
 539 0194 9342     		cmp	r3, r2
 540 0196 00F0F981 		beq	.L44
 541 019a 41F29062 		movw	r2, #5776
 542 019e 9342     		cmp	r3, r2
 543 01a0 00F30682 		bgt	.L41
 544 01a4 41F25062 		movw	r2, #5712
 545 01a8 9342     		cmp	r3, r2
 546 01aa 00F0E981 		beq	.L45
 547 01ae 41F25062 		movw	r2, #5712
 548 01b2 9342     		cmp	r3, r2
 549 01b4 00F3FC81 		bgt	.L41
 550 01b8 41F21062 		movw	r2, #5648
 551 01bc 9342     		cmp	r3, r2
 552 01be 00F0D981 		beq	.L46
 553 01c2 41F21062 		movw	r2, #5648
 554 01c6 9342     		cmp	r3, r2
 555 01c8 00F3F281 		bgt	.L41
 556 01cc 41F2D052 		movw	r2, #5584
 557 01d0 9342     		cmp	r3, r2
 558 01d2 00F0C981 		beq	.L47
 559 01d6 41F2D052 		movw	r2, #5584
 560 01da 9342     		cmp	r3, r2
 561 01dc 00F3E881 		bgt	.L41
 562 01e0 41F29052 		movw	r2, #5520
 563 01e4 9342     		cmp	r3, r2
 564 01e6 00F0B981 		beq	.L48
 565 01ea 41F29052 		movw	r2, #5520
 566 01ee 9342     		cmp	r3, r2
 567 01f0 00F3DE81 		bgt	.L41
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 15


 568 01f4 41F25052 		movw	r2, #5456
 569 01f8 9342     		cmp	r3, r2
 570 01fa 00F0A981 		beq	.L49
 571 01fe 41F25052 		movw	r2, #5456
 572 0202 9342     		cmp	r3, r2
 573 0204 00F3D481 		bgt	.L41
 574 0208 41F21052 		movw	r2, #5392
 575 020c 9342     		cmp	r3, r2
 576 020e 00F09981 		beq	.L50
 577 0212 41F21052 		movw	r2, #5392
 578 0216 9342     		cmp	r3, r2
 579 0218 00F3CA81 		bgt	.L41
 580 021c 41F2D042 		movw	r2, #5328
 581 0220 9342     		cmp	r3, r2
 582 0222 00F08981 		beq	.L51
 583 0226 41F2D042 		movw	r2, #5328
 584 022a 9342     		cmp	r3, r2
 585 022c 00F3C081 		bgt	.L41
 586 0230 41F29042 		movw	r2, #5264
 587 0234 9342     		cmp	r3, r2
 588 0236 00F07981 		beq	.L52
 589 023a 41F29042 		movw	r2, #5264
 590 023e 9342     		cmp	r3, r2
 591 0240 00F3B681 		bgt	.L41
 592 0244 41F25042 		movw	r2, #5200
 593 0248 9342     		cmp	r3, r2
 594 024a 00F06981 		beq	.L53
 595 024e 41F25042 		movw	r2, #5200
 596 0252 9342     		cmp	r3, r2
 597 0254 00F3AC81 		bgt	.L41
 598 0258 41F21042 		movw	r2, #5136
 599 025c 9342     		cmp	r3, r2
 600 025e 00F05881 		beq	.L54
 601 0262 41F21042 		movw	r2, #5136
 602 0266 9342     		cmp	r3, r2
 603 0268 00F3A281 		bgt	.L41
 604 026c 41F2D032 		movw	r2, #5072
 605 0270 9342     		cmp	r3, r2
 606 0272 00F04781 		beq	.L55
 607 0276 41F2D032 		movw	r2, #5072
 608 027a 9342     		cmp	r3, r2
 609 027c 00F39881 		bgt	.L41
 610 0280 41F29032 		movw	r2, #5008
 611 0284 9342     		cmp	r3, r2
 612 0286 00F03681 		beq	.L56
 613 028a 41F29032 		movw	r2, #5008
 614 028e 9342     		cmp	r3, r2
 615 0290 00F38E81 		bgt	.L41
 616 0294 B3F5696F 		cmp	r3, #3728
 617 0298 00F08E81 		beq	.L87
 618 029c B3F5696F 		cmp	r3, #3728
 619 02a0 00F38681 		bgt	.L41
 620 02a4 B3F5656F 		cmp	r3, #3664
 621 02a8 00F08681 		beq	.L87
 622 02ac B3F5656F 		cmp	r3, #3664
 623 02b0 00F37E81 		bgt	.L41
 624 02b4 B3F5316F 		cmp	r3, #2832
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 16


 625 02b8 00F01981 		beq	.L58
 626 02bc B3F5316F 		cmp	r3, #2832
 627 02c0 00F37681 		bgt	.L41
 628 02c4 B3F52D6F 		cmp	r3, #2768
 629 02c8 00F01181 		beq	.L58
 630 02cc B3F52D6F 		cmp	r3, #2768
 631 02d0 00F36E81 		bgt	.L41
 632 02d4 B3F5296F 		cmp	r3, #2704
 633 02d8 00F00981 		beq	.L58
 634 02dc B3F5296F 		cmp	r3, #2704
 635 02e0 00F36681 		bgt	.L41
 636 02e4 B3F5256F 		cmp	r3, #2640
 637 02e8 00F00181 		beq	.L58
 638 02ec B3F5256F 		cmp	r3, #2640
 639 02f0 00F35E81 		bgt	.L41
 640 02f4 B3F5216F 		cmp	r3, #2576
 641 02f8 00F0F980 		beq	.L58
 642 02fc B3F5216F 		cmp	r3, #2576
 643 0300 00F35681 		bgt	.L41
 644 0304 B3F51D6F 		cmp	r3, #2512
 645 0308 00F0F180 		beq	.L58
 646 030c B3F51D6F 		cmp	r3, #2512
 647 0310 00F34E81 		bgt	.L41
 648 0314 B3F5196F 		cmp	r3, #2448
 649 0318 00F0DC80 		beq	.L59
 650 031c B3F5196F 		cmp	r3, #2448
 651 0320 00F34681 		bgt	.L41
 652 0324 B3F5156F 		cmp	r3, #2384
 653 0328 00F0C780 		beq	.L60
 654 032c B3F5156F 		cmp	r3, #2384
 655 0330 00F33E81 		bgt	.L41
 656 0334 B3F5116F 		cmp	r3, #2320
 657 0338 00F0BB80 		beq	.L61
 658 033c B3F5116F 		cmp	r3, #2320
 659 0340 00F33681 		bgt	.L41
 660 0344 B3F50D6F 		cmp	r3, #2256
 661 0348 00F0B380 		beq	.L61
 662 034c B3F50D6F 		cmp	r3, #2256
 663 0350 00F32E81 		bgt	.L41
 664 0354 B3F5096F 		cmp	r3, #2192
 665 0358 00F0AB80 		beq	.L61
 666 035c B3F5096F 		cmp	r3, #2192
 667 0360 00F32681 		bgt	.L41
 668 0364 B3F5056F 		cmp	r3, #2128
 669 0368 00F0A380 		beq	.L61
 670 036c B3F5056F 		cmp	r3, #2128
 671 0370 00F31E81 		bgt	.L41
 672 0374 B3F5016F 		cmp	r3, #2064
 673 0378 00F09B80 		beq	.L61
 674 037c B3F5016F 		cmp	r3, #2064
 675 0380 00F31681 		bgt	.L41
 676 0384 B3F5FA6F 		cmp	r3, #2000
 677 0388 00F09380 		beq	.L61
 678 038c B3F5FA6F 		cmp	r3, #2000
 679 0390 00F30E81 		bgt	.L41
 680 0394 B3F5F26F 		cmp	r3, #1936
 681 0398 00F08B80 		beq	.L61
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 17


 682 039c B3F5F26F 		cmp	r3, #1936
 683 03a0 00F30681 		bgt	.L41
 684 03a4 B3F5BA6F 		cmp	r3, #1488
 685 03a8 7FD0     		beq	.L40
 686 03aa B3F5BA6F 		cmp	r3, #1488
 687 03ae 00F3FF80 		bgt	.L41
 688 03b2 B3F5B26F 		cmp	r3, #1424
 689 03b6 78D0     		beq	.L40
 690 03b8 B3F5B26F 		cmp	r3, #1424
 691 03bc 00F3F880 		bgt	.L41
 692 03c0 B3F5447F 		cmp	r3, #784
 693 03c4 6AD0     		beq	.L62
 694 03c6 B3F5447F 		cmp	r3, #784
 695 03ca 00F3F180 		bgt	.L41
 696 03ce B3F5347F 		cmp	r3, #720
 697 03d2 5CD0     		beq	.L63
 698 03d4 B3F5347F 		cmp	r3, #720
 699 03d8 00F3EA80 		bgt	.L41
 700 03dc B3F5247F 		cmp	r3, #656
 701 03e0 4ED0     		beq	.L64
 702 03e2 B3F5247F 		cmp	r3, #656
 703 03e6 00F3E380 		bgt	.L41
 704 03ea B3F5047F 		cmp	r3, #528
 705 03ee 40D0     		beq	.L65
 706 03f0 B3F5047F 		cmp	r3, #528
 707 03f4 00F3DC80 		bgt	.L41
 708 03f8 B3F5E87F 		cmp	r3, #464
 709 03fc 32D0     		beq	.L66
 710 03fe B3F5E87F 		cmp	r3, #464
 711 0402 00F3D580 		bgt	.L41
 712 0406 B3F5C87F 		cmp	r3, #400
 713 040a 24D0     		beq	.L67
 714 040c B3F5C87F 		cmp	r3, #400
 715 0410 00F3CE80 		bgt	.L41
 716 0414 B3F5887F 		cmp	r3, #272
 717 0418 16D0     		beq	.L68
 718 041a B3F5887F 		cmp	r3, #272
 719 041e 00F3C780 		bgt	.L41
 720 0422 902B     		cmp	r3, #144
 721 0424 02D0     		beq	.L69
 722 0426 D02B     		cmp	r3, #208
 723 0428 07D0     		beq	.L70
 724 042a C1E0     		b	.L41
 725              	.L69:
 229:Src/register_interface.c ****       {
 230:Src/register_interface.c ****         case MC_REG_SPEED_KP:
 231:Src/register_interface.c ****         {
 232:Src/register_interface.c ****           PID_SetKP(&PIDSpeedHandle_M1, (int16_t)regdata16);
 726              		.loc 1 232 11
 727 042c B7F92A30 		ldrsh	r3, [r7, #42]
 728 0430 1946     		mov	r1, r3
 729 0432 A748     		ldr	r0, .L90
 730 0434 FFF7FEFF 		bl	PID_SetKP
 233:Src/register_interface.c ****           break;
 731              		.loc 1 233 11
 732 0438 BFE0     		b	.L71
 733              	.L70:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 18


 234:Src/register_interface.c ****         }
 235:Src/register_interface.c **** 
 236:Src/register_interface.c ****         case MC_REG_SPEED_KI:
 237:Src/register_interface.c ****         {
 238:Src/register_interface.c ****           PID_SetKI(&PIDSpeedHandle_M1, (int16_t)regdata16);
 734              		.loc 1 238 11
 735 043a B7F92A30 		ldrsh	r3, [r7, #42]
 736 043e 1946     		mov	r1, r3
 737 0440 A348     		ldr	r0, .L90
 738 0442 FFF7FEFF 		bl	PID_SetKI
 239:Src/register_interface.c ****           break;
 739              		.loc 1 239 11
 740 0446 B8E0     		b	.L71
 741              	.L68:
 240:Src/register_interface.c ****         }
 241:Src/register_interface.c **** 
 242:Src/register_interface.c ****         case MC_REG_SPEED_KD:
 243:Src/register_interface.c ****         {
 244:Src/register_interface.c ****           PID_SetKD(&PIDSpeedHandle_M1, (int16_t)regdata16);
 742              		.loc 1 244 11
 743 0448 B7F92A30 		ldrsh	r3, [r7, #42]
 744 044c 1946     		mov	r1, r3
 745 044e A048     		ldr	r0, .L90
 746 0450 FFF7FEFF 		bl	PID_SetKD
 245:Src/register_interface.c ****           break;
 747              		.loc 1 245 11
 748 0454 B1E0     		b	.L71
 749              	.L67:
 246:Src/register_interface.c ****         }
 247:Src/register_interface.c **** 
 248:Src/register_interface.c ****         case MC_REG_I_Q_KP:
 249:Src/register_interface.c ****         {
 250:Src/register_interface.c ****           PID_SetKP(&PIDIqHandle_M1, (int16_t)regdata16);
 750              		.loc 1 250 11
 751 0456 B7F92A30 		ldrsh	r3, [r7, #42]
 752 045a 1946     		mov	r1, r3
 753 045c 9D48     		ldr	r0, .L90+4
 754 045e FFF7FEFF 		bl	PID_SetKP
 251:Src/register_interface.c ****           break;
 755              		.loc 1 251 11
 756 0462 AAE0     		b	.L71
 757              	.L66:
 252:Src/register_interface.c ****         }
 253:Src/register_interface.c **** 
 254:Src/register_interface.c ****         case MC_REG_I_Q_KI:
 255:Src/register_interface.c ****         {
 256:Src/register_interface.c ****           PID_SetKI(&PIDIqHandle_M1, (int16_t)regdata16);
 758              		.loc 1 256 11
 759 0464 B7F92A30 		ldrsh	r3, [r7, #42]
 760 0468 1946     		mov	r1, r3
 761 046a 9A48     		ldr	r0, .L90+4
 762 046c FFF7FEFF 		bl	PID_SetKI
 257:Src/register_interface.c ****           break;
 763              		.loc 1 257 11
 764 0470 A3E0     		b	.L71
 765              	.L65:
 258:Src/register_interface.c ****         }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 19


 259:Src/register_interface.c **** 
 260:Src/register_interface.c ****         case MC_REG_I_Q_KD:
 261:Src/register_interface.c ****         {
 262:Src/register_interface.c ****           PID_SetKD(&PIDIqHandle_M1, (int16_t)regdata16);
 766              		.loc 1 262 11
 767 0472 B7F92A30 		ldrsh	r3, [r7, #42]
 768 0476 1946     		mov	r1, r3
 769 0478 9648     		ldr	r0, .L90+4
 770 047a FFF7FEFF 		bl	PID_SetKD
 263:Src/register_interface.c ****           break;
 771              		.loc 1 263 11
 772 047e 9CE0     		b	.L71
 773              	.L64:
 264:Src/register_interface.c ****         }
 265:Src/register_interface.c **** 
 266:Src/register_interface.c ****         case MC_REG_I_D_KP:
 267:Src/register_interface.c ****         {
 268:Src/register_interface.c ****           PID_SetKP(&PIDIdHandle_M1, (int16_t)regdata16);
 774              		.loc 1 268 11
 775 0480 B7F92A30 		ldrsh	r3, [r7, #42]
 776 0484 1946     		mov	r1, r3
 777 0486 9448     		ldr	r0, .L90+8
 778 0488 FFF7FEFF 		bl	PID_SetKP
 269:Src/register_interface.c ****           break;
 779              		.loc 1 269 11
 780 048c 95E0     		b	.L71
 781              	.L63:
 270:Src/register_interface.c ****         }
 271:Src/register_interface.c **** 
 272:Src/register_interface.c ****         case MC_REG_I_D_KI:
 273:Src/register_interface.c ****         {
 274:Src/register_interface.c ****           PID_SetKI(&PIDIdHandle_M1, (int16_t)regdata16);
 782              		.loc 1 274 11
 783 048e B7F92A30 		ldrsh	r3, [r7, #42]
 784 0492 1946     		mov	r1, r3
 785 0494 9048     		ldr	r0, .L90+8
 786 0496 FFF7FEFF 		bl	PID_SetKI
 275:Src/register_interface.c ****           break;
 787              		.loc 1 275 11
 788 049a 8EE0     		b	.L71
 789              	.L62:
 276:Src/register_interface.c ****         }
 277:Src/register_interface.c **** 
 278:Src/register_interface.c ****         case MC_REG_I_D_KD:
 279:Src/register_interface.c ****         {
 280:Src/register_interface.c ****           PID_SetKD(&PIDIdHandle_M1, (int16_t)regdata16);
 790              		.loc 1 280 11
 791 049c B7F92A30 		ldrsh	r3, [r7, #42]
 792 04a0 1946     		mov	r1, r3
 793 04a2 8D48     		ldr	r0, .L90+8
 794 04a4 FFF7FEFF 		bl	PID_SetKD
 281:Src/register_interface.c ****           break;
 795              		.loc 1 281 11
 796 04a8 87E0     		b	.L71
 797              	.L40:
 282:Src/register_interface.c ****         }
 283:Src/register_interface.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 20


 284:Src/register_interface.c ****         case MC_REG_BUS_VOLTAGE:
 285:Src/register_interface.c ****         case MC_REG_HEATS_TEMP:
 286:Src/register_interface.c ****         case MC_REG_MOTOR_POWER:
 287:Src/register_interface.c ****         {
 288:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 798              		.loc 1 288 18
 799 04aa 0423     		movs	r3, #4
 800 04ac 87F85730 		strb	r3, [r7, #87]
 289:Src/register_interface.c ****           break;
 801              		.loc 1 289 11
 802 04b0 83E0     		b	.L71
 803              	.L61:
 290:Src/register_interface.c ****         }
 291:Src/register_interface.c **** 
 292:Src/register_interface.c ****         case MC_REG_I_A:
 293:Src/register_interface.c ****         case MC_REG_I_B:
 294:Src/register_interface.c ****         case MC_REG_I_ALPHA_MEAS:
 295:Src/register_interface.c ****         case MC_REG_I_BETA_MEAS:
 296:Src/register_interface.c ****         case MC_REG_I_Q_MEAS:
 297:Src/register_interface.c ****         case MC_REG_I_D_MEAS:
 298:Src/register_interface.c ****         case MC_REG_FLUXWK_BUS_MEAS:
 299:Src/register_interface.c ****         {
 300:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 804              		.loc 1 300 18
 805 04b2 0423     		movs	r3, #4
 806 04b4 87F85730 		strb	r3, [r7, #87]
 301:Src/register_interface.c ****           break;
 807              		.loc 1 301 11
 808 04b8 7FE0     		b	.L71
 809              	.L60:
 810              	.LBB7:
 302:Src/register_interface.c ****         }
 303:Src/register_interface.c **** 
 304:Src/register_interface.c ****         case MC_REG_I_Q_REF:
 305:Src/register_interface.c ****         {
 306:Src/register_interface.c ****           qd_t currComp;
 307:Src/register_interface.c ****           currComp = MCI_GetIqdref(pMCIN);
 811              		.loc 1 307 22
 812 04ba 386D     		ldr	r0, [r7, #80]
 813 04bc FFF7FEFF 		bl	MCI_GetIqdref
 814 04c0 0346     		mov	r3, r0
 815 04c2 7B62     		str	r3, [r7, #36]
 308:Src/register_interface.c ****           currComp.q = (int16_t)regdata16;
 816              		.loc 1 308 24
 817 04c4 B7F92A30 		ldrsh	r3, [r7, #42]
 818              		.loc 1 308 22
 819 04c8 BB84     		strh	r3, [r7, #36]	@ movhi
 309:Src/register_interface.c ****           MCI_SetCurrentReferences(pMCIN,currComp);
 820              		.loc 1 309 11
 821 04ca 796A     		ldr	r1, [r7, #36]
 822 04cc 386D     		ldr	r0, [r7, #80]
 823 04ce FFF7FEFF 		bl	MCI_SetCurrentReferences
 310:Src/register_interface.c ****           break;
 824              		.loc 1 310 11
 825 04d2 72E0     		b	.L71
 826              	.L59:
 827              	.LBE7:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 21


 828              	.LBB8:
 311:Src/register_interface.c ****         }
 312:Src/register_interface.c **** 
 313:Src/register_interface.c ****         case MC_REG_I_D_REF:
 314:Src/register_interface.c ****         {
 315:Src/register_interface.c ****           qd_t currComp;
 316:Src/register_interface.c ****           currComp = MCI_GetIqdref(pMCIN);
 829              		.loc 1 316 22
 830 04d4 386D     		ldr	r0, [r7, #80]
 831 04d6 FFF7FEFF 		bl	MCI_GetIqdref
 832 04da 0346     		mov	r3, r0
 833 04dc 3B62     		str	r3, [r7, #32]
 317:Src/register_interface.c ****           currComp.d = (int16_t)regdata16;
 834              		.loc 1 317 24
 835 04de B7F92A30 		ldrsh	r3, [r7, #42]
 836              		.loc 1 317 22
 837 04e2 7B84     		strh	r3, [r7, #34]	@ movhi
 318:Src/register_interface.c ****           MCI_SetCurrentReferences(pMCIN,currComp);
 838              		.loc 1 318 11
 839 04e4 396A     		ldr	r1, [r7, #32]
 840 04e6 386D     		ldr	r0, [r7, #80]
 841 04e8 FFF7FEFF 		bl	MCI_SetCurrentReferences
 319:Src/register_interface.c ****           break;
 842              		.loc 1 319 11
 843 04ec 65E0     		b	.L71
 844              	.L58:
 845              	.LBE8:
 320:Src/register_interface.c ****         }
 321:Src/register_interface.c **** 
 322:Src/register_interface.c ****         case MC_REG_V_Q:
 323:Src/register_interface.c ****         case MC_REG_V_D:
 324:Src/register_interface.c ****         case MC_REG_V_ALPHA:
 325:Src/register_interface.c ****         case MC_REG_V_BETA:
 326:Src/register_interface.c ****         case MC_REG_ENCODER_EL_ANGLE:
 327:Src/register_interface.c ****         case MC_REG_ENCODER_SPEED:
 328:Src/register_interface.c ****         {
 329:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 846              		.loc 1 329 18
 847 04ee 0423     		movs	r3, #4
 848 04f0 87F85730 		strb	r3, [r7, #87]
 330:Src/register_interface.c ****           break;
 849              		.loc 1 330 11
 850 04f4 61E0     		b	.L71
 851              	.L56:
 331:Src/register_interface.c ****         }
 332:Src/register_interface.c **** 
 333:Src/register_interface.c ****         case MC_REG_DAC_USER1:
 334:Src/register_interface.c ****         case MC_REG_DAC_USER2:
 335:Src/register_interface.c ****           break;
 336:Src/register_interface.c **** 
 337:Src/register_interface.c ****         case MC_REG_POSITION_KP:
 338:Src/register_interface.c ****         {
 339:Src/register_interface.c ****           PID_SetKP(&PID_PosParamsM1, regdata16);
 852              		.loc 1 339 11
 853 04f6 B7F92A30 		ldrsh	r3, [r7, #42]
 854 04fa 1946     		mov	r1, r3
 855 04fc 7748     		ldr	r0, .L90+12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 22


 856 04fe FFF7FEFF 		bl	PID_SetKP
 340:Src/register_interface.c ****           break;
 857              		.loc 1 340 11
 858 0502 5AE0     		b	.L71
 859              	.L55:
 341:Src/register_interface.c ****         }
 342:Src/register_interface.c **** 
 343:Src/register_interface.c ****         case MC_REG_POSITION_KI:
 344:Src/register_interface.c ****         {
 345:Src/register_interface.c ****           PID_SetKI(&PID_PosParamsM1, regdata16);
 860              		.loc 1 345 11
 861 0504 B7F92A30 		ldrsh	r3, [r7, #42]
 862 0508 1946     		mov	r1, r3
 863 050a 7448     		ldr	r0, .L90+12
 864 050c FFF7FEFF 		bl	PID_SetKI
 346:Src/register_interface.c ****           break;
 865              		.loc 1 346 11
 866 0510 53E0     		b	.L71
 867              	.L54:
 347:Src/register_interface.c ****         }
 348:Src/register_interface.c **** 
 349:Src/register_interface.c ****         case MC_REG_POSITION_KD:
 350:Src/register_interface.c ****         {
 351:Src/register_interface.c ****           PID_SetKD(&PID_PosParamsM1, regdata16);
 868              		.loc 1 351 11
 869 0512 B7F92A30 		ldrsh	r3, [r7, #42]
 870 0516 1946     		mov	r1, r3
 871 0518 7048     		ldr	r0, .L90+12
 872 051a FFF7FEFF 		bl	PID_SetKD
 352:Src/register_interface.c ****           break;
 873              		.loc 1 352 11
 874 051e 4CE0     		b	.L71
 875              	.L53:
 353:Src/register_interface.c ****         }
 354:Src/register_interface.c **** 
 355:Src/register_interface.c ****         case MC_REG_SPEED_KP_DIV:
 356:Src/register_interface.c ****         {
 357:Src/register_interface.c ****           PID_SetKPDivisorPOW2(&PIDSpeedHandle_M1, regdata16);
 876              		.loc 1 357 11
 877 0520 7B8D     		ldrh	r3, [r7, #42]
 878 0522 1946     		mov	r1, r3
 879 0524 6A48     		ldr	r0, .L90
 880 0526 FFF7FEFF 		bl	PID_SetKPDivisorPOW2
 358:Src/register_interface.c ****           break;
 881              		.loc 1 358 11
 882 052a 46E0     		b	.L71
 883              	.L52:
 359:Src/register_interface.c ****         }
 360:Src/register_interface.c **** 
 361:Src/register_interface.c ****         case MC_REG_SPEED_KI_DIV:
 362:Src/register_interface.c ****         {
 363:Src/register_interface.c ****           PID_SetKIDivisorPOW2(&PIDSpeedHandle_M1, regdata16);
 884              		.loc 1 363 11
 885 052c 7B8D     		ldrh	r3, [r7, #42]
 886 052e 1946     		mov	r1, r3
 887 0530 6748     		ldr	r0, .L90
 888 0532 FFF7FEFF 		bl	PID_SetKIDivisorPOW2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 23


 364:Src/register_interface.c ****           break;
 889              		.loc 1 364 11
 890 0536 40E0     		b	.L71
 891              	.L51:
 365:Src/register_interface.c ****         }
 366:Src/register_interface.c **** 
 367:Src/register_interface.c ****         case MC_REG_SPEED_KD_DIV:
 368:Src/register_interface.c ****         {
 369:Src/register_interface.c ****           PID_SetKDDivisorPOW2(&PIDSpeedHandle_M1, regdata16);
 892              		.loc 1 369 11
 893 0538 7B8D     		ldrh	r3, [r7, #42]
 894 053a 1946     		mov	r1, r3
 895 053c 6448     		ldr	r0, .L90
 896 053e FFF7FEFF 		bl	PID_SetKDDivisorPOW2
 370:Src/register_interface.c ****           break;
 897              		.loc 1 370 11
 898 0542 3AE0     		b	.L71
 899              	.L50:
 371:Src/register_interface.c ****         }
 372:Src/register_interface.c **** 
 373:Src/register_interface.c ****         case MC_REG_I_D_KP_DIV:
 374:Src/register_interface.c ****         {
 375:Src/register_interface.c ****           PID_SetKPDivisorPOW2(&PIDIdHandle_M1, regdata16);
 900              		.loc 1 375 11
 901 0544 7B8D     		ldrh	r3, [r7, #42]
 902 0546 1946     		mov	r1, r3
 903 0548 6348     		ldr	r0, .L90+8
 904 054a FFF7FEFF 		bl	PID_SetKPDivisorPOW2
 376:Src/register_interface.c ****           break;
 905              		.loc 1 376 11
 906 054e 34E0     		b	.L71
 907              	.L49:
 377:Src/register_interface.c ****         }
 378:Src/register_interface.c **** 
 379:Src/register_interface.c ****         case MC_REG_I_D_KI_DIV:
 380:Src/register_interface.c ****         {
 381:Src/register_interface.c ****           PID_SetKIDivisorPOW2(&PIDIdHandle_M1, regdata16);
 908              		.loc 1 381 11
 909 0550 7B8D     		ldrh	r3, [r7, #42]
 910 0552 1946     		mov	r1, r3
 911 0554 6048     		ldr	r0, .L90+8
 912 0556 FFF7FEFF 		bl	PID_SetKIDivisorPOW2
 382:Src/register_interface.c ****           break;
 913              		.loc 1 382 11
 914 055a 2EE0     		b	.L71
 915              	.L48:
 383:Src/register_interface.c ****         }
 384:Src/register_interface.c **** 
 385:Src/register_interface.c ****         case MC_REG_I_D_KD_DIV:
 386:Src/register_interface.c ****         {
 387:Src/register_interface.c ****           PID_SetKDDivisorPOW2(&PIDIdHandle_M1, regdata16);
 916              		.loc 1 387 11
 917 055c 7B8D     		ldrh	r3, [r7, #42]
 918 055e 1946     		mov	r1, r3
 919 0560 5D48     		ldr	r0, .L90+8
 920 0562 FFF7FEFF 		bl	PID_SetKDDivisorPOW2
 388:Src/register_interface.c ****           break;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 24


 921              		.loc 1 388 11
 922 0566 28E0     		b	.L71
 923              	.L47:
 389:Src/register_interface.c ****         }
 390:Src/register_interface.c **** 
 391:Src/register_interface.c ****         case MC_REG_I_Q_KP_DIV:
 392:Src/register_interface.c ****         {
 393:Src/register_interface.c ****           PID_SetKPDivisorPOW2(&PIDIqHandle_M1, regdata16);
 924              		.loc 1 393 11
 925 0568 7B8D     		ldrh	r3, [r7, #42]
 926 056a 1946     		mov	r1, r3
 927 056c 5948     		ldr	r0, .L90+4
 928 056e FFF7FEFF 		bl	PID_SetKPDivisorPOW2
 394:Src/register_interface.c ****           break;
 929              		.loc 1 394 11
 930 0572 22E0     		b	.L71
 931              	.L46:
 395:Src/register_interface.c ****         }
 396:Src/register_interface.c **** 
 397:Src/register_interface.c ****         case MC_REG_I_Q_KI_DIV:
 398:Src/register_interface.c ****         {
 399:Src/register_interface.c ****           PID_SetKIDivisorPOW2(&PIDIqHandle_M1, regdata16);
 932              		.loc 1 399 11
 933 0574 7B8D     		ldrh	r3, [r7, #42]
 934 0576 1946     		mov	r1, r3
 935 0578 5648     		ldr	r0, .L90+4
 936 057a FFF7FEFF 		bl	PID_SetKIDivisorPOW2
 400:Src/register_interface.c ****           break;
 937              		.loc 1 400 11
 938 057e 1CE0     		b	.L71
 939              	.L45:
 401:Src/register_interface.c ****         }
 402:Src/register_interface.c **** 
 403:Src/register_interface.c ****         case MC_REG_I_Q_KD_DIV:
 404:Src/register_interface.c ****         {
 405:Src/register_interface.c ****           PID_SetKDDivisorPOW2(&PIDIqHandle_M1, regdata16);
 940              		.loc 1 405 11
 941 0580 7B8D     		ldrh	r3, [r7, #42]
 942 0582 1946     		mov	r1, r3
 943 0584 5348     		ldr	r0, .L90+4
 944 0586 FFF7FEFF 		bl	PID_SetKDDivisorPOW2
 406:Src/register_interface.c ****           break;
 945              		.loc 1 406 11
 946 058a 16E0     		b	.L71
 947              	.L44:
 407:Src/register_interface.c ****         }
 408:Src/register_interface.c **** 
 409:Src/register_interface.c ****         case MC_REG_POSITION_KP_DIV:
 410:Src/register_interface.c ****         {
 411:Src/register_interface.c ****           PID_SetKPDivisorPOW2(&PID_PosParamsM1, regdata16);
 948              		.loc 1 411 11
 949 058c 7B8D     		ldrh	r3, [r7, #42]
 950 058e 1946     		mov	r1, r3
 951 0590 5248     		ldr	r0, .L90+12
 952 0592 FFF7FEFF 		bl	PID_SetKPDivisorPOW2
 412:Src/register_interface.c ****           break;
 953              		.loc 1 412 11
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 25


 954 0596 10E0     		b	.L71
 955              	.L43:
 413:Src/register_interface.c ****         }
 414:Src/register_interface.c **** 
 415:Src/register_interface.c ****         case MC_REG_POSITION_KI_DIV:
 416:Src/register_interface.c ****         {
 417:Src/register_interface.c ****           PID_SetKIDivisorPOW2(&PID_PosParamsM1, regdata16);
 956              		.loc 1 417 11
 957 0598 7B8D     		ldrh	r3, [r7, #42]
 958 059a 1946     		mov	r1, r3
 959 059c 4F48     		ldr	r0, .L90+12
 960 059e FFF7FEFF 		bl	PID_SetKIDivisorPOW2
 418:Src/register_interface.c ****           break;
 961              		.loc 1 418 11
 962 05a2 0AE0     		b	.L71
 963              	.L42:
 419:Src/register_interface.c ****         }
 420:Src/register_interface.c **** 
 421:Src/register_interface.c ****         case MC_REG_POSITION_KD_DIV:
 422:Src/register_interface.c ****         {
 423:Src/register_interface.c ****           PID_SetKDDivisorPOW2(&PID_PosParamsM1, regdata16);
 964              		.loc 1 423 11
 965 05a4 7B8D     		ldrh	r3, [r7, #42]
 966 05a6 1946     		mov	r1, r3
 967 05a8 4C48     		ldr	r0, .L90+12
 968 05aa FFF7FEFF 		bl	PID_SetKDDivisorPOW2
 424:Src/register_interface.c ****           break;
 969              		.loc 1 424 11
 970 05ae 04E0     		b	.L71
 971              	.L41:
 425:Src/register_interface.c ****         }
 426:Src/register_interface.c **** 
 427:Src/register_interface.c ****         default:
 428:Src/register_interface.c ****         {
 429:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 972              		.loc 1 429 18
 973 05b0 0523     		movs	r3, #5
 974 05b2 87F85730 		strb	r3, [r7, #87]
 430:Src/register_interface.c ****           break;
 975              		.loc 1 430 11
 976 05b6 00E0     		b	.L71
 977              	.L87:
 335:Src/register_interface.c **** 
 978              		.loc 1 335 11
 979 05b8 00BF     		nop
 980              	.L71:
 431:Src/register_interface.c ****         }
 432:Src/register_interface.c ****       }
 433:Src/register_interface.c ****       *size = 2;
 981              		.loc 1 433 13
 982 05ba 7B68     		ldr	r3, [r7, #4]
 983 05bc 0222     		movs	r2, #2
 984 05be 1A80     		strh	r2, [r3]	@ movhi
 434:Src/register_interface.c ****       break;
 985              		.loc 1 434 7
 986 05c0 F3E0     		b	.L39
 987              	.L29:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 26


 988              	.LBE6:
 989              	.LBB9:
 435:Src/register_interface.c ****     }
 436:Src/register_interface.c **** 
 437:Src/register_interface.c ****     case TYPE_DATA_32BIT:
 438:Src/register_interface.c ****     {
 439:Src/register_interface.c ****       uint32_t regdata32 = *(uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 990              		.loc 1 439 16
 991 05c2 BB68     		ldr	r3, [r7, #8]
 992 05c4 1B68     		ldr	r3, [r3]
 993 05c6 FB62     		str	r3, [r7, #44]
 440:Src/register_interface.c **** 
 441:Src/register_interface.c ****       switch (regID)
 994              		.loc 1 441 7
 995 05c8 FB89     		ldrh	r3, [r7, #14]
 996 05ca 982B     		cmp	r3, #152
 997 05cc 09D0     		beq	.L72
 998 05ce 982B     		cmp	r3, #152
 999 05d0 15DC     		bgt	.L73
 1000 05d2 182B     		cmp	r3, #24
 1001 05d4 01D0     		beq	.L74
 1002 05d6 582B     		cmp	r3, #88
 1003 05d8 11D1     		bne	.L73
 1004              	.L74:
 442:Src/register_interface.c ****       {
 443:Src/register_interface.c ****         case MC_REG_FAULTS_FLAGS:
 444:Src/register_interface.c ****         case MC_REG_SPEED_MEAS:
 445:Src/register_interface.c ****         {
 446:Src/register_interface.c ****           retVal = MCP_ERROR_RO_REG;
 1005              		.loc 1 446 18
 1006 05da 0423     		movs	r3, #4
 1007 05dc 87F85730 		strb	r3, [r7, #87]
 447:Src/register_interface.c ****           break;
 1008              		.loc 1 447 11
 1009 05e0 11E0     		b	.L75
 1010              	.L72:
 448:Src/register_interface.c ****         }
 449:Src/register_interface.c **** 
 450:Src/register_interface.c ****         case MC_REG_SPEED_REF:
 451:Src/register_interface.c ****         {
 452:Src/register_interface.c ****           MCI_ExecSpeedRamp(pMCIN,((((int16_t)regdata32) * ((int16_t)SPEED_UNIT)) / (int16_t)U_RPM)
 1011              		.loc 1 452 38
 1012 05e2 FB6A     		ldr	r3, [r7, #44]
 1013 05e4 1BB2     		sxth	r3, r3
 1014              		.loc 1 452 11
 1015 05e6 3E4A     		ldr	r2, .L90+16
 1016 05e8 82FB0312 		smull	r1, r2, r2, r3
 1017 05ec DB17     		asrs	r3, r3, #31
 1018 05ee D31A     		subs	r3, r2, r3
 1019 05f0 1BB2     		sxth	r3, r3
 1020 05f2 0022     		movs	r2, #0
 1021 05f4 1946     		mov	r1, r3
 1022 05f6 386D     		ldr	r0, [r7, #80]
 1023 05f8 FFF7FEFF 		bl	MCI_ExecSpeedRamp
 453:Src/register_interface.c ****           break;
 1024              		.loc 1 453 11
 1025 05fc 03E0     		b	.L75
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 27


 1026              	.L73:
 454:Src/register_interface.c ****         }
 455:Src/register_interface.c **** 
 456:Src/register_interface.c ****         default:
 457:Src/register_interface.c ****         {
 458:Src/register_interface.c ****           retVal = MCP_ERROR_UNKNOWN_REG;
 1027              		.loc 1 458 18
 1028 05fe 0523     		movs	r3, #5
 1029 0600 87F85730 		strb	r3, [r7, #87]
 459:Src/register_interface.c ****           break;
 1030              		.loc 1 459 11
 1031 0604 00BF     		nop
 1032              	.L75:
 460:Src/register_interface.c ****         }
 461:Src/register_interface.c ****       }
 462:Src/register_interface.c ****       *size = 4;
 1033              		.loc 1 462 13
 1034 0606 7B68     		ldr	r3, [r7, #4]
 1035 0608 0422     		movs	r2, #4
 1036 060a 1A80     		strh	r2, [r3]	@ movhi
 463:Src/register_interface.c ****       break;
 1037              		.loc 1 463 7
 1038 060c CDE0     		b	.L39
 1039              	.L28:
 1040              	.LBE9:
 1041              	.LBB10:
 464:Src/register_interface.c ****     }
 465:Src/register_interface.c **** 
 466:Src/register_interface.c ****     case TYPE_DATA_STRING:
 467:Src/register_interface.c ****     {
 468:Src/register_interface.c ****       const char_t *charData = (const char_t *)data;
 1042              		.loc 1 468 21
 1043 060e BB68     		ldr	r3, [r7, #8]
 1044 0610 7B63     		str	r3, [r7, #52]
 469:Src/register_interface.c ****       char_t *dummy = (char_t *)data;
 1045              		.loc 1 469 15
 1046 0612 BB68     		ldr	r3, [r7, #8]
 1047 0614 3B63     		str	r3, [r7, #48]
 470:Src/register_interface.c ****       retVal = MCP_ERROR_RO_REG;
 1048              		.loc 1 470 14
 1049 0616 0423     		movs	r3, #4
 1050 0618 87F85730 		strb	r3, [r7, #87]
 471:Src/register_interface.c ****       /* Used to compute String length stored in RXBUFF even if Reg does not exist */
 472:Src/register_interface.c ****       /* It allows to jump to the next command in the buffer */
 473:Src/register_interface.c ****       (void)RI_MovString(charData, dummy, size, dataAvailable);
 1051              		.loc 1 473 13
 1052 061c B7F96030 		ldrsh	r3, [r7, #96]
 1053 0620 7A68     		ldr	r2, [r7, #4]
 1054 0622 396B     		ldr	r1, [r7, #48]
 1055 0624 786B     		ldr	r0, [r7, #52]
 1056 0626 FFF7FEFF 		bl	RI_MovString
 474:Src/register_interface.c ****       break;
 1057              		.loc 1 474 7
 1058 062a BEE0     		b	.L39
 1059              	.L26:
 1060              	.LBE10:
 1061              	.LBB11:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 28


 475:Src/register_interface.c ****     }
 476:Src/register_interface.c **** 
 477:Src/register_interface.c ****     case TYPE_DATA_RAW:
 478:Src/register_interface.c ****     {
 479:Src/register_interface.c ****       uint16_t rawSize = *(uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 1062              		.loc 1 479 16
 1063 062c BB68     		ldr	r3, [r7, #8]
 1064 062e 1B88     		ldrh	r3, [r3]	@ movhi
 1065 0630 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 480:Src/register_interface.c ****       /* The size consumed by the structure is the structure size + 2 bytes used to store the size 
 481:Src/register_interface.c ****       *size = rawSize + 2U;
 1066              		.loc 1 481 23
 1067 0634 B7F84E30 		ldrh	r3, [r7, #78]	@ movhi
 1068 0638 0233     		adds	r3, r3, #2
 1069 063a 9AB2     		uxth	r2, r3
 1070              		.loc 1 481 13
 1071 063c 7B68     		ldr	r3, [r7, #4]
 1072 063e 1A80     		strh	r2, [r3]	@ movhi
 482:Src/register_interface.c ****       uint8_t *rawData = data; /* rawData points to the first data (after size extraction) */
 1073              		.loc 1 482 16
 1074 0640 BB68     		ldr	r3, [r7, #8]
 1075 0642 BB64     		str	r3, [r7, #72]
 483:Src/register_interface.c ****       rawData++;
 1076              		.loc 1 483 14
 1077 0644 BB6C     		ldr	r3, [r7, #72]
 1078 0646 0133     		adds	r3, r3, #1
 1079 0648 BB64     		str	r3, [r7, #72]
 484:Src/register_interface.c ****       rawData++;
 1080              		.loc 1 484 14
 1081 064a BB6C     		ldr	r3, [r7, #72]
 1082 064c 0133     		adds	r3, r3, #1
 1083 064e BB64     		str	r3, [r7, #72]
 485:Src/register_interface.c **** 
 486:Src/register_interface.c ****       if (*size > (uint16_t)dataAvailable)
 1084              		.loc 1 486 11
 1085 0650 7B68     		ldr	r3, [r7, #4]
 1086 0652 1A88     		ldrh	r2, [r3]
 1087              		.loc 1 486 17
 1088 0654 B7F86030 		ldrh	r3, [r7, #96]
 1089              		.loc 1 486 10
 1090 0658 9A42     		cmp	r2, r3
 1091 065a 06D9     		bls	.L76
 487:Src/register_interface.c ****       {
 488:Src/register_interface.c ****         /* The decoded size of the raw structure can not match with transmitted buffer, error in bu
 489:Src/register_interface.c ****            construction */
 490:Src/register_interface.c ****         *size = 0;
 1092              		.loc 1 490 15
 1093 065c 7B68     		ldr	r3, [r7, #4]
 1094 065e 0022     		movs	r2, #0
 1095 0660 1A80     		strh	r2, [r3]	@ movhi
 491:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_RAW_FORMAT; /* This error stop the parsing of the CMD buffer */
 1096              		.loc 1 491 16
 1097 0662 0A23     		movs	r3, #10
 1098 0664 87F85730 		strb	r3, [r7, #87]
 492:Src/register_interface.c ****       }
 493:Src/register_interface.c ****       else
 494:Src/register_interface.c ****       {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 29


 495:Src/register_interface.c ****         switch (regID)
 496:Src/register_interface.c ****         {
 497:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
 498:Src/register_interface.c ****           case MC_REG_MOTOR_CONFIG:
 499:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 500:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
 501:Src/register_interface.c ****           {
 502:Src/register_interface.c ****             retVal = MCP_ERROR_RO_REG;
 503:Src/register_interface.c ****             break;
 504:Src/register_interface.c ****           }
 505:Src/register_interface.c **** 
 506:Src/register_interface.c ****           case MC_REG_SPEED_RAMP:
 507:Src/register_interface.c ****           {
 508:Src/register_interface.c ****             int32_t rpm;
 509:Src/register_interface.c ****             uint16_t duration;
 510:Src/register_interface.c **** 
 511:Src/register_interface.c ****             rpm = *(int32_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 512:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 513:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, (int16_t)((rpm * SPEED_UNIT) / U_RPM), duration);
 514:Src/register_interface.c ****             break;
 515:Src/register_interface.c ****           }
 516:Src/register_interface.c **** 
 517:Src/register_interface.c ****           case MC_REG_TORQUE_RAMP:
 518:Src/register_interface.c ****           {
 519:Src/register_interface.c ****             uint32_t torque;
 520:Src/register_interface.c ****             uint16_t duration;
 521:Src/register_interface.c **** 
 522:Src/register_interface.c ****             torque = *(uint32_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 523:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 524:Src/register_interface.c ****             MCI_ExecTorqueRamp(pMCIN, (int16_t)torque, duration);
 525:Src/register_interface.c ****             break;
 526:Src/register_interface.c ****           }
 527:Src/register_interface.c **** 
 528:Src/register_interface.c ****           case MC_REG_POSITION_RAMP:
 529:Src/register_interface.c ****           {
 530:Src/register_interface.c ****             FloatToU32 Position;
 531:Src/register_interface.c ****             FloatToU32 Duration;
 532:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 533:Src/register_interface.c ****             Position.U32_Val = ((int32_t)(*(int16_t *)&rawData[2]))<<16 | *(uint16_t *)rawData;
 534:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 535:Src/register_interface.c ****             Duration.U32_Val = ((int32_t)(*(int16_t *)&rawData[6]))<<16 | *(uint16_t *)&rawData[4];
 536:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 537:Src/register_interface.c ****             break;
 538:Src/register_interface.c ****           }
 539:Src/register_interface.c **** 
 540:Src/register_interface.c ****           case MC_REG_CURRENT_REF:
 541:Src/register_interface.c ****           {
 542:Src/register_interface.c ****             qd_t currComp;
 543:Src/register_interface.c ****             currComp.q = *((int16_t *) rawData); //cstat !MISRAC2012-Rule-11.3
 544:Src/register_interface.c ****             currComp.d = *((int16_t *) &rawData[2]); //cstat !MISRAC2012-Rule-11.3
 545:Src/register_interface.c ****             MCI_SetCurrentReferences(pMCIN, currComp);
 546:Src/register_interface.c ****             break;
 547:Src/register_interface.c ****           }
 548:Src/register_interface.c **** 
 549:Src/register_interface.c ****           case MC_REG_ASYNC_UARTA:
 550:Src/register_interface.c ****           {
 551:Src/register_interface.c ****             retVal =  MCPA_cfgLog (&MCPA_UART_A, rawData);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 30


 552:Src/register_interface.c ****             break;
 553:Src/register_interface.c ****           }
 554:Src/register_interface.c **** 
 555:Src/register_interface.c ****           default:
 556:Src/register_interface.c ****           {
 557:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 558:Src/register_interface.c ****             break;
 559:Src/register_interface.c ****           }
 560:Src/register_interface.c ****         }
 561:Src/register_interface.c ****       }
 562:Src/register_interface.c ****       break;
 1099              		.loc 1 562 7
 1100 0668 9FE0     		b	.L39
 1101              	.L76:
 495:Src/register_interface.c ****         {
 1102              		.loc 1 495 9
 1103 066a FB89     		ldrh	r3, [r7, #14]
 1104 066c B3F5A56F 		cmp	r3, #1320
 1105 0670 00F08780 		beq	.L78
 1106 0674 B3F5A56F 		cmp	r3, #1320
 1107 0678 00F38B80 		bgt	.L79
 1108 067c B3F56A7F 		cmp	r3, #936
 1109 0680 53D0     		beq	.L80
 1110 0682 B3F56A7F 		cmp	r3, #936
 1111 0686 00F38480 		bgt	.L79
 1112 068a B3F55A7F 		cmp	r3, #872
 1113 068e 6BD0     		beq	.L81
 1114 0690 B3F55A7F 		cmp	r3, #872
 1115 0694 7DDC     		bgt	.L79
 1116 0696 B3F5F47F 		cmp	r3, #488
 1117 069a 36D0     		beq	.L82
 1118 069c B3F5F47F 		cmp	r3, #488
 1119 06a0 77DC     		bgt	.L79
 1120 06a2 B3F5D47F 		cmp	r3, #424
 1121 06a6 1DD0     		beq	.L83
 1122 06a8 B3F5D47F 		cmp	r3, #424
 1123 06ac 71DC     		bgt	.L79
 1124 06ae E82B     		cmp	r3, #232
 1125 06b0 09D0     		beq	.L84
 1126 06b2 E82B     		cmp	r3, #232
 1127 06b4 6DDC     		bgt	.L79
 1128 06b6 A82B     		cmp	r3, #168
 1129 06b8 05D0     		beq	.L84
 1130 06ba A82B     		cmp	r3, #168
 1131 06bc 69DC     		bgt	.L79
 1132 06be 282B     		cmp	r3, #40
 1133 06c0 01D0     		beq	.L84
 1134 06c2 682B     		cmp	r3, #104
 1135 06c4 65D1     		bne	.L79
 1136              	.L84:
 502:Src/register_interface.c ****             break;
 1137              		.loc 1 502 20
 1138 06c6 0423     		movs	r3, #4
 1139 06c8 87F85730 		strb	r3, [r7, #87]
 503:Src/register_interface.c ****           }
 1140              		.loc 1 503 13
 1141 06cc 65E0     		b	.L77
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 31


 1142              	.L91:
 1143 06ce 00BF     		.align	2
 1144              	.L90:
 1145 06d0 00000000 		.word	PIDSpeedHandle_M1
 1146 06d4 00000000 		.word	PIDIqHandle_M1
 1147 06d8 00000000 		.word	PIDIdHandle_M1
 1148 06dc 00000000 		.word	PID_PosParamsM1
 1149 06e0 ABAAAA2A 		.word	715827883
 1150              	.L83:
 1151              	.LBB12:
 511:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 1152              		.loc 1 511 17
 1153 06e4 BB6C     		ldr	r3, [r7, #72]
 1154 06e6 1B68     		ldr	r3, [r3]
 1155 06e8 FB63     		str	r3, [r7, #60]
 512:Src/register_interface.c ****             MCI_ExecSpeedRamp(pMCIN, (int16_t)((rpm * SPEED_UNIT) / U_RPM), duration);
 1156              		.loc 1 512 22
 1157 06ea BB6C     		ldr	r3, [r7, #72]
 1158 06ec 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1159 06ee 7B87     		strh	r3, [r7, #58]	@ movhi
 513:Src/register_interface.c ****             break;
 1160              		.loc 1 513 67
 1161 06f0 FB6B     		ldr	r3, [r7, #60]
 1162 06f2 314A     		ldr	r2, .L92
 1163 06f4 82FB0312 		smull	r1, r2, r2, r3
 1164 06f8 DB17     		asrs	r3, r3, #31
 1165 06fa D31A     		subs	r3, r2, r3
 513:Src/register_interface.c ****             break;
 1166              		.loc 1 513 13
 1167 06fc 1BB2     		sxth	r3, r3
 1168 06fe 7A8F     		ldrh	r2, [r7, #58]
 1169 0700 1946     		mov	r1, r3
 1170 0702 386D     		ldr	r0, [r7, #80]
 1171 0704 FFF7FEFF 		bl	MCI_ExecSpeedRamp
 514:Src/register_interface.c ****           }
 1172              		.loc 1 514 13
 1173 0708 47E0     		b	.L77
 1174              	.L82:
 1175              	.LBE12:
 1176              	.LBB13:
 522:Src/register_interface.c ****             duration = *(uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 1177              		.loc 1 522 20
 1178 070a BB6C     		ldr	r3, [r7, #72]
 1179 070c 1B68     		ldr	r3, [r3]
 1180 070e 7B64     		str	r3, [r7, #68]
 523:Src/register_interface.c ****             MCI_ExecTorqueRamp(pMCIN, (int16_t)torque, duration);
 1181              		.loc 1 523 22
 1182 0710 BB6C     		ldr	r3, [r7, #72]
 1183 0712 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1184 0714 A7F84230 		strh	r3, [r7, #66]	@ movhi
 524:Src/register_interface.c ****             break;
 1185              		.loc 1 524 13
 1186 0718 7B6C     		ldr	r3, [r7, #68]
 1187 071a 1BB2     		sxth	r3, r3
 1188 071c B7F84220 		ldrh	r2, [r7, #66]
 1189 0720 1946     		mov	r1, r3
 1190 0722 386D     		ldr	r0, [r7, #80]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 32


 1191 0724 FFF7FEFF 		bl	MCI_ExecTorqueRamp
 525:Src/register_interface.c ****           }
 1192              		.loc 1 525 13
 1193 0728 37E0     		b	.L77
 1194              	.L80:
 1195              	.LBE13:
 1196              	.LBB14:
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1197              		.loc 1 533 55
 1198 072a BB6C     		ldr	r3, [r7, #72]
 1199 072c 0233     		adds	r3, r3, #2
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1200              		.loc 1 533 43
 1201 072e B3F90030 		ldrsh	r3, [r3]
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1202              		.loc 1 533 68
 1203 0732 1B04     		lsls	r3, r3, #16
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1204              		.loc 1 533 75
 1205 0734 BA6C     		ldr	r2, [r7, #72]
 1206 0736 1288     		ldrh	r2, [r2]
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1207              		.loc 1 533 73
 1208 0738 1343     		orrs	r3, r3, r2
 533:Src/register_interface.c ****             /* 32 bits access are split into 2x16 bits access */
 1209              		.loc 1 533 30
 1210 073a FB61     		str	r3, [r7, #28]
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1211              		.loc 1 535 55
 1212 073c BB6C     		ldr	r3, [r7, #72]
 1213 073e 0633     		adds	r3, r3, #6
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1214              		.loc 1 535 43
 1215 0740 B3F90030 		ldrsh	r3, [r3]
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1216              		.loc 1 535 68
 1217 0744 1B04     		lsls	r3, r3, #16
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1218              		.loc 1 535 88
 1219 0746 BA6C     		ldr	r2, [r7, #72]
 1220 0748 0432     		adds	r2, r2, #4
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1221              		.loc 1 535 75
 1222 074a 1288     		ldrh	r2, [r2]
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1223              		.loc 1 535 73
 1224 074c 1343     		orrs	r3, r3, r2
 535:Src/register_interface.c ****             MCI_ExecPositionCommand(pMCIN, Position.Float_Val, Duration.Float_Val);
 1225              		.loc 1 535 30
 1226 074e BB61     		str	r3, [r7, #24]
 536:Src/register_interface.c ****             break;
 1227              		.loc 1 536 13
 1228 0750 D7ED077A 		vldr.32	s15, [r7, #28]
 1229 0754 97ED067A 		vldr.32	s14, [r7, #24]
 1230 0758 F0EE470A 		vmov.f32	s1, s14
 1231 075c B0EE670A 		vmov.f32	s0, s15
 1232 0760 386D     		ldr	r0, [r7, #80]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 33


 1233 0762 FFF7FEFF 		bl	MCI_ExecPositionCommand
 537:Src/register_interface.c ****           }
 1234              		.loc 1 537 13
 1235 0766 18E0     		b	.L77
 1236              	.L81:
 1237              	.LBE14:
 1238              	.LBB15:
 543:Src/register_interface.c ****             currComp.d = *((int16_t *) &rawData[2]); //cstat !MISRAC2012-Rule-11.3
 1239              		.loc 1 543 26
 1240 0768 BB6C     		ldr	r3, [r7, #72]
 1241 076a B3F90030 		ldrsh	r3, [r3]
 543:Src/register_interface.c ****             currComp.d = *((int16_t *) &rawData[2]); //cstat !MISRAC2012-Rule-11.3
 1242              		.loc 1 543 24
 1243 076e BB82     		strh	r3, [r7, #20]	@ movhi
 544:Src/register_interface.c ****             MCI_SetCurrentReferences(pMCIN, currComp);
 1244              		.loc 1 544 24
 1245 0770 BB6C     		ldr	r3, [r7, #72]
 1246 0772 B3F90230 		ldrsh	r3, [r3, #2]
 1247 0776 FB82     		strh	r3, [r7, #22]	@ movhi
 545:Src/register_interface.c ****             break;
 1248              		.loc 1 545 13
 1249 0778 7969     		ldr	r1, [r7, #20]
 1250 077a 386D     		ldr	r0, [r7, #80]
 1251 077c FFF7FEFF 		bl	MCI_SetCurrentReferences
 546:Src/register_interface.c ****           }
 1252              		.loc 1 546 13
 1253 0780 0BE0     		b	.L77
 1254              	.L78:
 1255              	.LBE15:
 551:Src/register_interface.c ****             break;
 1256              		.loc 1 551 23
 1257 0782 B96C     		ldr	r1, [r7, #72]
 1258 0784 0D48     		ldr	r0, .L92+4
 1259 0786 FFF7FEFF 		bl	MCPA_cfgLog
 1260 078a 0346     		mov	r3, r0
 1261 078c 87F85730 		strb	r3, [r7, #87]
 552:Src/register_interface.c ****           }
 1262              		.loc 1 552 13
 1263 0790 03E0     		b	.L77
 1264              	.L79:
 557:Src/register_interface.c ****             break;
 1265              		.loc 1 557 20
 1266 0792 0523     		movs	r3, #5
 1267 0794 87F85730 		strb	r3, [r7, #87]
 558:Src/register_interface.c ****           }
 1268              		.loc 1 558 13
 1269 0798 00BF     		nop
 1270              	.L77:
 1271              		.loc 1 562 7
 1272 079a 06E0     		b	.L39
 1273              	.L25:
 1274              	.LBE11:
 563:Src/register_interface.c ****     }
 564:Src/register_interface.c **** 
 565:Src/register_interface.c ****     default:
 566:Src/register_interface.c ****     {
 567:Src/register_interface.c ****       retVal = MCP_ERROR_BAD_DATA_TYPE;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 34


 1275              		.loc 1 567 14
 1276 079c 0723     		movs	r3, #7
 1277 079e 87F85730 		strb	r3, [r7, #87]
 568:Src/register_interface.c ****       *size =0; /* From this point we are not able anymore to decode the RX buffer */
 1278              		.loc 1 568 13
 1279 07a2 7B68     		ldr	r3, [r7, #4]
 1280 07a4 0022     		movs	r2, #0
 1281 07a6 1A80     		strh	r2, [r3]	@ movhi
 569:Src/register_interface.c ****       break;
 1282              		.loc 1 569 7
 1283 07a8 00BF     		nop
 1284              	.L39:
 570:Src/register_interface.c ****     }
 571:Src/register_interface.c ****   }
 572:Src/register_interface.c ****   return (retVal);
 1285              		.loc 1 572 10
 1286 07aa 97F85730 		ldrb	r3, [r7, #87]	@ zero_extendqisi2
 573:Src/register_interface.c **** }
 1287              		.loc 1 573 1
 1288 07ae 1846     		mov	r0, r3
 1289 07b0 5837     		adds	r7, r7, #88
 1290              	.LCFI8:
 1291              		.cfi_def_cfa_offset 8
 1292 07b2 BD46     		mov	sp, r7
 1293              	.LCFI9:
 1294              		.cfi_def_cfa_register 13
 1295              		@ sp needed
 1296 07b4 80BD     		pop	{r7, pc}
 1297              	.L93:
 1298 07b6 00BF     		.align	2
 1299              	.L92:
 1300 07b8 ABAAAA2A 		.word	715827883
 1301 07bc 00000000 		.word	MCPA_UART_A
 1302              		.cfi_endproc
 1303              	.LFE1091:
 1305              		.section	.text.RI_GetRegisterGlobal,"ax",%progbits
 1306              		.align	1
 1307              		.global	RI_GetRegisterGlobal
 1308              		.syntax unified
 1309              		.thumb
 1310              		.thumb_func
 1312              	RI_GetRegisterGlobal:
 1313              	.LFB1092:
 574:Src/register_interface.c **** 
 575:Src/register_interface.c **** uint8_t RI_GetRegisterGlobal(uint16_t regID,uint8_t typeID,uint8_t * data,uint16_t *size,int16_t fr
 1314              		.loc 1 575 108
 1315              		.cfi_startproc
 1316              		@ args = 4, pretend = 0, frame = 56
 1317              		@ frame_needed = 1, uses_anonymous_args = 0
 1318 0000 80B5     		push	{r7, lr}
 1319              	.LCFI10:
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 8EB0     		sub	sp, sp, #56
 1324              	.LCFI11:
 1325              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 35


 1326 0004 00AF     		add	r7, sp, #0
 1327              	.LCFI12:
 1328              		.cfi_def_cfa_register 7
 1329 0006 BA60     		str	r2, [r7, #8]
 1330 0008 7B60     		str	r3, [r7, #4]
 1331 000a 0346     		mov	r3, r0	@ movhi
 1332 000c FB81     		strh	r3, [r7, #14]	@ movhi
 1333 000e 0B46     		mov	r3, r1
 1334 0010 7B73     		strb	r3, [r7, #13]
 576:Src/register_interface.c ****     uint8_t retVal = MCP_CMD_OK;
 1335              		.loc 1 576 13
 1336 0012 0023     		movs	r3, #0
 1337 0014 87F83730 		strb	r3, [r7, #55]
 577:Src/register_interface.c ****     uint8_t motorID=0;
 1338              		.loc 1 577 13
 1339 0018 0023     		movs	r3, #0
 1340 001a 87F83630 		strb	r3, [r7, #54]
 578:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[motorID];
 1341              		.loc 1 578 31
 1342 001e 97F83620 		ldrb	r2, [r7, #54]	@ zero_extendqisi2
 1343              		.loc 1 578 19
 1344 0022 1346     		mov	r3, r2
 1345 0024 5B00     		lsls	r3, r3, #1
 1346 0026 1344     		add	r3, r3, r2
 1347 0028 1B01     		lsls	r3, r3, #4
 1348 002a 8F4A     		ldr	r2, .L128
 1349 002c 1344     		add	r3, r3, r2
 1350 002e 3B63     		str	r3, [r7, #48]
 579:Src/register_interface.c ****     switch (typeID)
 1351              		.loc 1 579 5
 1352 0030 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1353 0032 083B     		subs	r3, r3, #8
 1354 0034 202B     		cmp	r3, #32
 1355 0036 00F20D81 		bhi	.L95
 1356 003a 01A2     		adr	r2, .L97
 1357 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1358              		.p2align 2
 1359              	.L97:
 1360 0040 C5000000 		.word	.L101+1
 1361 0044 55020000 		.word	.L95+1
 1362 0048 55020000 		.word	.L95+1
 1363 004c 55020000 		.word	.L95+1
 1364 0050 55020000 		.word	.L95+1
 1365 0054 55020000 		.word	.L95+1
 1366 0058 55020000 		.word	.L95+1
 1367 005c 55020000 		.word	.L95+1
 1368 0060 E5000000 		.word	.L100+1
 1369 0064 55020000 		.word	.L95+1
 1370 0068 55020000 		.word	.L95+1
 1371 006c 55020000 		.word	.L95+1
 1372 0070 55020000 		.word	.L95+1
 1373 0074 55020000 		.word	.L95+1
 1374 0078 55020000 		.word	.L95+1
 1375 007c 55020000 		.word	.L95+1
 1376 0080 15010000 		.word	.L99+1
 1377 0084 55020000 		.word	.L95+1
 1378 0088 55020000 		.word	.L95+1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 36


 1379 008c 55020000 		.word	.L95+1
 1380 0090 55020000 		.word	.L95+1
 1381 0094 55020000 		.word	.L95+1
 1382 0098 55020000 		.word	.L95+1
 1383 009c 55020000 		.word	.L95+1
 1384 00a0 AB010000 		.word	.L98+1
 1385 00a4 55020000 		.word	.L95+1
 1386 00a8 55020000 		.word	.L95+1
 1387 00ac 55020000 		.word	.L95+1
 1388 00b0 55020000 		.word	.L95+1
 1389 00b4 55020000 		.word	.L95+1
 1390 00b8 55020000 		.word	.L95+1
 1391 00bc 55020000 		.word	.L95+1
 1392 00c0 F7010000 		.word	.L96+1
 1393              		.p2align 1
 1394              	.L101:
 580:Src/register_interface.c ****     {
 581:Src/register_interface.c ****       case TYPE_DATA_8BIT:
 582:Src/register_interface.c ****       {
 583:Src/register_interface.c ****         if (freeSpace > 0)
 1395              		.loc 1 583 12
 1396 00c4 B7F94030 		ldrsh	r3, [r7, #64]
 1397 00c8 002B     		cmp	r3, #0
 1398 00ca 07DD     		ble	.L102
 584:Src/register_interface.c ****         {
 585:Src/register_interface.c ****           switch (regID)
 586:Src/register_interface.c ****           {
 587:Src/register_interface.c ****             default:
 588:Src/register_interface.c ****             {
 589:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 1399              		.loc 1 589 22
 1400 00cc 0523     		movs	r3, #5
 1401 00ce 87F83730 		strb	r3, [r7, #55]
 590:Src/register_interface.c ****               break;
 1402              		.loc 1 590 15
 1403 00d2 00BF     		nop
 591:Src/register_interface.c ****             }
 592:Src/register_interface.c ****           }
 593:Src/register_interface.c ****           *size = 1;
 1404              		.loc 1 593 17
 1405 00d4 7B68     		ldr	r3, [r7, #4]
 1406 00d6 0122     		movs	r2, #1
 1407 00d8 1A80     		strh	r2, [r3]	@ movhi
 594:Src/register_interface.c ****         }
 595:Src/register_interface.c ****         else
 596:Src/register_interface.c ****         {
 597:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 598:Src/register_interface.c ****         }
 599:Src/register_interface.c ****         break;
 1408              		.loc 1 599 9
 1409 00da BFE0     		b	.L104
 1410              	.L102:
 597:Src/register_interface.c ****         }
 1411              		.loc 1 597 18
 1412 00dc 0823     		movs	r3, #8
 1413 00de 87F83730 		strb	r3, [r7, #55]
 1414              		.loc 1 599 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 37


 1415 00e2 BBE0     		b	.L104
 1416              	.L100:
 600:Src/register_interface.c ****       }
 601:Src/register_interface.c **** 
 602:Src/register_interface.c ****       case TYPE_DATA_16BIT:
 603:Src/register_interface.c ****       {
 604:Src/register_interface.c ****         if (freeSpace >= 2)
 1417              		.loc 1 604 12
 1418 00e4 B7F94030 		ldrsh	r3, [r7, #64]
 1419 00e8 012B     		cmp	r3, #1
 1420 00ea 0FDD     		ble	.L105
 605:Src/register_interface.c ****         {
 606:Src/register_interface.c ****           switch (regID)
 1421              		.loc 1 606 11
 1422 00ec FB89     		ldrh	r3, [r7, #14]
 1423 00ee B3F5656F 		cmp	r3, #3664
 1424 00f2 06D0     		beq	.L127
 1425 00f4 B3F5696F 		cmp	r3, #3728
 1426 00f8 03D0     		beq	.L127
 607:Src/register_interface.c ****           {
 608:Src/register_interface.c ****             case MC_REG_DAC_USER1:
 609:Src/register_interface.c ****             case MC_REG_DAC_USER2:
 610:Src/register_interface.c ****               break;
 611:Src/register_interface.c **** 
 612:Src/register_interface.c ****             default:
 613:Src/register_interface.c ****             {
 614:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 1427              		.loc 1 614 22
 1428 00fa 0523     		movs	r3, #5
 1429 00fc 87F83730 		strb	r3, [r7, #55]
 615:Src/register_interface.c ****               break;
 1430              		.loc 1 615 15
 1431 0100 00E0     		b	.L108
 1432              	.L127:
 610:Src/register_interface.c **** 
 1433              		.loc 1 610 15
 1434 0102 00BF     		nop
 1435              	.L108:
 616:Src/register_interface.c ****             }
 617:Src/register_interface.c ****           }
 618:Src/register_interface.c ****           *size = 2;
 1436              		.loc 1 618 17
 1437 0104 7B68     		ldr	r3, [r7, #4]
 1438 0106 0222     		movs	r2, #2
 1439 0108 1A80     		strh	r2, [r3]	@ movhi
 619:Src/register_interface.c ****         }
 620:Src/register_interface.c ****         else
 621:Src/register_interface.c ****         {
 622:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 623:Src/register_interface.c ****         }
 624:Src/register_interface.c ****         break;
 1440              		.loc 1 624 9
 1441 010a A7E0     		b	.L104
 1442              	.L105:
 622:Src/register_interface.c ****         }
 1443              		.loc 1 622 18
 1444 010c 0823     		movs	r3, #8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 38


 1445 010e 87F83730 		strb	r3, [r7, #55]
 1446              		.loc 1 624 9
 1447 0112 A3E0     		b	.L104
 1448              	.L99:
 1449              	.LBB16:
 625:Src/register_interface.c ****       }
 626:Src/register_interface.c **** 
 627:Src/register_interface.c ****       case TYPE_DATA_32BIT:
 628:Src/register_interface.c ****       {
 629:Src/register_interface.c ****         uint32_t *regdataU32 = (uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 1450              		.loc 1 629 19
 1451 0114 BB68     		ldr	r3, [r7, #8]
 1452 0116 3B62     		str	r3, [r7, #32]
 630:Src/register_interface.c ****         if (freeSpace >= 4)
 1453              		.loc 1 630 12
 1454 0118 B7F94030 		ldrsh	r3, [r7, #64]
 1455 011c 032B     		cmp	r3, #3
 1456 011e 40DD     		ble	.L110
 631:Src/register_interface.c ****         {
 632:Src/register_interface.c ****           switch (regID)
 1457              		.loc 1 632 11
 1458 0120 FB89     		ldrh	r3, [r7, #14]
 1459 0122 41F29862 		movw	r2, #5784
 1460 0126 9342     		cmp	r3, r2
 1461 0128 26D0     		beq	.L111
 1462 012a 41F29862 		movw	r2, #5784
 1463 012e 9342     		cmp	r3, r2
 1464 0130 2FDC     		bgt	.L112
 1465 0132 41F21862 		movw	r2, #5656
 1466 0136 9342     		cmp	r3, r2
 1467 0138 04D0     		beq	.L113
 1468 013a 41F25862 		movw	r2, #5720
 1469 013e 9342     		cmp	r3, r2
 1470 0140 0DD0     		beq	.L114
 1471 0142 26E0     		b	.L112
 1472              	.L113:
 1473              	.LBB17:
 633:Src/register_interface.c ****           {
 634:Src/register_interface.c ****             case MC_REG_PERF_CPU_LOAD:
 635:Src/register_interface.c ****             {
 636:Src/register_interface.c ****               FloatToU32 ReadVal;
 637:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetCPU_Load(pMCIN->pPerfMeasure);
 1474              		.loc 1 637 60
 1475 0144 3B6B     		ldr	r3, [r7, #48]
 1476 0146 DB68     		ldr	r3, [r3, #12]
 1477              		.loc 1 637 35
 1478 0148 1846     		mov	r0, r3
 1479 014a FFF7FEFF 		bl	MC_Perf_GetCPU_Load
 1480 014e F0EE407A 		vmov.f32	s15, s0
 1481              		.loc 1 637 33
 1482 0152 C7ED077A 		vstr.32	s15, [r7, #28]
 638:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 1483              		.loc 1 638 36
 1484 0156 FA69     		ldr	r2, [r7, #28]
 1485              		.loc 1 638 27
 1486 0158 3B6A     		ldr	r3, [r7, #32]
 1487 015a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 39


 639:Src/register_interface.c ****               break;
 1488              		.loc 1 639 15
 1489 015c 1DE0     		b	.L115
 1490              	.L114:
 1491              	.LBE17:
 1492              	.LBB18:
 640:Src/register_interface.c ****             }
 641:Src/register_interface.c **** 
 642:Src/register_interface.c ****             case MC_REG_PERF_MIN_CPU_LOAD:
 643:Src/register_interface.c ****             {
 644:Src/register_interface.c ****               FloatToU32 ReadVal;
 645:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetMinCPU_Load(pMCIN->pPerfMeasure);
 1493              		.loc 1 645 63
 1494 015e 3B6B     		ldr	r3, [r7, #48]
 1495 0160 DB68     		ldr	r3, [r3, #12]
 1496              		.loc 1 645 35
 1497 0162 1846     		mov	r0, r3
 1498 0164 FFF7FEFF 		bl	MC_Perf_GetMinCPU_Load
 1499 0168 F0EE407A 		vmov.f32	s15, s0
 1500              		.loc 1 645 33
 1501 016c C7ED067A 		vstr.32	s15, [r7, #24]
 646:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 1502              		.loc 1 646 36
 1503 0170 BA69     		ldr	r2, [r7, #24]
 1504              		.loc 1 646 27
 1505 0172 3B6A     		ldr	r3, [r7, #32]
 1506 0174 1A60     		str	r2, [r3]
 647:Src/register_interface.c ****               break;
 1507              		.loc 1 647 15
 1508 0176 10E0     		b	.L115
 1509              	.L111:
 1510              	.LBE18:
 1511              	.LBB19:
 648:Src/register_interface.c ****             }
 649:Src/register_interface.c **** 
 650:Src/register_interface.c ****             case MC_REG_PERF_MAX_CPU_LOAD:
 651:Src/register_interface.c ****             {
 652:Src/register_interface.c ****               FloatToU32 ReadVal;
 653:Src/register_interface.c ****               ReadVal.Float_Val = MC_Perf_GetMaxCPU_Load(pMCIN->pPerfMeasure);
 1512              		.loc 1 653 63
 1513 0178 3B6B     		ldr	r3, [r7, #48]
 1514 017a DB68     		ldr	r3, [r3, #12]
 1515              		.loc 1 653 35
 1516 017c 1846     		mov	r0, r3
 1517 017e FFF7FEFF 		bl	MC_Perf_GetMaxCPU_Load
 1518 0182 F0EE407A 		vmov.f32	s15, s0
 1519              		.loc 1 653 33
 1520 0186 C7ED057A 		vstr.32	s15, [r7, #20]
 654:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 1521              		.loc 1 654 36
 1522 018a 7A69     		ldr	r2, [r7, #20]
 1523              		.loc 1 654 27
 1524 018c 3B6A     		ldr	r3, [r7, #32]
 1525 018e 1A60     		str	r2, [r3]
 655:Src/register_interface.c ****               break;
 1526              		.loc 1 655 15
 1527 0190 03E0     		b	.L115
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 40


 1528              	.L112:
 1529              	.LBE19:
 656:Src/register_interface.c ****             }
 657:Src/register_interface.c **** 
 658:Src/register_interface.c ****             default:
 659:Src/register_interface.c ****             {
 660:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 1530              		.loc 1 660 22
 1531 0192 0523     		movs	r3, #5
 1532 0194 87F83730 		strb	r3, [r7, #55]
 661:Src/register_interface.c ****               break;
 1533              		.loc 1 661 15
 1534 0198 00BF     		nop
 1535              	.L115:
 662:Src/register_interface.c ****             }
 663:Src/register_interface.c ****           }
 664:Src/register_interface.c ****           *size = 4;
 1536              		.loc 1 664 17
 1537 019a 7B68     		ldr	r3, [r7, #4]
 1538 019c 0422     		movs	r2, #4
 1539 019e 1A80     		strh	r2, [r3]	@ movhi
 665:Src/register_interface.c ****         }
 666:Src/register_interface.c ****         else
 667:Src/register_interface.c ****         {
 668:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 669:Src/register_interface.c ****         }
 670:Src/register_interface.c ****         break;
 1540              		.loc 1 670 9
 1541 01a0 5CE0     		b	.L104
 1542              	.L110:
 668:Src/register_interface.c ****         }
 1543              		.loc 1 668 18
 1544 01a2 0823     		movs	r3, #8
 1545 01a4 87F83730 		strb	r3, [r7, #55]
 1546              		.loc 1 670 9
 1547 01a8 58E0     		b	.L104
 1548              	.L98:
 1549              	.LBE16:
 1550              	.LBB20:
 671:Src/register_interface.c ****       }
 672:Src/register_interface.c **** 
 673:Src/register_interface.c ****       case TYPE_DATA_STRING:
 674:Src/register_interface.c ****       {
 675:Src/register_interface.c ****         char_t *charData = (char_t *)data;
 1551              		.loc 1 675 17
 1552 01aa BB68     		ldr	r3, [r7, #8]
 1553 01ac 7B62     		str	r3, [r7, #36]
 676:Src/register_interface.c ****         switch (regID)
 1554              		.loc 1 676 9
 1555 01ae FB89     		ldrh	r3, [r7, #14]
 1556 01b0 202B     		cmp	r3, #32
 1557 01b2 02D0     		beq	.L117
 1558 01b4 602B     		cmp	r3, #96
 1559 01b6 0BD0     		beq	.L118
 1560 01b8 15E0     		b	.L126
 1561              	.L117:
 677:Src/register_interface.c ****         {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 41


 678:Src/register_interface.c ****           case MC_REG_FW_NAME:
 679:Src/register_interface.c ****             retVal = RI_MovString (FIRMWARE_NAME ,charData, size, freeSpace);
 1562              		.loc 1 679 22
 1563 01ba B7F94030 		ldrsh	r3, [r7, #64]
 1564 01be 7A68     		ldr	r2, [r7, #4]
 1565 01c0 796A     		ldr	r1, [r7, #36]
 1566 01c2 2A48     		ldr	r0, .L128+4
 1567 01c4 FFF7FEFF 		bl	RI_MovString
 1568 01c8 0346     		mov	r3, r0
 1569 01ca 87F83730 		strb	r3, [r7, #55]
 680:Src/register_interface.c ****             break;
 1570              		.loc 1 680 13
 1571 01ce 11E0     		b	.L120
 1572              	.L118:
 681:Src/register_interface.c **** 
 682:Src/register_interface.c ****           case MC_REG_CTRL_STAGE_NAME:
 683:Src/register_interface.c ****           {
 684:Src/register_interface.c ****             retVal = RI_MovString (CTL_BOARD ,charData, size, freeSpace);
 1573              		.loc 1 684 22
 1574 01d0 B7F94030 		ldrsh	r3, [r7, #64]
 1575 01d4 7A68     		ldr	r2, [r7, #4]
 1576 01d6 796A     		ldr	r1, [r7, #36]
 1577 01d8 2548     		ldr	r0, .L128+8
 1578 01da FFF7FEFF 		bl	RI_MovString
 1579 01de 0346     		mov	r3, r0
 1580 01e0 87F83730 		strb	r3, [r7, #55]
 685:Src/register_interface.c ****             break;
 1581              		.loc 1 685 13
 1582 01e4 06E0     		b	.L120
 1583              	.L126:
 686:Src/register_interface.c ****           }
 687:Src/register_interface.c ****           default:
 688:Src/register_interface.c ****           {
 689:Src/register_interface.c **** 
 690:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 1584              		.loc 1 690 20
 1585 01e6 0523     		movs	r3, #5
 1586 01e8 87F83730 		strb	r3, [r7, #55]
 691:Src/register_interface.c ****             *size= 0 ; /* */
 1587              		.loc 1 691 18
 1588 01ec 7B68     		ldr	r3, [r7, #4]
 1589 01ee 0022     		movs	r2, #0
 1590 01f0 1A80     		strh	r2, [r3]	@ movhi
 692:Src/register_interface.c **** 
 693:Src/register_interface.c ****             break;
 1591              		.loc 1 693 13
 1592 01f2 00BF     		nop
 1593              	.L120:
 694:Src/register_interface.c ****           }
 695:Src/register_interface.c ****         }
 696:Src/register_interface.c ****         break;
 1594              		.loc 1 696 9
 1595 01f4 32E0     		b	.L104
 1596              	.L96:
 1597              	.LBE20:
 1598              	.LBB21:
 697:Src/register_interface.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 42


 698:Src/register_interface.c ****       }
 699:Src/register_interface.c ****       case TYPE_DATA_RAW:
 700:Src/register_interface.c ****       {
 701:Src/register_interface.c ****         /* First 2 bytes of the answer is reserved to the size */
 702:Src/register_interface.c ****         uint16_t *rawSize = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 1599              		.loc 1 702 19
 1600 01f6 BB68     		ldr	r3, [r7, #8]
 1601 01f8 FB62     		str	r3, [r7, #44]
 703:Src/register_interface.c ****         uint8_t * rawData = data;
 1602              		.loc 1 703 19
 1603 01fa BB68     		ldr	r3, [r7, #8]
 1604 01fc BB62     		str	r3, [r7, #40]
 704:Src/register_interface.c ****         rawData++;
 1605              		.loc 1 704 16
 1606 01fe BB6A     		ldr	r3, [r7, #40]
 1607 0200 0133     		adds	r3, r3, #1
 1608 0202 BB62     		str	r3, [r7, #40]
 705:Src/register_interface.c ****         rawData++;
 1609              		.loc 1 705 16
 1610 0204 BB6A     		ldr	r3, [r7, #40]
 1611 0206 0133     		adds	r3, r3, #1
 1612 0208 BB62     		str	r3, [r7, #40]
 706:Src/register_interface.c **** 
 707:Src/register_interface.c ****         switch (regID)
 1613              		.loc 1 707 9
 1614 020a FB89     		ldrh	r3, [r7, #14]
 1615 020c 282B     		cmp	r3, #40
 1616 020e 16D1     		bne	.L121
 708:Src/register_interface.c ****         {
 709:Src/register_interface.c ****           case MC_REG_GLOBAL_CONFIG:
 710:Src/register_interface.c ****           {
 711:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(GlobalConfig_reg_t);
 1617              		.loc 1 711 22
 1618 0210 FB6A     		ldr	r3, [r7, #44]
 1619 0212 0A22     		movs	r2, #10
 1620 0214 1A80     		strh	r2, [r3]	@ movhi
 712:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 1621              		.loc 1 712 19
 1622 0216 FB6A     		ldr	r3, [r7, #44]
 1623 0218 1B88     		ldrh	r3, [r3]
 1624              		.loc 1 712 29
 1625 021a 0233     		adds	r3, r3, #2
 1626              		.loc 1 712 37
 1627 021c B7F84020 		ldrh	r2, [r7, #64]
 1628              		.loc 1 712 16
 1629 0220 9342     		cmp	r3, r2
 1630 0222 03D9     		bls	.L122
 713:Src/register_interface.c ****             {
 714:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 1631              		.loc 1 714 22
 1632 0224 0823     		movs	r3, #8
 1633 0226 87F83730 		strb	r3, [r7, #55]
 715:Src/register_interface.c ****             }
 716:Src/register_interface.c ****             else
 717:Src/register_interface.c ****             {
 718:Src/register_interface.c ****               (void)memcpy(rawData, &globalConfig_reg, sizeof(GlobalConfig_reg_t));
 719:Src/register_interface.c ****             }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 43


 720:Src/register_interface.c ****             break;
 1634              		.loc 1 720 13
 1635 022a 0CE0     		b	.L124
 1636              	.L122:
 718:Src/register_interface.c ****             }
 1637              		.loc 1 718 21
 1638 022c BB6A     		ldr	r3, [r7, #40]
 1639 022e 114A     		ldr	r2, .L128+12
 1640 0230 1068     		ldr	r0, [r2]	@ unaligned
 1641 0232 5168     		ldr	r1, [r2, #4]	@ unaligned
 1642 0234 1860     		str	r0, [r3]	@ unaligned
 1643 0236 5960     		str	r1, [r3, #4]	@ unaligned
 1644 0238 1289     		ldrh	r2, [r2, #8]	@ unaligned
 1645 023a 1A81     		strh	r2, [r3, #8]	@ unaligned
 1646              		.loc 1 720 13
 1647 023c 03E0     		b	.L124
 1648              	.L121:
 721:Src/register_interface.c ****           }
 722:Src/register_interface.c ****           case MC_REG_ASYNC_UARTA:
 723:Src/register_interface.c ****           case MC_REG_ASYNC_UARTB:
 724:Src/register_interface.c ****           case MC_REG_ASYNC_STLNK:
 725:Src/register_interface.c ****           default:
 726:Src/register_interface.c ****           {
 727:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 1649              		.loc 1 727 20
 1650 023e 0523     		movs	r3, #5
 1651 0240 87F83730 		strb	r3, [r7, #55]
 728:Src/register_interface.c ****             break;
 1652              		.loc 1 728 13
 1653 0244 00BF     		nop
 1654              	.L124:
 729:Src/register_interface.c ****           }
 730:Src/register_interface.c ****         }
 731:Src/register_interface.c **** 
 732:Src/register_interface.c ****         /* Size of the answer is size of the data + 2 bytes containing data size */
 733:Src/register_interface.c ****         *size = (*rawSize) + 2U;
 1655              		.loc 1 733 18
 1656 0246 FB6A     		ldr	r3, [r7, #44]
 1657 0248 1B88     		ldrh	r3, [r3]
 1658              		.loc 1 733 28
 1659 024a 0233     		adds	r3, r3, #2
 1660 024c 9AB2     		uxth	r2, r3
 1661              		.loc 1 733 15
 1662 024e 7B68     		ldr	r3, [r7, #4]
 1663 0250 1A80     		strh	r2, [r3]	@ movhi
 734:Src/register_interface.c ****         break;
 1664              		.loc 1 734 9
 1665 0252 03E0     		b	.L104
 1666              	.L95:
 1667              	.LBE21:
 735:Src/register_interface.c ****       }
 736:Src/register_interface.c **** 
 737:Src/register_interface.c ****       default:
 738:Src/register_interface.c ****       {
 739:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_DATA_TYPE;
 1668              		.loc 1 739 16
 1669 0254 0723     		movs	r3, #7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 44


 1670 0256 87F83730 		strb	r3, [r7, #55]
 740:Src/register_interface.c ****         break;
 1671              		.loc 1 740 9
 1672 025a 00BF     		nop
 1673              	.L104:
 741:Src/register_interface.c ****       }
 742:Src/register_interface.c ****     }
 743:Src/register_interface.c ****   return (retVal);
 1674              		.loc 1 743 10
 1675 025c 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 744:Src/register_interface.c **** }
 1676              		.loc 1 744 1
 1677 0260 1846     		mov	r0, r3
 1678 0262 3837     		adds	r7, r7, #56
 1679              	.LCFI13:
 1680              		.cfi_def_cfa_offset 8
 1681 0264 BD46     		mov	sp, r7
 1682              	.LCFI14:
 1683              		.cfi_def_cfa_register 13
 1684              		@ sp needed
 1685 0266 80BD     		pop	{r7, pc}
 1686              	.L129:
 1687              		.align	2
 1688              	.L128:
 1689 0268 00000000 		.word	Mci
 1690 026c 00000000 		.word	FIRMWARE_NAME
 1691 0270 00000000 		.word	CTL_BOARD
 1692 0274 00000000 		.word	globalConfig_reg
 1693              		.cfi_endproc
 1694              	.LFE1092:
 1696              		.section	.text.RI_GetRegisterMotor1,"ax",%progbits
 1697              		.align	1
 1698              		.global	RI_GetRegisterMotor1
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	RI_GetRegisterMotor1:
 1704              	.LFB1093:
 745:Src/register_interface.c **** 
 746:Src/register_interface.c ****   uint8_t RI_GetRegisterMotor1(uint16_t regID,uint8_t typeID,uint8_t * data,uint16_t *size,int16_t 
 1705              		.loc 1 746 111
 1706              		.cfi_startproc
 1707              		@ args = 4, pretend = 0, frame = 168
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 90B5     		push	{r4, r7, lr}
 1710              	.LCFI15:
 1711              		.cfi_def_cfa_offset 12
 1712              		.cfi_offset 4, -12
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 ABB0     		sub	sp, sp, #172
 1716              	.LCFI16:
 1717              		.cfi_def_cfa_offset 184
 1718 0004 00AF     		add	r7, sp, #0
 1719              	.LCFI17:
 1720              		.cfi_def_cfa_register 7
 1721 0006 BA60     		str	r2, [r7, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 45


 1722 0008 7B60     		str	r3, [r7, #4]
 1723 000a 0346     		mov	r3, r0	@ movhi
 1724 000c FB81     		strh	r3, [r7, #14]	@ movhi
 1725 000e 0B46     		mov	r3, r1
 1726 0010 7B73     		strb	r3, [r7, #13]
 747:Src/register_interface.c ****     uint8_t retVal = MCP_CMD_OK;
 1727              		.loc 1 747 13
 1728 0012 0023     		movs	r3, #0
 1729 0014 87F8A730 		strb	r3, [r7, #167]
 748:Src/register_interface.c ****     uint8_t motorID=0;
 1730              		.loc 1 748 13
 1731 0018 0023     		movs	r3, #0
 1732 001a 87F8A630 		strb	r3, [r7, #166]
 749:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[motorID];
 1733              		.loc 1 749 31
 1734 001e 97F8A620 		ldrb	r2, [r7, #166]	@ zero_extendqisi2
 1735              		.loc 1 749 19
 1736 0022 1346     		mov	r3, r2
 1737 0024 5B00     		lsls	r3, r3, #1
 1738 0026 1344     		add	r3, r3, r2
 1739 0028 1B01     		lsls	r3, r3, #4
 1740 002a 4B4A     		ldr	r2, .L225
 1741 002c 1344     		add	r3, r3, r2
 1742 002e C7F8A030 		str	r3, [r7, #160]
 750:Src/register_interface.c ****     BusVoltageSensor_Handle_t* BusVoltageSensor= &BusVoltageSensor_M1._Super;
 1743              		.loc 1 750 32
 1744 0032 4A4B     		ldr	r3, .L225+4
 1745 0034 C7F89C30 		str	r3, [r7, #156]
 751:Src/register_interface.c ****     switch (typeID)
 1746              		.loc 1 751 5
 1747 0038 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1748 003a 083B     		subs	r3, r3, #8
 1749 003c 202B     		cmp	r3, #32
 1750 003e 00F26685 		bhi	.L131
 1751 0042 01A2     		adr	r2, .L133
 1752 0044 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1753              		.p2align 2
 1754              	.L133:
 1755 0048 CD000000 		.word	.L137+1
 1756 004c 0F0B0000 		.word	.L131+1
 1757 0050 0F0B0000 		.word	.L131+1
 1758 0054 0F0B0000 		.word	.L131+1
 1759 0058 0F0B0000 		.word	.L131+1
 1760 005c 0F0B0000 		.word	.L131+1
 1761 0060 0F0B0000 		.word	.L131+1
 1762 0064 0F0B0000 		.word	.L131+1
 1763 0068 65010000 		.word	.L136+1
 1764 006c 0F0B0000 		.word	.L131+1
 1765 0070 0F0B0000 		.word	.L131+1
 1766 0074 0F0B0000 		.word	.L131+1
 1767 0078 0F0B0000 		.word	.L131+1
 1768 007c 0F0B0000 		.word	.L131+1
 1769 0080 0F0B0000 		.word	.L131+1
 1770 0084 0F0B0000 		.word	.L131+1
 1771 0088 2F070000 		.word	.L135+1
 1772 008c 0F0B0000 		.word	.L131+1
 1773 0090 0F0B0000 		.word	.L131+1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 46


 1774 0094 0F0B0000 		.word	.L131+1
 1775 0098 0F0B0000 		.word	.L131+1
 1776 009c 0F0B0000 		.word	.L131+1
 1777 00a0 0F0B0000 		.word	.L131+1
 1778 00a4 0F0B0000 		.word	.L131+1
 1779 00a8 05080000 		.word	.L134+1
 1780 00ac 0F0B0000 		.word	.L131+1
 1781 00b0 0F0B0000 		.word	.L131+1
 1782 00b4 0F0B0000 		.word	.L131+1
 1783 00b8 0F0B0000 		.word	.L131+1
 1784 00bc 0F0B0000 		.word	.L131+1
 1785 00c0 0F0B0000 		.word	.L131+1
 1786 00c4 0F0B0000 		.word	.L131+1
 1787 00c8 65080000 		.word	.L132+1
 1788              		.p2align 1
 1789              	.L137:
 752:Src/register_interface.c ****     {
 753:Src/register_interface.c ****       case TYPE_DATA_8BIT:
 754:Src/register_interface.c ****       {
 755:Src/register_interface.c ****         if (freeSpace > 0)
 1790              		.loc 1 755 12
 1791 00cc B7F9B830 		ldrsh	r3, [r7, #184]
 1792 00d0 002B     		cmp	r3, #0
 1793 00d2 3CDD     		ble	.L138
 756:Src/register_interface.c ****         {
 757:Src/register_interface.c ****           switch (regID)
 1794              		.loc 1 757 11
 1795 00d4 FB89     		ldrh	r3, [r7, #14]
 1796 00d6 B3F5B16F 		cmp	r3, #1416
 1797 00da 27D0     		beq	.L139
 1798 00dc B3F5B16F 		cmp	r3, #1416
 1799 00e0 2CDC     		bgt	.L140
 1800 00e2 B3F5A96F 		cmp	r3, #1352
 1801 00e6 19D0     		beq	.L141
 1802 00e8 B3F5A96F 		cmp	r3, #1352
 1803 00ec 26DC     		bgt	.L140
 1804 00ee 482B     		cmp	r3, #72
 1805 00f0 02D0     		beq	.L142
 1806 00f2 882B     		cmp	r3, #136
 1807 00f4 09D0     		beq	.L143
 1808 00f6 21E0     		b	.L140
 1809              	.L142:
 758:Src/register_interface.c ****           {
 759:Src/register_interface.c ****             case MC_REG_STATUS:
 760:Src/register_interface.c ****             {
 761:Src/register_interface.c ****               *data = (uint8_t)MCI_GetSTMState(pMCIN);
 1810              		.loc 1 761 32
 1811 00f8 D7F8A000 		ldr	r0, [r7, #160]
 1812 00fc FFF7FEFF 		bl	MCI_GetSTMState
 1813 0100 0346     		mov	r3, r0
 1814 0102 1A46     		mov	r2, r3
 1815              		.loc 1 761 21
 1816 0104 BB68     		ldr	r3, [r7, #8]
 1817 0106 1A70     		strb	r2, [r3]
 762:Src/register_interface.c ****               break;
 1818              		.loc 1 762 15
 1819 0108 1CE0     		b	.L144
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 47


 1820              	.L143:
 763:Src/register_interface.c ****             }
 764:Src/register_interface.c **** 
 765:Src/register_interface.c ****             case MC_REG_CONTROL_MODE:
 766:Src/register_interface.c ****             {
 767:Src/register_interface.c ****               *data = (uint8_t)MCI_GetControlMode(pMCIN);
 1821              		.loc 1 767 32
 1822 010a D7F8A000 		ldr	r0, [r7, #160]
 1823 010e FFF7FEFF 		bl	MCI_GetControlMode
 1824 0112 0346     		mov	r3, r0
 1825 0114 1A46     		mov	r2, r3
 1826              		.loc 1 767 21
 1827 0116 BB68     		ldr	r3, [r7, #8]
 1828 0118 1A70     		strb	r2, [r3]
 768:Src/register_interface.c ****               break;
 1829              		.loc 1 768 15
 1830 011a 13E0     		b	.L144
 1831              	.L141:
 769:Src/register_interface.c ****             }
 770:Src/register_interface.c **** 
 771:Src/register_interface.c ****             case MC_REG_POSITION_CTRL_STATE:
 772:Src/register_interface.c ****             {
 773:Src/register_interface.c ****               *data = (uint8_t) TC_GetControlPositionStatus(&PosCtrlM1);
 1832              		.loc 1 773 33
 1833 011c 1048     		ldr	r0, .L225+8
 1834 011e FFF7FEFF 		bl	TC_GetControlPositionStatus
 1835 0122 0346     		mov	r3, r0
 1836 0124 1A46     		mov	r2, r3
 1837              		.loc 1 773 21
 1838 0126 BB68     		ldr	r3, [r7, #8]
 1839 0128 1A70     		strb	r2, [r3]
 774:Src/register_interface.c ****               break;
 1840              		.loc 1 774 15
 1841 012a 0BE0     		b	.L144
 1842              	.L139:
 775:Src/register_interface.c ****             }
 776:Src/register_interface.c **** 
 777:Src/register_interface.c ****             case MC_REG_POSITION_ALIGN_STATE:
 778:Src/register_interface.c ****             {
 779:Src/register_interface.c ****               *data = (uint8_t) TC_GetAlignmentStatus(&PosCtrlM1);
 1843              		.loc 1 779 33
 1844 012c 0C48     		ldr	r0, .L225+8
 1845 012e FFF7FEFF 		bl	TC_GetAlignmentStatus
 1846 0132 0346     		mov	r3, r0
 1847 0134 1A46     		mov	r2, r3
 1848              		.loc 1 779 21
 1849 0136 BB68     		ldr	r3, [r7, #8]
 1850 0138 1A70     		strb	r2, [r3]
 780:Src/register_interface.c ****               break;
 1851              		.loc 1 780 15
 1852 013a 03E0     		b	.L144
 1853              	.L140:
 781:Src/register_interface.c ****             }
 782:Src/register_interface.c **** 
 783:Src/register_interface.c ****             default:
 784:Src/register_interface.c ****             {
 785:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 48


 1854              		.loc 1 785 22
 1855 013c 0523     		movs	r3, #5
 1856 013e 87F8A730 		strb	r3, [r7, #167]
 786:Src/register_interface.c ****               break;
 1857              		.loc 1 786 15
 1858 0142 00BF     		nop
 1859              	.L144:
 787:Src/register_interface.c ****             }
 788:Src/register_interface.c ****           }
 789:Src/register_interface.c ****           *size = 1;
 1860              		.loc 1 789 17
 1861 0144 7B68     		ldr	r3, [r7, #4]
 1862 0146 0122     		movs	r2, #1
 1863 0148 1A80     		strh	r2, [r3]	@ movhi
 790:Src/register_interface.c ****         }
 791:Src/register_interface.c ****         else
 792:Src/register_interface.c ****         {
 793:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 794:Src/register_interface.c ****         }
 795:Src/register_interface.c ****         break;
 1864              		.loc 1 795 9
 1865 014a 00F0E4BC 		b	.L146
 1866              	.L138:
 793:Src/register_interface.c ****         }
 1867              		.loc 1 793 18
 1868 014e 0823     		movs	r3, #8
 1869 0150 87F8A730 		strb	r3, [r7, #167]
 1870              		.loc 1 795 9
 1871 0154 00F0DFBC 		b	.L146
 1872              	.L226:
 1873              		.align	2
 1874              	.L225:
 1875 0158 00000000 		.word	Mci
 1876 015c 00000000 		.word	BusVoltageSensor_M1
 1877 0160 00000000 		.word	PosCtrlM1
 1878              	.L136:
 1879              	.LBB22:
 796:Src/register_interface.c ****       }
 797:Src/register_interface.c **** 
 798:Src/register_interface.c ****       case TYPE_DATA_16BIT:
 799:Src/register_interface.c ****       {
 800:Src/register_interface.c ****         uint16_t *regdataU16 = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 1880              		.loc 1 800 19
 1881 0164 BB68     		ldr	r3, [r7, #8]
 1882 0166 3B66     		str	r3, [r7, #96]
 801:Src/register_interface.c ****         int16_t *regdata16 = (int16_t *) data; //cstat !MISRAC2012-Rule-11.3
 1883              		.loc 1 801 18
 1884 0168 BB68     		ldr	r3, [r7, #8]
 1885 016a FB65     		str	r3, [r7, #92]
 802:Src/register_interface.c **** 
 803:Src/register_interface.c ****         if (freeSpace >= 2)
 1886              		.loc 1 803 12
 1887 016c B7F9B830 		ldrsh	r3, [r7, #184]
 1888 0170 012B     		cmp	r3, #1
 1889 0172 40F3D882 		ble	.L147
 804:Src/register_interface.c ****         {
 805:Src/register_interface.c ****           switch (regID)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 49


 1890              		.loc 1 805 11
 1891 0176 FB89     		ldrh	r3, [r7, #14]
 1892 0178 41F21072 		movw	r2, #5904
 1893 017c 9342     		cmp	r3, r2
 1894 017e 00F0C182 		beq	.L148
 1895 0182 41F21072 		movw	r2, #5904
 1896 0186 9342     		cmp	r3, r2
 1897 0188 00F3C482 		bgt	.L149
 1898 018c 41F2D062 		movw	r2, #5840
 1899 0190 9342     		cmp	r3, r2
 1900 0192 00F0A282 		beq	.L150
 1901 0196 41F2D062 		movw	r2, #5840
 1902 019a 9342     		cmp	r3, r2
 1903 019c 00F3BA82 		bgt	.L149
 1904 01a0 41F29062 		movw	r2, #5776
 1905 01a4 9342     		cmp	r3, r2
 1906 01a6 00F09082 		beq	.L151
 1907 01aa 41F29062 		movw	r2, #5776
 1908 01ae 9342     		cmp	r3, r2
 1909 01b0 00F3B082 		bgt	.L149
 1910 01b4 41F25062 		movw	r2, #5712
 1911 01b8 9342     		cmp	r3, r2
 1912 01ba 00F07E82 		beq	.L152
 1913 01be 41F25062 		movw	r2, #5712
 1914 01c2 9342     		cmp	r3, r2
 1915 01c4 00F3A682 		bgt	.L149
 1916 01c8 41F21062 		movw	r2, #5648
 1917 01cc 9342     		cmp	r3, r2
 1918 01ce 00F06C82 		beq	.L153
 1919 01d2 41F21062 		movw	r2, #5648
 1920 01d6 9342     		cmp	r3, r2
 1921 01d8 00F39C82 		bgt	.L149
 1922 01dc 41F2D052 		movw	r2, #5584
 1923 01e0 9342     		cmp	r3, r2
 1924 01e2 00F05A82 		beq	.L154
 1925 01e6 41F2D052 		movw	r2, #5584
 1926 01ea 9342     		cmp	r3, r2
 1927 01ec 00F39282 		bgt	.L149
 1928 01f0 41F29052 		movw	r2, #5520
 1929 01f4 9342     		cmp	r3, r2
 1930 01f6 00F04882 		beq	.L155
 1931 01fa 41F29052 		movw	r2, #5520
 1932 01fe 9342     		cmp	r3, r2
 1933 0200 00F38882 		bgt	.L149
 1934 0204 41F25052 		movw	r2, #5456
 1935 0208 9342     		cmp	r3, r2
 1936 020a 00F03682 		beq	.L156
 1937 020e 41F25052 		movw	r2, #5456
 1938 0212 9342     		cmp	r3, r2
 1939 0214 00F37E82 		bgt	.L149
 1940 0218 41F21052 		movw	r2, #5392
 1941 021c 9342     		cmp	r3, r2
 1942 021e 00F02482 		beq	.L157
 1943 0222 41F21052 		movw	r2, #5392
 1944 0226 9342     		cmp	r3, r2
 1945 0228 00F37482 		bgt	.L149
 1946 022c 41F2D042 		movw	r2, #5328
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 50


 1947 0230 9342     		cmp	r3, r2
 1948 0232 00F01282 		beq	.L158
 1949 0236 41F2D042 		movw	r2, #5328
 1950 023a 9342     		cmp	r3, r2
 1951 023c 00F36A82 		bgt	.L149
 1952 0240 41F29042 		movw	r2, #5264
 1953 0244 9342     		cmp	r3, r2
 1954 0246 00F00082 		beq	.L159
 1955 024a 41F29042 		movw	r2, #5264
 1956 024e 9342     		cmp	r3, r2
 1957 0250 00F36082 		bgt	.L149
 1958 0254 41F25042 		movw	r2, #5200
 1959 0258 9342     		cmp	r3, r2
 1960 025a 00F0EE81 		beq	.L160
 1961 025e 41F25042 		movw	r2, #5200
 1962 0262 9342     		cmp	r3, r2
 1963 0264 00F35682 		bgt	.L149
 1964 0268 41F21042 		movw	r2, #5136
 1965 026c 9342     		cmp	r3, r2
 1966 026e 00F0DC81 		beq	.L161
 1967 0272 41F21042 		movw	r2, #5136
 1968 0276 9342     		cmp	r3, r2
 1969 0278 00F34C82 		bgt	.L149
 1970 027c 41F2D032 		movw	r2, #5072
 1971 0280 9342     		cmp	r3, r2
 1972 0282 00F0CA81 		beq	.L162
 1973 0286 41F2D032 		movw	r2, #5072
 1974 028a 9342     		cmp	r3, r2
 1975 028c 00F34282 		bgt	.L149
 1976 0290 41F29032 		movw	r2, #5008
 1977 0294 9342     		cmp	r3, r2
 1978 0296 00F0B881 		beq	.L163
 1979 029a 41F29032 		movw	r2, #5008
 1980 029e 9342     		cmp	r3, r2
 1981 02a0 00F33882 		bgt	.L149
 1982 02a4 B3F5696F 		cmp	r3, #3728
 1983 02a8 00F03882 		beq	.L224
 1984 02ac B3F5696F 		cmp	r3, #3728
 1985 02b0 00F33082 		bgt	.L149
 1986 02b4 B3F5656F 		cmp	r3, #3664
 1987 02b8 00F03082 		beq	.L224
 1988 02bc B3F5656F 		cmp	r3, #3664
 1989 02c0 00F32882 		bgt	.L149
 1990 02c4 B3F5316F 		cmp	r3, #2832
 1991 02c8 00F09781 		beq	.L165
 1992 02cc B3F5316F 		cmp	r3, #2832
 1993 02d0 00F32082 		bgt	.L149
 1994 02d4 B3F52D6F 		cmp	r3, #2768
 1995 02d8 00F08781 		beq	.L166
 1996 02dc B3F52D6F 		cmp	r3, #2768
 1997 02e0 00F31882 		bgt	.L149
 1998 02e4 B3F5296F 		cmp	r3, #2704
 1999 02e8 00F07481 		beq	.L167
 2000 02ec B3F5296F 		cmp	r3, #2704
 2001 02f0 00F31082 		bgt	.L149
 2002 02f4 B3F5256F 		cmp	r3, #2640
 2003 02f8 00F06181 		beq	.L168
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 51


 2004 02fc B3F5256F 		cmp	r3, #2640
 2005 0300 00F30882 		bgt	.L149
 2006 0304 B3F5216F 		cmp	r3, #2576
 2007 0308 00F04E81 		beq	.L169
 2008 030c B3F5216F 		cmp	r3, #2576
 2009 0310 00F30082 		bgt	.L149
 2010 0314 B3F51D6F 		cmp	r3, #2512
 2011 0318 00F03B81 		beq	.L170
 2012 031c B3F51D6F 		cmp	r3, #2512
 2013 0320 00F3F881 		bgt	.L149
 2014 0324 B3F5196F 		cmp	r3, #2448
 2015 0328 00F02881 		beq	.L171
 2016 032c B3F5196F 		cmp	r3, #2448
 2017 0330 00F3F081 		bgt	.L149
 2018 0334 B3F5156F 		cmp	r3, #2384
 2019 0338 00F01581 		beq	.L172
 2020 033c B3F5156F 		cmp	r3, #2384
 2021 0340 00F3E881 		bgt	.L149
 2022 0344 B3F5116F 		cmp	r3, #2320
 2023 0348 00F00281 		beq	.L173
 2024 034c B3F5116F 		cmp	r3, #2320
 2025 0350 00F3E081 		bgt	.L149
 2026 0354 B3F50D6F 		cmp	r3, #2256
 2027 0358 00F0EF80 		beq	.L174
 2028 035c B3F50D6F 		cmp	r3, #2256
 2029 0360 00F3D881 		bgt	.L149
 2030 0364 B3F5096F 		cmp	r3, #2192
 2031 0368 00F0DC80 		beq	.L175
 2032 036c B3F5096F 		cmp	r3, #2192
 2033 0370 00F3D081 		bgt	.L149
 2034 0374 B3F5056F 		cmp	r3, #2128
 2035 0378 00F0C980 		beq	.L176
 2036 037c B3F5056F 		cmp	r3, #2128
 2037 0380 00F3C881 		bgt	.L149
 2038 0384 B3F5016F 		cmp	r3, #2064
 2039 0388 00F0B680 		beq	.L177
 2040 038c B3F5016F 		cmp	r3, #2064
 2041 0390 00F3C081 		bgt	.L149
 2042 0394 B3F5FA6F 		cmp	r3, #2000
 2043 0398 00F0A380 		beq	.L178
 2044 039c B3F5FA6F 		cmp	r3, #2000
 2045 03a0 00F3B881 		bgt	.L149
 2046 03a4 B3F5BA6F 		cmp	r3, #1488
 2047 03a8 00F09380 		beq	.L179
 2048 03ac B3F5BA6F 		cmp	r3, #1488
 2049 03b0 00F3B081 		bgt	.L149
 2050 03b4 B3F5B26F 		cmp	r3, #1424
 2051 03b8 00F08280 		beq	.L180
 2052 03bc B3F5B26F 		cmp	r3, #1424
 2053 03c0 00F3A881 		bgt	.L149
 2054 03c4 B3F5447F 		cmp	r3, #784
 2055 03c8 72D0     		beq	.L181
 2056 03ca B3F5447F 		cmp	r3, #784
 2057 03ce 00F3A181 		bgt	.L149
 2058 03d2 B3F5347F 		cmp	r3, #720
 2059 03d6 63D0     		beq	.L182
 2060 03d8 B3F5347F 		cmp	r3, #720
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 52


 2061 03dc 00F39A81 		bgt	.L149
 2062 03e0 B3F5247F 		cmp	r3, #656
 2063 03e4 54D0     		beq	.L183
 2064 03e6 B3F5247F 		cmp	r3, #656
 2065 03ea 00F39381 		bgt	.L149
 2066 03ee B3F5047F 		cmp	r3, #528
 2067 03f2 45D0     		beq	.L184
 2068 03f4 B3F5047F 		cmp	r3, #528
 2069 03f8 00F38C81 		bgt	.L149
 2070 03fc B3F5E87F 		cmp	r3, #464
 2071 0400 36D0     		beq	.L185
 2072 0402 B3F5E87F 		cmp	r3, #464
 2073 0406 00F38581 		bgt	.L149
 2074 040a B3F5C87F 		cmp	r3, #400
 2075 040e 27D0     		beq	.L186
 2076 0410 B3F5C87F 		cmp	r3, #400
 2077 0414 00F37E81 		bgt	.L149
 2078 0418 B3F5887F 		cmp	r3, #272
 2079 041c 18D0     		beq	.L187
 2080 041e B3F5887F 		cmp	r3, #272
 2081 0422 00F37781 		bgt	.L149
 2082 0426 902B     		cmp	r3, #144
 2083 0428 02D0     		beq	.L188
 2084 042a D02B     		cmp	r3, #208
 2085 042c 08D0     		beq	.L189
 2086 042e 71E1     		b	.L149
 2087              	.L188:
 806:Src/register_interface.c ****           {
 807:Src/register_interface.c ****             case MC_REG_SPEED_KP:
 808:Src/register_interface.c ****             {
 809:Src/register_interface.c ****               *regdata16 = PID_GetKP(&PIDSpeedHandle_M1);
 2088              		.loc 1 809 28
 2089 0430 AE48     		ldr	r0, .L227
 2090 0432 FFF7FEFF 		bl	PID_GetKP
 2091 0436 0346     		mov	r3, r0
 2092 0438 1A46     		mov	r2, r3
 2093              		.loc 1 809 26
 2094 043a FB6D     		ldr	r3, [r7, #92]
 2095 043c 1A80     		strh	r2, [r3]	@ movhi
 810:Src/register_interface.c ****               break;
 2096              		.loc 1 810 15
 2097 043e 6EE1     		b	.L190
 2098              	.L189:
 811:Src/register_interface.c ****             }
 812:Src/register_interface.c **** 
 813:Src/register_interface.c ****             case MC_REG_SPEED_KI:
 814:Src/register_interface.c ****             {
 815:Src/register_interface.c ****               *regdata16 = PID_GetKI(&PIDSpeedHandle_M1);
 2099              		.loc 1 815 28
 2100 0440 AA48     		ldr	r0, .L227
 2101 0442 FFF7FEFF 		bl	PID_GetKI
 2102 0446 0346     		mov	r3, r0
 2103 0448 1A46     		mov	r2, r3
 2104              		.loc 1 815 26
 2105 044a FB6D     		ldr	r3, [r7, #92]
 2106 044c 1A80     		strh	r2, [r3]	@ movhi
 816:Src/register_interface.c ****               break;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 53


 2107              		.loc 1 816 15
 2108 044e 66E1     		b	.L190
 2109              	.L187:
 817:Src/register_interface.c ****             }
 818:Src/register_interface.c **** 
 819:Src/register_interface.c ****             case MC_REG_SPEED_KD:
 820:Src/register_interface.c ****             {
 821:Src/register_interface.c ****               *regdata16 = PID_GetKD(&PIDSpeedHandle_M1);
 2110              		.loc 1 821 28
 2111 0450 A648     		ldr	r0, .L227
 2112 0452 FFF7FEFF 		bl	PID_GetKD
 2113 0456 0346     		mov	r3, r0
 2114 0458 1A46     		mov	r2, r3
 2115              		.loc 1 821 26
 2116 045a FB6D     		ldr	r3, [r7, #92]
 2117 045c 1A80     		strh	r2, [r3]	@ movhi
 822:Src/register_interface.c ****               break;
 2118              		.loc 1 822 15
 2119 045e 5EE1     		b	.L190
 2120              	.L186:
 823:Src/register_interface.c ****             }
 824:Src/register_interface.c **** 
 825:Src/register_interface.c ****             case MC_REG_I_Q_KP:
 826:Src/register_interface.c ****             {
 827:Src/register_interface.c ****               *regdata16 = PID_GetKP(&PIDIqHandle_M1);
 2121              		.loc 1 827 28
 2122 0460 A348     		ldr	r0, .L227+4
 2123 0462 FFF7FEFF 		bl	PID_GetKP
 2124 0466 0346     		mov	r3, r0
 2125 0468 1A46     		mov	r2, r3
 2126              		.loc 1 827 26
 2127 046a FB6D     		ldr	r3, [r7, #92]
 2128 046c 1A80     		strh	r2, [r3]	@ movhi
 828:Src/register_interface.c ****               break;
 2129              		.loc 1 828 15
 2130 046e 56E1     		b	.L190
 2131              	.L185:
 829:Src/register_interface.c ****             }
 830:Src/register_interface.c **** 
 831:Src/register_interface.c ****             case MC_REG_I_Q_KI:
 832:Src/register_interface.c ****             {
 833:Src/register_interface.c ****               *regdata16 = PID_GetKI(&PIDIqHandle_M1);
 2132              		.loc 1 833 28
 2133 0470 9F48     		ldr	r0, .L227+4
 2134 0472 FFF7FEFF 		bl	PID_GetKI
 2135 0476 0346     		mov	r3, r0
 2136 0478 1A46     		mov	r2, r3
 2137              		.loc 1 833 26
 2138 047a FB6D     		ldr	r3, [r7, #92]
 2139 047c 1A80     		strh	r2, [r3]	@ movhi
 834:Src/register_interface.c ****               break;
 2140              		.loc 1 834 15
 2141 047e 4EE1     		b	.L190
 2142              	.L184:
 835:Src/register_interface.c ****             }
 836:Src/register_interface.c **** 
 837:Src/register_interface.c ****             case MC_REG_I_Q_KD:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 54


 838:Src/register_interface.c ****             {
 839:Src/register_interface.c ****               *regdata16 = PID_GetKD(&PIDIqHandle_M1);
 2143              		.loc 1 839 28
 2144 0480 9B48     		ldr	r0, .L227+4
 2145 0482 FFF7FEFF 		bl	PID_GetKD
 2146 0486 0346     		mov	r3, r0
 2147 0488 1A46     		mov	r2, r3
 2148              		.loc 1 839 26
 2149 048a FB6D     		ldr	r3, [r7, #92]
 2150 048c 1A80     		strh	r2, [r3]	@ movhi
 840:Src/register_interface.c ****               break;
 2151              		.loc 1 840 15
 2152 048e 46E1     		b	.L190
 2153              	.L183:
 841:Src/register_interface.c ****             }
 842:Src/register_interface.c **** 
 843:Src/register_interface.c ****             case MC_REG_I_D_KP:
 844:Src/register_interface.c ****             {
 845:Src/register_interface.c ****               *regdata16 = PID_GetKP(&PIDIdHandle_M1);
 2154              		.loc 1 845 28
 2155 0490 9848     		ldr	r0, .L227+8
 2156 0492 FFF7FEFF 		bl	PID_GetKP
 2157 0496 0346     		mov	r3, r0
 2158 0498 1A46     		mov	r2, r3
 2159              		.loc 1 845 26
 2160 049a FB6D     		ldr	r3, [r7, #92]
 2161 049c 1A80     		strh	r2, [r3]	@ movhi
 846:Src/register_interface.c ****               break;
 2162              		.loc 1 846 15
 2163 049e 3EE1     		b	.L190
 2164              	.L182:
 847:Src/register_interface.c ****             }
 848:Src/register_interface.c **** 
 849:Src/register_interface.c ****             case MC_REG_I_D_KI:
 850:Src/register_interface.c ****             {
 851:Src/register_interface.c ****               *regdata16 = PID_GetKI(&PIDIdHandle_M1);
 2165              		.loc 1 851 28
 2166 04a0 9448     		ldr	r0, .L227+8
 2167 04a2 FFF7FEFF 		bl	PID_GetKI
 2168 04a6 0346     		mov	r3, r0
 2169 04a8 1A46     		mov	r2, r3
 2170              		.loc 1 851 26
 2171 04aa FB6D     		ldr	r3, [r7, #92]
 2172 04ac 1A80     		strh	r2, [r3]	@ movhi
 852:Src/register_interface.c ****               break;
 2173              		.loc 1 852 15
 2174 04ae 36E1     		b	.L190
 2175              	.L181:
 853:Src/register_interface.c ****             }
 854:Src/register_interface.c **** 
 855:Src/register_interface.c ****             case MC_REG_I_D_KD:
 856:Src/register_interface.c ****             {
 857:Src/register_interface.c ****               *regdata16 = PID_GetKD(&PIDIdHandle_M1);
 2176              		.loc 1 857 28
 2177 04b0 9048     		ldr	r0, .L227+8
 2178 04b2 FFF7FEFF 		bl	PID_GetKD
 2179 04b6 0346     		mov	r3, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 55


 2180 04b8 1A46     		mov	r2, r3
 2181              		.loc 1 857 26
 2182 04ba FB6D     		ldr	r3, [r7, #92]
 2183 04bc 1A80     		strh	r2, [r3]	@ movhi
 858:Src/register_interface.c ****               break;
 2184              		.loc 1 858 15
 2185 04be 2EE1     		b	.L190
 2186              	.L180:
 859:Src/register_interface.c ****             }
 860:Src/register_interface.c **** 
 861:Src/register_interface.c ****             case MC_REG_BUS_VOLTAGE:
 862:Src/register_interface.c ****             {
 863:Src/register_interface.c ****               *regdataU16 = VBS_GetAvBusVoltage_V(BusVoltageSensor);
 2187              		.loc 1 863 29
 2188 04c0 D7F89C00 		ldr	r0, [r7, #156]
 2189 04c4 FFF7FEFF 		bl	VBS_GetAvBusVoltage_V
 2190 04c8 0346     		mov	r3, r0
 2191 04ca 1A46     		mov	r2, r3
 2192              		.loc 1 863 27
 2193 04cc 3B6E     		ldr	r3, [r7, #96]
 2194 04ce 1A80     		strh	r2, [r3]	@ movhi
 864:Src/register_interface.c ****               break;
 2195              		.loc 1 864 15
 2196 04d0 25E1     		b	.L190
 2197              	.L179:
 865:Src/register_interface.c ****             }
 866:Src/register_interface.c **** 
 867:Src/register_interface.c ****             case MC_REG_HEATS_TEMP:
 868:Src/register_interface.c ****             {
 869:Src/register_interface.c ****               *regdata16 = NTC_GetAvTemp_C(&TempSensor_M1);
 2198              		.loc 1 869 28
 2199 04d2 8948     		ldr	r0, .L227+12
 2200 04d4 FFF7FEFF 		bl	NTC_GetAvTemp_C
 2201 04d8 0346     		mov	r3, r0
 2202 04da 1A46     		mov	r2, r3
 2203              		.loc 1 869 26
 2204 04dc FB6D     		ldr	r3, [r7, #92]
 2205 04de 1A80     		strh	r2, [r3]	@ movhi
 870:Src/register_interface.c ****               break;
 2206              		.loc 1 870 15
 2207 04e0 1DE1     		b	.L190
 2208              	.L178:
 871:Src/register_interface.c ****             }
 872:Src/register_interface.c **** 
 873:Src/register_interface.c ****             case MC_REG_I_A:
 874:Src/register_interface.c ****             {
 875:Src/register_interface.c ****               *regdata16 = MCI_GetIab(pMCIN).a;
 2209              		.loc 1 875 28
 2210 04e2 D7F8A000 		ldr	r0, [r7, #160]
 2211 04e6 FFF7FEFF 		bl	MCI_GetIab
 2212 04ea 0346     		mov	r3, r0
 2213 04ec 7B62     		str	r3, [r7, #36]
 2214              		.loc 1 875 45
 2215 04ee B7F92420 		ldrsh	r2, [r7, #36]
 2216              		.loc 1 875 26
 2217 04f2 FB6D     		ldr	r3, [r7, #92]
 2218 04f4 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 56


 876:Src/register_interface.c ****               break;
 2219              		.loc 1 876 15
 2220 04f6 12E1     		b	.L190
 2221              	.L177:
 877:Src/register_interface.c ****             }
 878:Src/register_interface.c **** 
 879:Src/register_interface.c ****             case MC_REG_I_B:
 880:Src/register_interface.c ****             {
 881:Src/register_interface.c ****               *regdata16 = MCI_GetIab(pMCIN).b;
 2222              		.loc 1 881 28
 2223 04f8 D7F8A000 		ldr	r0, [r7, #160]
 2224 04fc FFF7FEFF 		bl	MCI_GetIab
 2225 0500 0346     		mov	r3, r0
 2226 0502 BB62     		str	r3, [r7, #40]
 2227              		.loc 1 881 45
 2228 0504 B7F92A20 		ldrsh	r2, [r7, #42]
 2229              		.loc 1 881 26
 2230 0508 FB6D     		ldr	r3, [r7, #92]
 2231 050a 1A80     		strh	r2, [r3]	@ movhi
 882:Src/register_interface.c ****               break;
 2232              		.loc 1 882 15
 2233 050c 07E1     		b	.L190
 2234              	.L176:
 883:Src/register_interface.c ****             }
 884:Src/register_interface.c **** 
 885:Src/register_interface.c ****             case MC_REG_I_ALPHA_MEAS:
 886:Src/register_interface.c ****             {
 887:Src/register_interface.c ****               *regdata16 = MCI_GetIalphabeta(pMCIN).alpha;
 2235              		.loc 1 887 28
 2236 050e D7F8A000 		ldr	r0, [r7, #160]
 2237 0512 FFF7FEFF 		bl	MCI_GetIalphabeta
 2238 0516 0346     		mov	r3, r0
 2239 0518 FB62     		str	r3, [r7, #44]
 2240              		.loc 1 887 52
 2241 051a B7F92C20 		ldrsh	r2, [r7, #44]
 2242              		.loc 1 887 26
 2243 051e FB6D     		ldr	r3, [r7, #92]
 2244 0520 1A80     		strh	r2, [r3]	@ movhi
 888:Src/register_interface.c ****               break;
 2245              		.loc 1 888 15
 2246 0522 FCE0     		b	.L190
 2247              	.L175:
 889:Src/register_interface.c ****             }
 890:Src/register_interface.c **** 
 891:Src/register_interface.c ****             case MC_REG_I_BETA_MEAS:
 892:Src/register_interface.c ****             {
 893:Src/register_interface.c ****               *regdata16 = MCI_GetIalphabeta(pMCIN).beta;
 2248              		.loc 1 893 28
 2249 0524 D7F8A000 		ldr	r0, [r7, #160]
 2250 0528 FFF7FEFF 		bl	MCI_GetIalphabeta
 2251 052c 0346     		mov	r3, r0
 2252 052e 3B63     		str	r3, [r7, #48]
 2253              		.loc 1 893 52
 2254 0530 B7F93220 		ldrsh	r2, [r7, #50]
 2255              		.loc 1 893 26
 2256 0534 FB6D     		ldr	r3, [r7, #92]
 2257 0536 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 57


 894:Src/register_interface.c ****               break;
 2258              		.loc 1 894 15
 2259 0538 F1E0     		b	.L190
 2260              	.L174:
 895:Src/register_interface.c ****             }
 896:Src/register_interface.c **** 
 897:Src/register_interface.c ****             case MC_REG_I_Q_MEAS:
 898:Src/register_interface.c ****             {
 899:Src/register_interface.c ****               *regdata16 = MCI_GetIqd(pMCIN).q;
 2261              		.loc 1 899 28
 2262 053a D7F8A000 		ldr	r0, [r7, #160]
 2263 053e FFF7FEFF 		bl	MCI_GetIqd
 2264 0542 0346     		mov	r3, r0
 2265 0544 7B63     		str	r3, [r7, #52]
 2266              		.loc 1 899 45
 2267 0546 B7F93420 		ldrsh	r2, [r7, #52]
 2268              		.loc 1 899 26
 2269 054a FB6D     		ldr	r3, [r7, #92]
 2270 054c 1A80     		strh	r2, [r3]	@ movhi
 900:Src/register_interface.c ****               break;
 2271              		.loc 1 900 15
 2272 054e E6E0     		b	.L190
 2273              	.L173:
 901:Src/register_interface.c ****             }
 902:Src/register_interface.c **** 
 903:Src/register_interface.c ****             case MC_REG_I_D_MEAS:
 904:Src/register_interface.c ****             {
 905:Src/register_interface.c ****               *regdata16 = MCI_GetIqd(pMCIN).d;
 2274              		.loc 1 905 28
 2275 0550 D7F8A000 		ldr	r0, [r7, #160]
 2276 0554 FFF7FEFF 		bl	MCI_GetIqd
 2277 0558 0346     		mov	r3, r0
 2278 055a BB63     		str	r3, [r7, #56]
 2279              		.loc 1 905 45
 2280 055c B7F93A20 		ldrsh	r2, [r7, #58]
 2281              		.loc 1 905 26
 2282 0560 FB6D     		ldr	r3, [r7, #92]
 2283 0562 1A80     		strh	r2, [r3]	@ movhi
 906:Src/register_interface.c ****               break;
 2284              		.loc 1 906 15
 2285 0564 DBE0     		b	.L190
 2286              	.L172:
 907:Src/register_interface.c ****             }
 908:Src/register_interface.c **** 
 909:Src/register_interface.c ****             case MC_REG_I_Q_REF:
 910:Src/register_interface.c ****             {
 911:Src/register_interface.c ****               *regdata16 = MCI_GetIqdref(pMCIN).q;
 2287              		.loc 1 911 28
 2288 0566 D7F8A000 		ldr	r0, [r7, #160]
 2289 056a FFF7FEFF 		bl	MCI_GetIqdref
 2290 056e 0346     		mov	r3, r0
 2291 0570 FB63     		str	r3, [r7, #60]
 2292              		.loc 1 911 48
 2293 0572 B7F93C20 		ldrsh	r2, [r7, #60]
 2294              		.loc 1 911 26
 2295 0576 FB6D     		ldr	r3, [r7, #92]
 2296 0578 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 58


 912:Src/register_interface.c ****               break;
 2297              		.loc 1 912 15
 2298 057a D0E0     		b	.L190
 2299              	.L171:
 913:Src/register_interface.c ****             }
 914:Src/register_interface.c **** 
 915:Src/register_interface.c ****             case MC_REG_I_D_REF:
 916:Src/register_interface.c ****             {
 917:Src/register_interface.c ****               *regdata16 = MCI_GetIqdref(pMCIN).d;
 2300              		.loc 1 917 28
 2301 057c D7F8A000 		ldr	r0, [r7, #160]
 2302 0580 FFF7FEFF 		bl	MCI_GetIqdref
 2303 0584 0346     		mov	r3, r0
 2304 0586 3B64     		str	r3, [r7, #64]
 2305              		.loc 1 917 48
 2306 0588 B7F94220 		ldrsh	r2, [r7, #66]
 2307              		.loc 1 917 26
 2308 058c FB6D     		ldr	r3, [r7, #92]
 2309 058e 1A80     		strh	r2, [r3]	@ movhi
 918:Src/register_interface.c ****               break;
 2310              		.loc 1 918 15
 2311 0590 C5E0     		b	.L190
 2312              	.L170:
 919:Src/register_interface.c ****             }
 920:Src/register_interface.c **** 
 921:Src/register_interface.c ****             case MC_REG_V_Q:
 922:Src/register_interface.c ****             {
 923:Src/register_interface.c ****               *regdata16 = MCI_GetVqd(pMCIN).q;
 2313              		.loc 1 923 28
 2314 0592 D7F8A000 		ldr	r0, [r7, #160]
 2315 0596 FFF7FEFF 		bl	MCI_GetVqd
 2316 059a 0346     		mov	r3, r0
 2317 059c 7B64     		str	r3, [r7, #68]
 2318              		.loc 1 923 45
 2319 059e B7F94420 		ldrsh	r2, [r7, #68]
 2320              		.loc 1 923 26
 2321 05a2 FB6D     		ldr	r3, [r7, #92]
 2322 05a4 1A80     		strh	r2, [r3]	@ movhi
 924:Src/register_interface.c ****               break;
 2323              		.loc 1 924 15
 2324 05a6 BAE0     		b	.L190
 2325              	.L169:
 925:Src/register_interface.c ****             }
 926:Src/register_interface.c **** 
 927:Src/register_interface.c ****             case MC_REG_V_D:
 928:Src/register_interface.c ****             {
 929:Src/register_interface.c ****               *regdata16 = MCI_GetVqd(pMCIN).d;
 2326              		.loc 1 929 28
 2327 05a8 D7F8A000 		ldr	r0, [r7, #160]
 2328 05ac FFF7FEFF 		bl	MCI_GetVqd
 2329 05b0 0346     		mov	r3, r0
 2330 05b2 BB64     		str	r3, [r7, #72]
 2331              		.loc 1 929 45
 2332 05b4 B7F94A20 		ldrsh	r2, [r7, #74]
 2333              		.loc 1 929 26
 2334 05b8 FB6D     		ldr	r3, [r7, #92]
 2335 05ba 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 59


 930:Src/register_interface.c ****               break;
 2336              		.loc 1 930 15
 2337 05bc AFE0     		b	.L190
 2338              	.L168:
 931:Src/register_interface.c ****             }
 932:Src/register_interface.c **** 
 933:Src/register_interface.c ****             case MC_REG_V_ALPHA:
 934:Src/register_interface.c ****             {
 935:Src/register_interface.c ****               *regdata16 = MCI_GetValphabeta(pMCIN).alpha;
 2339              		.loc 1 935 28
 2340 05be D7F8A000 		ldr	r0, [r7, #160]
 2341 05c2 FFF7FEFF 		bl	MCI_GetValphabeta
 2342 05c6 0346     		mov	r3, r0
 2343 05c8 FB64     		str	r3, [r7, #76]
 2344              		.loc 1 935 52
 2345 05ca B7F94C20 		ldrsh	r2, [r7, #76]
 2346              		.loc 1 935 26
 2347 05ce FB6D     		ldr	r3, [r7, #92]
 2348 05d0 1A80     		strh	r2, [r3]	@ movhi
 936:Src/register_interface.c ****               break;
 2349              		.loc 1 936 15
 2350 05d2 A4E0     		b	.L190
 2351              	.L167:
 937:Src/register_interface.c ****             }
 938:Src/register_interface.c **** 
 939:Src/register_interface.c ****             case MC_REG_V_BETA:
 940:Src/register_interface.c ****             {
 941:Src/register_interface.c ****               *regdata16 = MCI_GetValphabeta(pMCIN).beta;
 2352              		.loc 1 941 28
 2353 05d4 D7F8A000 		ldr	r0, [r7, #160]
 2354 05d8 FFF7FEFF 		bl	MCI_GetValphabeta
 2355 05dc 0346     		mov	r3, r0
 2356 05de 3B65     		str	r3, [r7, #80]
 2357              		.loc 1 941 52
 2358 05e0 B7F95220 		ldrsh	r2, [r7, #82]
 2359              		.loc 1 941 26
 2360 05e4 FB6D     		ldr	r3, [r7, #92]
 2361 05e6 1A80     		strh	r2, [r3]	@ movhi
 942:Src/register_interface.c ****               break;
 2362              		.loc 1 942 15
 2363 05e8 99E0     		b	.L190
 2364              	.L166:
 943:Src/register_interface.c ****             }
 944:Src/register_interface.c **** 
 945:Src/register_interface.c ****             case MC_REG_ENCODER_EL_ANGLE:
 946:Src/register_interface.c ****             {
 947:Src/register_interface.c ****               *regdata16 = SPD_GetElAngle ((SpeednPosFdbk_Handle_t*) &ENCODER_M1); //cstat !MISRAC2
 2365              		.loc 1 947 28
 2366 05ea 4448     		ldr	r0, .L227+16
 2367 05ec FFF7FEFF 		bl	SPD_GetElAngle
 2368 05f0 0346     		mov	r3, r0
 2369 05f2 1A46     		mov	r2, r3
 2370              		.loc 1 947 26
 2371 05f4 FB6D     		ldr	r3, [r7, #92]
 2372 05f6 1A80     		strh	r2, [r3]	@ movhi
 948:Src/register_interface.c ****               break;
 2373              		.loc 1 948 15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 60


 2374 05f8 91E0     		b	.L190
 2375              	.L165:
 949:Src/register_interface.c ****             }
 950:Src/register_interface.c **** 
 951:Src/register_interface.c ****             case MC_REG_ENCODER_SPEED:
 952:Src/register_interface.c ****             {
 953:Src/register_interface.c ****               *regdata16 = SPD_GetS16Speed ((SpeednPosFdbk_Handle_t*) &ENCODER_M1); //cstat !MISRAC
 2376              		.loc 1 953 28
 2377 05fa 4048     		ldr	r0, .L227+16
 2378 05fc FFF7FEFF 		bl	SPD_GetS16Speed
 2379 0600 0346     		mov	r3, r0
 2380 0602 1A46     		mov	r2, r3
 2381              		.loc 1 953 26
 2382 0604 FB6D     		ldr	r3, [r7, #92]
 2383 0606 1A80     		strh	r2, [r3]	@ movhi
 954:Src/register_interface.c ****               break;
 2384              		.loc 1 954 15
 2385 0608 89E0     		b	.L190
 2386              	.L163:
 955:Src/register_interface.c ****             }
 956:Src/register_interface.c **** 
 957:Src/register_interface.c ****             case MC_REG_DAC_USER1:
 958:Src/register_interface.c ****             case MC_REG_DAC_USER2:
 959:Src/register_interface.c ****               break;
 960:Src/register_interface.c **** 
 961:Src/register_interface.c ****             case MC_REG_POSITION_KP:
 962:Src/register_interface.c ****             {
 963:Src/register_interface.c ****               *regdata16 = PID_GetKP( &PID_PosParamsM1);
 2387              		.loc 1 963 28
 2388 060a 3D48     		ldr	r0, .L227+20
 2389 060c FFF7FEFF 		bl	PID_GetKP
 2390 0610 0346     		mov	r3, r0
 2391 0612 1A46     		mov	r2, r3
 2392              		.loc 1 963 26
 2393 0614 FB6D     		ldr	r3, [r7, #92]
 2394 0616 1A80     		strh	r2, [r3]	@ movhi
 964:Src/register_interface.c ****               break;
 2395              		.loc 1 964 15
 2396 0618 81E0     		b	.L190
 2397              	.L162:
 965:Src/register_interface.c ****             }
 966:Src/register_interface.c **** 
 967:Src/register_interface.c ****             case MC_REG_POSITION_KI:
 968:Src/register_interface.c ****             {
 969:Src/register_interface.c ****               *regdata16 = PID_GetKI( &PID_PosParamsM1);
 2398              		.loc 1 969 28
 2399 061a 3948     		ldr	r0, .L227+20
 2400 061c FFF7FEFF 		bl	PID_GetKI
 2401 0620 0346     		mov	r3, r0
 2402 0622 1A46     		mov	r2, r3
 2403              		.loc 1 969 26
 2404 0624 FB6D     		ldr	r3, [r7, #92]
 2405 0626 1A80     		strh	r2, [r3]	@ movhi
 970:Src/register_interface.c ****               break;
 2406              		.loc 1 970 15
 2407 0628 79E0     		b	.L190
 2408              	.L161:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 61


 971:Src/register_interface.c ****             }
 972:Src/register_interface.c **** 
 973:Src/register_interface.c ****             case MC_REG_POSITION_KD:
 974:Src/register_interface.c ****             {
 975:Src/register_interface.c ****               *regdata16 = PID_GetKD( &PID_PosParamsM1);
 2409              		.loc 1 975 28
 2410 062a 3548     		ldr	r0, .L227+20
 2411 062c FFF7FEFF 		bl	PID_GetKD
 2412 0630 0346     		mov	r3, r0
 2413 0632 1A46     		mov	r2, r3
 2414              		.loc 1 975 26
 2415 0634 FB6D     		ldr	r3, [r7, #92]
 2416 0636 1A80     		strh	r2, [r3]	@ movhi
 976:Src/register_interface.c ****               break;
 2417              		.loc 1 976 15
 2418 0638 71E0     		b	.L190
 2419              	.L160:
 977:Src/register_interface.c ****             }
 978:Src/register_interface.c **** 
 979:Src/register_interface.c ****             case MC_REG_SPEED_KP_DIV:
 980:Src/register_interface.c ****             {
 981:Src/register_interface.c ****               *regdataU16 = (uint16_t)PID_GetKPDivisorPOW2(&PIDSpeedHandle_M1);
 2420              		.loc 1 981 39
 2421 063a 2C48     		ldr	r0, .L227
 2422 063c FFF7FEFF 		bl	PID_GetKPDivisorPOW2
 2423 0640 0346     		mov	r3, r0
 2424 0642 1A46     		mov	r2, r3
 2425              		.loc 1 981 27
 2426 0644 3B6E     		ldr	r3, [r7, #96]
 2427 0646 1A80     		strh	r2, [r3]	@ movhi
 982:Src/register_interface.c ****               break;
 2428              		.loc 1 982 15
 2429 0648 69E0     		b	.L190
 2430              	.L159:
 983:Src/register_interface.c ****             }
 984:Src/register_interface.c **** 
 985:Src/register_interface.c ****             case MC_REG_SPEED_KI_DIV:
 986:Src/register_interface.c ****             {
 987:Src/register_interface.c ****               *regdataU16 = (uint16_t)PID_GetKIDivisorPOW2(&PIDSpeedHandle_M1);
 2431              		.loc 1 987 39
 2432 064a 2848     		ldr	r0, .L227
 2433 064c FFF7FEFF 		bl	PID_GetKIDivisorPOW2
 2434 0650 0346     		mov	r3, r0
 2435 0652 1A46     		mov	r2, r3
 2436              		.loc 1 987 27
 2437 0654 3B6E     		ldr	r3, [r7, #96]
 2438 0656 1A80     		strh	r2, [r3]	@ movhi
 988:Src/register_interface.c ****               break;
 2439              		.loc 1 988 15
 2440 0658 61E0     		b	.L190
 2441              	.L158:
 989:Src/register_interface.c ****             }
 990:Src/register_interface.c **** 
 991:Src/register_interface.c ****             case MC_REG_SPEED_KD_DIV:
 992:Src/register_interface.c ****             {
 993:Src/register_interface.c ****               *regdataU16 = PID_GetKDDivisorPOW2(&PIDSpeedHandle_M1);
 2442              		.loc 1 993 29
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 62


 2443 065a 2448     		ldr	r0, .L227
 2444 065c FFF7FEFF 		bl	PID_GetKDDivisorPOW2
 2445 0660 0346     		mov	r3, r0
 2446 0662 1A46     		mov	r2, r3
 2447              		.loc 1 993 27
 2448 0664 3B6E     		ldr	r3, [r7, #96]
 2449 0666 1A80     		strh	r2, [r3]	@ movhi
 994:Src/register_interface.c ****               break;
 2450              		.loc 1 994 15
 2451 0668 59E0     		b	.L190
 2452              	.L157:
 995:Src/register_interface.c ****             }
 996:Src/register_interface.c ****             case MC_REG_I_D_KP_DIV:
 997:Src/register_interface.c ****             {
 998:Src/register_interface.c ****               *regdataU16 = PID_GetKPDivisorPOW2(&PIDIdHandle_M1);
 2453              		.loc 1 998 29
 2454 066a 2248     		ldr	r0, .L227+8
 2455 066c FFF7FEFF 		bl	PID_GetKPDivisorPOW2
 2456 0670 0346     		mov	r3, r0
 2457 0672 1A46     		mov	r2, r3
 2458              		.loc 1 998 27
 2459 0674 3B6E     		ldr	r3, [r7, #96]
 2460 0676 1A80     		strh	r2, [r3]	@ movhi
 999:Src/register_interface.c ****               break;
 2461              		.loc 1 999 15
 2462 0678 51E0     		b	.L190
 2463              	.L156:
1000:Src/register_interface.c ****             }
1001:Src/register_interface.c **** 
1002:Src/register_interface.c ****             case MC_REG_I_D_KI_DIV:
1003:Src/register_interface.c ****             {
1004:Src/register_interface.c ****               *regdataU16 = PID_GetKIDivisorPOW2(&PIDIdHandle_M1);
 2464              		.loc 1 1004 29
 2465 067a 1E48     		ldr	r0, .L227+8
 2466 067c FFF7FEFF 		bl	PID_GetKIDivisorPOW2
 2467 0680 0346     		mov	r3, r0
 2468 0682 1A46     		mov	r2, r3
 2469              		.loc 1 1004 27
 2470 0684 3B6E     		ldr	r3, [r7, #96]
 2471 0686 1A80     		strh	r2, [r3]	@ movhi
1005:Src/register_interface.c ****               break;
 2472              		.loc 1 1005 15
 2473 0688 49E0     		b	.L190
 2474              	.L155:
1006:Src/register_interface.c ****             }
1007:Src/register_interface.c **** 
1008:Src/register_interface.c ****             case MC_REG_I_D_KD_DIV:
1009:Src/register_interface.c ****             {
1010:Src/register_interface.c ****               *regdataU16 = PID_GetKDDivisorPOW2(&PIDIdHandle_M1);
 2475              		.loc 1 1010 29
 2476 068a 1A48     		ldr	r0, .L227+8
 2477 068c FFF7FEFF 		bl	PID_GetKDDivisorPOW2
 2478 0690 0346     		mov	r3, r0
 2479 0692 1A46     		mov	r2, r3
 2480              		.loc 1 1010 27
 2481 0694 3B6E     		ldr	r3, [r7, #96]
 2482 0696 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 63


1011:Src/register_interface.c ****               break;
 2483              		.loc 1 1011 15
 2484 0698 41E0     		b	.L190
 2485              	.L154:
1012:Src/register_interface.c ****             }
1013:Src/register_interface.c **** 
1014:Src/register_interface.c ****             case MC_REG_I_Q_KP_DIV:
1015:Src/register_interface.c ****             {
1016:Src/register_interface.c ****               *regdataU16 = PID_GetKPDivisorPOW2(&PIDIqHandle_M1);
 2486              		.loc 1 1016 29
 2487 069a 1548     		ldr	r0, .L227+4
 2488 069c FFF7FEFF 		bl	PID_GetKPDivisorPOW2
 2489 06a0 0346     		mov	r3, r0
 2490 06a2 1A46     		mov	r2, r3
 2491              		.loc 1 1016 27
 2492 06a4 3B6E     		ldr	r3, [r7, #96]
 2493 06a6 1A80     		strh	r2, [r3]	@ movhi
1017:Src/register_interface.c ****               break;
 2494              		.loc 1 1017 15
 2495 06a8 39E0     		b	.L190
 2496              	.L153:
1018:Src/register_interface.c ****             }
1019:Src/register_interface.c **** 
1020:Src/register_interface.c ****             case MC_REG_I_Q_KI_DIV:
1021:Src/register_interface.c ****             {
1022:Src/register_interface.c ****               *regdataU16 = PID_GetKIDivisorPOW2(&PIDIqHandle_M1);
 2497              		.loc 1 1022 29
 2498 06aa 1148     		ldr	r0, .L227+4
 2499 06ac FFF7FEFF 		bl	PID_GetKIDivisorPOW2
 2500 06b0 0346     		mov	r3, r0
 2501 06b2 1A46     		mov	r2, r3
 2502              		.loc 1 1022 27
 2503 06b4 3B6E     		ldr	r3, [r7, #96]
 2504 06b6 1A80     		strh	r2, [r3]	@ movhi
1023:Src/register_interface.c ****               break;
 2505              		.loc 1 1023 15
 2506 06b8 31E0     		b	.L190
 2507              	.L152:
1024:Src/register_interface.c ****             }
1025:Src/register_interface.c **** 
1026:Src/register_interface.c ****             case MC_REG_I_Q_KD_DIV:
1027:Src/register_interface.c ****             {
1028:Src/register_interface.c ****               *regdataU16 = PID_GetKDDivisorPOW2(&PIDIqHandle_M1);
 2508              		.loc 1 1028 29
 2509 06ba 0D48     		ldr	r0, .L227+4
 2510 06bc FFF7FEFF 		bl	PID_GetKDDivisorPOW2
 2511 06c0 0346     		mov	r3, r0
 2512 06c2 1A46     		mov	r2, r3
 2513              		.loc 1 1028 27
 2514 06c4 3B6E     		ldr	r3, [r7, #96]
 2515 06c6 1A80     		strh	r2, [r3]	@ movhi
1029:Src/register_interface.c ****               break;
 2516              		.loc 1 1029 15
 2517 06c8 29E0     		b	.L190
 2518              	.L151:
1030:Src/register_interface.c ****             }
1031:Src/register_interface.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 64


1032:Src/register_interface.c ****             case MC_REG_POSITION_KP_DIV:
1033:Src/register_interface.c ****             {
1034:Src/register_interface.c ****               *regdataU16 = PID_GetKPDivisorPOW2(&PID_PosParamsM1);
 2519              		.loc 1 1034 29
 2520 06ca 0D48     		ldr	r0, .L227+20
 2521 06cc FFF7FEFF 		bl	PID_GetKPDivisorPOW2
 2522 06d0 0346     		mov	r3, r0
 2523 06d2 1A46     		mov	r2, r3
 2524              		.loc 1 1034 27
 2525 06d4 3B6E     		ldr	r3, [r7, #96]
 2526 06d6 1A80     		strh	r2, [r3]	@ movhi
1035:Src/register_interface.c ****               break;
 2527              		.loc 1 1035 15
 2528 06d8 21E0     		b	.L190
 2529              	.L150:
1036:Src/register_interface.c ****             }
1037:Src/register_interface.c **** 
1038:Src/register_interface.c ****             case MC_REG_POSITION_KI_DIV:
1039:Src/register_interface.c ****             {
1040:Src/register_interface.c ****               *regdataU16 = PID_GetKIDivisorPOW2(&PID_PosParamsM1);
 2530              		.loc 1 1040 29
 2531 06da 0948     		ldr	r0, .L227+20
 2532 06dc FFF7FEFF 		bl	PID_GetKIDivisorPOW2
 2533 06e0 0346     		mov	r3, r0
 2534 06e2 1A46     		mov	r2, r3
 2535              		.loc 1 1040 27
 2536 06e4 3B6E     		ldr	r3, [r7, #96]
 2537 06e6 1A80     		strh	r2, [r3]	@ movhi
1041:Src/register_interface.c ****               break;
 2538              		.loc 1 1041 15
 2539 06e8 19E0     		b	.L190
 2540              	.L228:
 2541 06ea 00BF     		.align	2
 2542              	.L227:
 2543 06ec 00000000 		.word	PIDSpeedHandle_M1
 2544 06f0 00000000 		.word	PIDIqHandle_M1
 2545 06f4 00000000 		.word	PIDIdHandle_M1
 2546 06f8 00000000 		.word	TempSensor_M1
 2547 06fc 00000000 		.word	ENCODER_M1
 2548 0700 00000000 		.word	PID_PosParamsM1
 2549              	.L148:
1042:Src/register_interface.c ****             }
1043:Src/register_interface.c **** 
1044:Src/register_interface.c ****             case MC_REG_POSITION_KD_DIV:
1045:Src/register_interface.c ****             {
1046:Src/register_interface.c ****               *regdataU16 = PID_GetKDDivisorPOW2(&PID_PosParamsM1);
 2550              		.loc 1 1046 29
 2551 0704 B248     		ldr	r0, .L229
 2552 0706 FFF7FEFF 		bl	PID_GetKDDivisorPOW2
 2553 070a 0346     		mov	r3, r0
 2554 070c 1A46     		mov	r2, r3
 2555              		.loc 1 1046 27
 2556 070e 3B6E     		ldr	r3, [r7, #96]
 2557 0710 1A80     		strh	r2, [r3]	@ movhi
1047:Src/register_interface.c ****               break;
 2558              		.loc 1 1047 15
 2559 0712 04E0     		b	.L190
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 65


 2560              	.L149:
1048:Src/register_interface.c ****             }
1049:Src/register_interface.c **** 
1050:Src/register_interface.c ****             default:
1051:Src/register_interface.c ****             {
1052:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 2561              		.loc 1 1052 22
 2562 0714 0523     		movs	r3, #5
 2563 0716 87F8A730 		strb	r3, [r7, #167]
1053:Src/register_interface.c ****               break;
 2564              		.loc 1 1053 15
 2565 071a 00E0     		b	.L190
 2566              	.L224:
 959:Src/register_interface.c **** 
 2567              		.loc 1 959 15
 2568 071c 00BF     		nop
 2569              	.L190:
1054:Src/register_interface.c ****             }
1055:Src/register_interface.c ****           }
1056:Src/register_interface.c ****           *size = 2;
 2570              		.loc 1 1056 17
 2571 071e 7B68     		ldr	r3, [r7, #4]
 2572 0720 0222     		movs	r2, #2
 2573 0722 1A80     		strh	r2, [r3]	@ movhi
1057:Src/register_interface.c ****         }
1058:Src/register_interface.c ****         else
1059:Src/register_interface.c ****         {
1060:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
1061:Src/register_interface.c ****         }
1062:Src/register_interface.c ****         break;
 2574              		.loc 1 1062 9
 2575 0724 F7E1     		b	.L146
 2576              	.L147:
1060:Src/register_interface.c ****         }
 2577              		.loc 1 1060 18
 2578 0726 0823     		movs	r3, #8
 2579 0728 87F8A730 		strb	r3, [r7, #167]
 2580              		.loc 1 1062 9
 2581 072c F3E1     		b	.L146
 2582              	.L135:
 2583              	.LBE22:
 2584              	.LBB23:
1063:Src/register_interface.c ****       }
1064:Src/register_interface.c **** 
1065:Src/register_interface.c ****       case TYPE_DATA_32BIT:
1066:Src/register_interface.c ****       {
1067:Src/register_interface.c ****         uint32_t *regdataU32 = (uint32_t *)data; //cstat !MISRAC2012-Rule-11.3
 2585              		.loc 1 1067 19
 2586 072e BB68     		ldr	r3, [r7, #8]
 2587 0730 BB66     		str	r3, [r7, #104]
1068:Src/register_interface.c ****         int32_t *regdata32 = (int32_t *)data; //cstat !MISRAC2012-Rule-11.3
 2588              		.loc 1 1068 18
 2589 0732 BB68     		ldr	r3, [r7, #8]
 2590 0734 7B66     		str	r3, [r7, #100]
1069:Src/register_interface.c **** 
1070:Src/register_interface.c ****         if (freeSpace >= 4)
 2591              		.loc 1 1070 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 66


 2592 0736 B7F9B830 		ldrsh	r3, [r7, #184]
 2593 073a 032B     		cmp	r3, #3
 2594 073c 5EDD     		ble	.L192
1071:Src/register_interface.c ****         {
1072:Src/register_interface.c ****           switch (regID)
 2595              		.loc 1 1072 11
 2596 073e FB89     		ldrh	r3, [r7, #14]
 2597 0740 41F65832 		movw	r2, #7000
 2598 0744 9342     		cmp	r3, r2
 2599 0746 44D0     		beq	.L193
 2600 0748 41F65832 		movw	r2, #7000
 2601 074c 9342     		cmp	r3, r2
 2602 074e 4DDC     		bgt	.L194
 2603 0750 40F65822 		movw	r2, #2648
 2604 0754 9342     		cmp	r3, r2
 2605 0756 30D0     		beq	.L195
 2606 0758 40F65822 		movw	r2, #2648
 2607 075c 9342     		cmp	r3, r2
 2608 075e 45DC     		bgt	.L194
 2609 0760 982B     		cmp	r3, #152
 2610 0762 1CD0     		beq	.L196
 2611 0764 982B     		cmp	r3, #152
 2612 0766 41DC     		bgt	.L194
 2613 0768 182B     		cmp	r3, #24
 2614 076a 02D0     		beq	.L197
 2615 076c 582B     		cmp	r3, #88
 2616 076e 08D0     		beq	.L198
 2617 0770 3CE0     		b	.L194
 2618              	.L197:
1073:Src/register_interface.c ****           {
1074:Src/register_interface.c ****             case MC_REG_FAULTS_FLAGS:
1075:Src/register_interface.c ****             {
1076:Src/register_interface.c ****               *regdataU32 = MCI_GetFaultState(pMCIN);
 2619              		.loc 1 1076 29
 2620 0772 D7F8A000 		ldr	r0, [r7, #160]
 2621 0776 FFF7FEFF 		bl	MCI_GetFaultState
 2622 077a 0246     		mov	r2, r0
 2623              		.loc 1 1076 27
 2624 077c BB6E     		ldr	r3, [r7, #104]
 2625 077e 1A60     		str	r2, [r3]
1077:Src/register_interface.c ****               break;
 2626              		.loc 1 1077 15
 2627 0780 38E0     		b	.L199
 2628              	.L198:
1078:Src/register_interface.c ****             }
1079:Src/register_interface.c ****             case MC_REG_SPEED_MEAS:
1080:Src/register_interface.c ****             {
1081:Src/register_interface.c ****               *regdata32 = (((int32_t)MCI_GetAvrgMecSpeedUnit(pMCIN) * U_RPM) / SPEED_UNIT);
 2629              		.loc 1 1081 39
 2630 0782 D7F8A000 		ldr	r0, [r7, #160]
 2631 0786 FFF7FEFF 		bl	MCI_GetAvrgMecSpeedUnit
 2632 078a 0346     		mov	r3, r0
 2633              		.loc 1 1081 30
 2634 078c 1A46     		mov	r2, r3
 2635              		.loc 1 1081 79
 2636 078e 1346     		mov	r3, r2
 2637 0790 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 67


 2638 0792 1344     		add	r3, r3, r2
 2639 0794 5B00     		lsls	r3, r3, #1
 2640 0796 1A46     		mov	r2, r3
 2641              		.loc 1 1081 26
 2642 0798 7B6E     		ldr	r3, [r7, #100]
 2643 079a 1A60     		str	r2, [r3]
1082:Src/register_interface.c ****               break;
 2644              		.loc 1 1082 15
 2645 079c 2AE0     		b	.L199
 2646              	.L196:
1083:Src/register_interface.c ****             }
1084:Src/register_interface.c **** 
1085:Src/register_interface.c ****             case MC_REG_SPEED_REF:
1086:Src/register_interface.c ****             {
1087:Src/register_interface.c ****               *regdata32 = (((int32_t)MCI_GetMecSpeedRefUnit(pMCIN) * U_RPM) / SPEED_UNIT);
 2647              		.loc 1 1087 39
 2648 079e D7F8A000 		ldr	r0, [r7, #160]
 2649 07a2 FFF7FEFF 		bl	MCI_GetMecSpeedRefUnit
 2650 07a6 0346     		mov	r3, r0
 2651              		.loc 1 1087 30
 2652 07a8 1A46     		mov	r2, r3
 2653              		.loc 1 1087 78
 2654 07aa 1346     		mov	r3, r2
 2655 07ac 5B00     		lsls	r3, r3, #1
 2656 07ae 1344     		add	r3, r3, r2
 2657 07b0 5B00     		lsls	r3, r3, #1
 2658 07b2 1A46     		mov	r2, r3
 2659              		.loc 1 1087 26
 2660 07b4 7B6E     		ldr	r3, [r7, #100]
 2661 07b6 1A60     		str	r2, [r3]
1088:Src/register_interface.c ****               break;
 2662              		.loc 1 1088 15
 2663 07b8 1CE0     		b	.L199
 2664              	.L195:
 2665              	.LBB24:
1089:Src/register_interface.c ****             }
1090:Src/register_interface.c **** 
1091:Src/register_interface.c ****             case MC_REG_CURRENT_POSITION:
1092:Src/register_interface.c ****             {
1093:Src/register_interface.c ****               FloatToU32 ReadVal;
1094:Src/register_interface.c ****               ReadVal.Float_Val = MCI_GetCurrentPosition(pMCIN);
 2666              		.loc 1 1094 35
 2667 07ba D7F8A000 		ldr	r0, [r7, #160]
 2668 07be FFF7FEFF 		bl	MCI_GetCurrentPosition
 2669 07c2 F0EE407A 		vmov.f32	s15, s0
 2670              		.loc 1 1094 33
 2671 07c6 C7ED087A 		vstr.32	s15, [r7, #32]
1095:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val;
 2672              		.loc 1 1095 36
 2673 07ca 3A6A     		ldr	r2, [r7, #32]
 2674              		.loc 1 1095 27
 2675 07cc BB6E     		ldr	r3, [r7, #104]
 2676 07ce 1A60     		str	r2, [r3]
1096:Src/register_interface.c ****               break;
 2677              		.loc 1 1096 15
 2678 07d0 10E0     		b	.L199
 2679              	.L193:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 68


 2680              	.LBE24:
 2681              	.LBB25:
1097:Src/register_interface.c ****             }
1098:Src/register_interface.c **** 
1099:Src/register_interface.c ****             case MC_REG_MOTOR_POWER:
1100:Src/register_interface.c ****             {
1101:Src/register_interface.c ****               FloatToU32 ReadVal; //cstat !MISRAC2012-Rule-19.2
1102:Src/register_interface.c ****               ReadVal.Float_Val = PQD_GetAvrgElMotorPowerW(pMPM[M1]);
 2682              		.loc 1 1102 64
 2683 07d2 804B     		ldr	r3, .L229+4
 2684 07d4 1B68     		ldr	r3, [r3]
 2685              		.loc 1 1102 35
 2686 07d6 1846     		mov	r0, r3
 2687 07d8 FFF7FEFF 		bl	PQD_GetAvrgElMotorPowerW
 2688 07dc F0EE407A 		vmov.f32	s15, s0
 2689              		.loc 1 1102 33
 2690 07e0 C7ED077A 		vstr.32	s15, [r7, #28]
1103:Src/register_interface.c ****               *regdataU32 = ReadVal.U32_Val; //cstat !UNION-type-punning
 2691              		.loc 1 1103 36
 2692 07e4 FA69     		ldr	r2, [r7, #28]
 2693              		.loc 1 1103 27
 2694 07e6 BB6E     		ldr	r3, [r7, #104]
 2695 07e8 1A60     		str	r2, [r3]
1104:Src/register_interface.c ****               break;
 2696              		.loc 1 1104 15
 2697 07ea 03E0     		b	.L199
 2698              	.L194:
 2699              	.LBE25:
1105:Src/register_interface.c ****             }
1106:Src/register_interface.c **** 
1107:Src/register_interface.c ****             default:
1108:Src/register_interface.c ****             {
1109:Src/register_interface.c ****               retVal = MCP_ERROR_UNKNOWN_REG;
 2700              		.loc 1 1109 22
 2701 07ec 0523     		movs	r3, #5
 2702 07ee 87F8A730 		strb	r3, [r7, #167]
1110:Src/register_interface.c ****               break;
 2703              		.loc 1 1110 15
 2704 07f2 00BF     		nop
 2705              	.L199:
1111:Src/register_interface.c ****             }
1112:Src/register_interface.c ****           }
1113:Src/register_interface.c ****           *size = 4;
 2706              		.loc 1 1113 17
 2707 07f4 7B68     		ldr	r3, [r7, #4]
 2708 07f6 0422     		movs	r2, #4
 2709 07f8 1A80     		strh	r2, [r3]	@ movhi
1114:Src/register_interface.c ****         }
1115:Src/register_interface.c ****         else
1116:Src/register_interface.c ****         {
1117:Src/register_interface.c ****           retVal = MCP_ERROR_NO_TXSYNC_SPACE;
1118:Src/register_interface.c ****         }
1119:Src/register_interface.c ****         break;
 2710              		.loc 1 1119 9
 2711 07fa 8CE1     		b	.L146
 2712              	.L192:
1117:Src/register_interface.c ****         }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 69


 2713              		.loc 1 1117 18
 2714 07fc 0823     		movs	r3, #8
 2715 07fe 87F8A730 		strb	r3, [r7, #167]
 2716              		.loc 1 1119 9
 2717 0802 88E1     		b	.L146
 2718              	.L134:
 2719              	.LBE23:
 2720              	.LBB26:
1120:Src/register_interface.c ****       }
1121:Src/register_interface.c **** 
1122:Src/register_interface.c ****       case TYPE_DATA_STRING:
1123:Src/register_interface.c ****       {
1124:Src/register_interface.c ****         char_t *charData = (char_t *)data;
 2721              		.loc 1 1124 17
 2722 0804 BB68     		ldr	r3, [r7, #8]
 2723 0806 FB66     		str	r3, [r7, #108]
1125:Src/register_interface.c ****         switch (regID)
 2724              		.loc 1 1125 9
 2725 0808 FB89     		ldrh	r3, [r7, #14]
 2726 080a A02B     		cmp	r3, #160
 2727 080c 02D0     		beq	.L201
 2728 080e E02B     		cmp	r3, #224
 2729 0810 0FD0     		beq	.L202
 2730 0812 1FE0     		b	.L223
 2731              	.L201:
1126:Src/register_interface.c ****         {
1127:Src/register_interface.c ****           case MC_REG_PWR_STAGE_NAME:
1128:Src/register_interface.c ****           {
1129:Src/register_interface.c ****             retVal = RI_MovString (PWR_BOARD_NAME[motorID], charData, size, freeSpace);
 2732              		.loc 1 1129 22
 2733 0814 97F8A630 		ldrb	r3, [r7, #166]	@ zero_extendqisi2
 2734 0818 6F4A     		ldr	r2, .L229+8
 2735 081a 52F82300 		ldr	r0, [r2, r3, lsl #2]
 2736 081e B7F9B830 		ldrsh	r3, [r7, #184]
 2737 0822 7A68     		ldr	r2, [r7, #4]
 2738 0824 F96E     		ldr	r1, [r7, #108]
 2739 0826 FFF7FEFF 		bl	RI_MovString
 2740 082a 0346     		mov	r3, r0
 2741 082c 87F8A730 		strb	r3, [r7, #167]
1130:Src/register_interface.c ****             break;
 2742              		.loc 1 1130 13
 2743 0830 17E0     		b	.L204
 2744              	.L202:
1131:Src/register_interface.c ****           }
1132:Src/register_interface.c **** 
1133:Src/register_interface.c ****           case MC_REG_MOTOR_NAME:
1134:Src/register_interface.c ****           {
1135:Src/register_interface.c ****             retVal = RI_MovString (MotorConfig_reg[motorID]->name ,charData, size, freeSpace);
 2745              		.loc 1 1135 51
 2746 0832 97F8A630 		ldrb	r3, [r7, #166]	@ zero_extendqisi2
 2747 0836 694A     		ldr	r2, .L229+12
 2748 0838 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2749              		.loc 1 1135 60
 2750 083c 03F12400 		add	r0, r3, #36
 2751              		.loc 1 1135 22
 2752 0840 B7F9B830 		ldrsh	r3, [r7, #184]
 2753 0844 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 70


 2754 0846 F96E     		ldr	r1, [r7, #108]
 2755 0848 FFF7FEFF 		bl	RI_MovString
 2756 084c 0346     		mov	r3, r0
 2757 084e 87F8A730 		strb	r3, [r7, #167]
1136:Src/register_interface.c ****             break;
 2758              		.loc 1 1136 13
 2759 0852 06E0     		b	.L204
 2760              	.L223:
1137:Src/register_interface.c ****           }
1138:Src/register_interface.c **** 
1139:Src/register_interface.c ****           default:
1140:Src/register_interface.c ****           {
1141:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 2761              		.loc 1 1141 20
 2762 0854 0523     		movs	r3, #5
 2763 0856 87F8A730 		strb	r3, [r7, #167]
1142:Src/register_interface.c ****             *size= 0 ; /* */
 2764              		.loc 1 1142 18
 2765 085a 7B68     		ldr	r3, [r7, #4]
 2766 085c 0022     		movs	r2, #0
 2767 085e 1A80     		strh	r2, [r3]	@ movhi
1143:Src/register_interface.c ****             break;
 2768              		.loc 1 1143 13
 2769 0860 00BF     		nop
 2770              	.L204:
1144:Src/register_interface.c ****           }
1145:Src/register_interface.c ****         }
1146:Src/register_interface.c ****         break;
 2771              		.loc 1 1146 9
 2772 0862 58E1     		b	.L146
 2773              	.L132:
 2774              	.LBE26:
 2775              	.LBB27:
1147:Src/register_interface.c ****       }
1148:Src/register_interface.c **** 
1149:Src/register_interface.c ****       case TYPE_DATA_RAW:
1150:Src/register_interface.c ****       {
1151:Src/register_interface.c ****         /* First 2 bytes of the answer is reserved to the size */
1152:Src/register_interface.c ****         uint16_t *rawSize = (uint16_t *)data; //cstat !MISRAC2012-Rule-11.3
 2776              		.loc 1 1152 19
 2777 0864 BB68     		ldr	r3, [r7, #8]
 2778 0866 C7F89830 		str	r3, [r7, #152]
1153:Src/register_interface.c ****         uint8_t * rawData = data;
 2779              		.loc 1 1153 19
 2780 086a BB68     		ldr	r3, [r7, #8]
 2781 086c C7F89430 		str	r3, [r7, #148]
1154:Src/register_interface.c ****         rawData++;
 2782              		.loc 1 1154 16
 2783 0870 D7F89430 		ldr	r3, [r7, #148]
 2784 0874 0133     		adds	r3, r3, #1
 2785 0876 C7F89430 		str	r3, [r7, #148]
1155:Src/register_interface.c ****         rawData++;
 2786              		.loc 1 1155 16
 2787 087a D7F89430 		ldr	r3, [r7, #148]
 2788 087e 0133     		adds	r3, r3, #1
 2789 0880 C7F89430 		str	r3, [r7, #148]
1156:Src/register_interface.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 71


1157:Src/register_interface.c ****         switch (regID)
 2790              		.loc 1 1157 9
 2791 0884 FB89     		ldrh	r3, [r7, #14]
 2792 0886 B3F56A7F 		cmp	r3, #936
 2793 088a 00F01881 		beq	.L205
 2794 088e B3F56A7F 		cmp	r3, #936
 2795 0892 00F33081 		bgt	.L206
 2796 0896 B3F55A7F 		cmp	r3, #872
 2797 089a 00F0EA80 		beq	.L207
 2798 089e B3F55A7F 		cmp	r3, #872
 2799 08a2 00F32881 		bgt	.L206
 2800 08a6 B3F5F47F 		cmp	r3, #488
 2801 08aa 00F0C280 		beq	.L208
 2802 08ae B3F5F47F 		cmp	r3, #488
 2803 08b2 00F32081 		bgt	.L206
 2804 08b6 B3F5D47F 		cmp	r3, #424
 2805 08ba 00F09780 		beq	.L209
 2806 08be B3F5D47F 		cmp	r3, #424
 2807 08c2 00F31881 		bgt	.L206
 2808 08c6 B3F5947F 		cmp	r3, #296
 2809 08ca 64D0     		beq	.L210
 2810 08cc B3F5947F 		cmp	r3, #296
 2811 08d0 00F31181 		bgt	.L206
 2812 08d4 E82B     		cmp	r3, #232
 2813 08d6 41D0     		beq	.L211
 2814 08d8 E82B     		cmp	r3, #232
 2815 08da 00F30C81 		bgt	.L206
 2816 08de 682B     		cmp	r3, #104
 2817 08e0 1FD0     		beq	.L212
 2818 08e2 A82B     		cmp	r3, #168
 2819 08e4 40F00781 		bne	.L206
1158:Src/register_interface.c ****         {
1159:Src/register_interface.c ****           case MC_REG_APPLICATION_CONFIG:
1160:Src/register_interface.c ****           {
1161:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(ApplicationConfig_reg_t);
 2820              		.loc 1 1161 22
 2821 08e8 D7F89830 		ldr	r3, [r7, #152]
 2822 08ec 1022     		movs	r2, #16
 2823 08ee 1A80     		strh	r2, [r3]	@ movhi
1162:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 2824              		.loc 1 1162 19
 2825 08f0 D7F89830 		ldr	r3, [r7, #152]
 2826 08f4 1B88     		ldrh	r3, [r3]
 2827              		.loc 1 1162 29
 2828 08f6 0233     		adds	r3, r3, #2
 2829              		.loc 1 1162 37
 2830 08f8 B7F8B820 		ldrh	r2, [r7, #184]
 2831              		.loc 1 1162 16
 2832 08fc 9342     		cmp	r3, r2
 2833 08fe 03D9     		bls	.L213
1163:Src/register_interface.c ****             {
1164:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 2834              		.loc 1 1164 22
 2835 0900 0823     		movs	r3, #8
 2836 0902 87F8A730 		strb	r3, [r7, #167]
1165:Src/register_interface.c ****             }
1166:Src/register_interface.c ****             else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 72


1167:Src/register_interface.c ****             {
1168:Src/register_interface.c ****               ApplicationConfig_reg_t const *pApplicationConfig_reg = ApplicationConfig_reg[motorID
1169:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
1170:Src/register_interface.c ****             }
1171:Src/register_interface.c ****             break;
 2837              		.loc 1 1171 13
 2838 0906 FAE0     		b	.L215
 2839              	.L213:
 2840              	.LBB28:
1168:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
 2841              		.loc 1 1168 92
 2842 0908 97F8A630 		ldrb	r3, [r7, #166]	@ zero_extendqisi2
1168:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pApplicationConfig_reg, sizeof(ApplicationConf
 2843              		.loc 1 1168 46
 2844 090c 344A     		ldr	r2, .L229+16
 2845 090e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2846 0912 7B67     		str	r3, [r7, #116]
1169:Src/register_interface.c ****             }
 2847              		.loc 1 1169 21
 2848 0914 1022     		movs	r2, #16
 2849 0916 796F     		ldr	r1, [r7, #116]
 2850 0918 D7F89400 		ldr	r0, [r7, #148]
 2851 091c FFF7FEFF 		bl	memcpy
 2852              	.LBE28:
 2853              		.loc 1 1171 13
 2854 0920 EDE0     		b	.L215
 2855              	.L212:
1172:Src/register_interface.c ****           }
1173:Src/register_interface.c **** 
1174:Src/register_interface.c ****           case MC_REG_MOTOR_CONFIG:
1175:Src/register_interface.c ****           {
1176:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(MotorConfig_reg_t);
 2856              		.loc 1 1176 22
 2857 0922 D7F89830 		ldr	r3, [r7, #152]
 2858 0926 3C22     		movs	r2, #60
 2859 0928 1A80     		strh	r2, [r3]	@ movhi
1177:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 2860              		.loc 1 1177 19
 2861 092a D7F89830 		ldr	r3, [r7, #152]
 2862 092e 1B88     		ldrh	r3, [r3]
 2863              		.loc 1 1177 29
 2864 0930 0233     		adds	r3, r3, #2
 2865              		.loc 1 1177 37
 2866 0932 B7F8B820 		ldrh	r2, [r7, #184]
 2867              		.loc 1 1177 16
 2868 0936 9342     		cmp	r3, r2
 2869 0938 03D9     		bls	.L216
1178:Src/register_interface.c ****             {
1179:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 2870              		.loc 1 1179 22
 2871 093a 0823     		movs	r3, #8
 2872 093c 87F8A730 		strb	r3, [r7, #167]
1180:Src/register_interface.c ****             }
1181:Src/register_interface.c ****             else
1182:Src/register_interface.c ****             {
1183:Src/register_interface.c ****               MotorConfig_reg_t const *pMotorConfig_reg = MotorConfig_reg[motorID];
1184:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pMotorConfig_reg, sizeof(MotorConfig_reg_t));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 73


1185:Src/register_interface.c ****             }
1186:Src/register_interface.c ****             break;
 2873              		.loc 1 1186 13
 2874 0940 DDE0     		b	.L215
 2875              	.L216:
 2876              	.LBB29:
1183:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pMotorConfig_reg, sizeof(MotorConfig_reg_t));
 2877              		.loc 1 1183 74
 2878 0942 97F8A630 		ldrb	r3, [r7, #166]	@ zero_extendqisi2
1183:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pMotorConfig_reg, sizeof(MotorConfig_reg_t));
 2879              		.loc 1 1183 40
 2880 0946 254A     		ldr	r2, .L229+12
 2881 0948 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2882 094c 3B67     		str	r3, [r7, #112]
1184:Src/register_interface.c ****             }
 2883              		.loc 1 1184 21
 2884 094e 3C22     		movs	r2, #60
 2885 0950 396F     		ldr	r1, [r7, #112]
 2886 0952 D7F89400 		ldr	r0, [r7, #148]
 2887 0956 FFF7FEFF 		bl	memcpy
 2888              	.LBE29:
 2889              		.loc 1 1186 13
 2890 095a D0E0     		b	.L215
 2891              	.L211:
1187:Src/register_interface.c ****           }
1188:Src/register_interface.c **** 
1189:Src/register_interface.c ****           case MC_REG_FOCFW_CONFIG:
1190:Src/register_interface.c ****           {
1191:Src/register_interface.c ****             *rawSize = (uint16_t)sizeof(FOCFwConfig_reg_t);
 2892              		.loc 1 1191 22
 2893 095c D7F89830 		ldr	r3, [r7, #152]
 2894 0960 0E22     		movs	r2, #14
 2895 0962 1A80     		strh	r2, [r3]	@ movhi
1192:Src/register_interface.c ****             if (((*rawSize) + 2U) > (uint16_t)freeSpace)
 2896              		.loc 1 1192 19
 2897 0964 D7F89830 		ldr	r3, [r7, #152]
 2898 0968 1B88     		ldrh	r3, [r3]
 2899              		.loc 1 1192 29
 2900 096a 0233     		adds	r3, r3, #2
 2901              		.loc 1 1192 37
 2902 096c B7F8B820 		ldrh	r2, [r7, #184]
 2903              		.loc 1 1192 16
 2904 0970 9342     		cmp	r3, r2
 2905 0972 03D9     		bls	.L218
1193:Src/register_interface.c ****             {
1194:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 2906              		.loc 1 1194 22
 2907 0974 0823     		movs	r3, #8
 2908 0976 87F8A730 		strb	r3, [r7, #167]
1195:Src/register_interface.c ****             }
1196:Src/register_interface.c ****             else
1197:Src/register_interface.c ****             {
1198:Src/register_interface.c ****               FOCFwConfig_reg_t const *pFOCConfig_reg = FOCConfig_reg[motorID];
1199:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
1200:Src/register_interface.c ****             }
1201:Src/register_interface.c **** 
1202:Src/register_interface.c ****             break;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 74


 2909              		.loc 1 1202 13
 2910 097a C0E0     		b	.L215
 2911              	.L218:
 2912              	.LBB30:
1198:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
 2913              		.loc 1 1198 70
 2914 097c 97F8A630 		ldrb	r3, [r7, #166]	@ zero_extendqisi2
1198:Src/register_interface.c ****               (void)memcpy(rawData, (const uint8_t *)pFOCConfig_reg, sizeof(FOCFwConfig_reg_t));
 2915              		.loc 1 1198 40
 2916 0980 184A     		ldr	r2, .L229+20
 2917 0982 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2918 0986 BB67     		str	r3, [r7, #120]
1199:Src/register_interface.c ****             }
 2919              		.loc 1 1199 21
 2920 0988 0E22     		movs	r2, #14
 2921 098a B96F     		ldr	r1, [r7, #120]
 2922 098c D7F89400 		ldr	r0, [r7, #148]
 2923 0990 FFF7FEFF 		bl	memcpy
 2924              	.LBE30:
 2925              		.loc 1 1202 13
 2926 0994 B3E0     		b	.L215
 2927              	.L210:
1203:Src/register_interface.c ****           }
1204:Src/register_interface.c ****           case MC_REG_SCALE_CONFIG:
1205:Src/register_interface.c ****           {
1206:Src/register_interface.c ****             *rawSize = 12;
 2928              		.loc 1 1206 22
 2929 0996 D7F89830 		ldr	r3, [r7, #152]
 2930 099a 0C22     		movs	r2, #12
 2931 099c 1A80     		strh	r2, [r3]	@ movhi
1207:Src/register_interface.c ****             if ((*rawSize) +2U > (uint16_t)freeSpace)
 2932              		.loc 1 1207 18
 2933 099e D7F89830 		ldr	r3, [r7, #152]
 2934 09a2 1B88     		ldrh	r3, [r3]
 2935              		.loc 1 1207 28
 2936 09a4 0233     		adds	r3, r3, #2
 2937              		.loc 1 1207 34
 2938 09a6 B7F8B820 		ldrh	r2, [r7, #184]
 2939              		.loc 1 1207 16
 2940 09aa 9342     		cmp	r3, r2
 2941 09ac 03D9     		bls	.L220
1208:Src/register_interface.c ****             {
1209:Src/register_interface.c ****               retVal = MCP_ERROR_NO_TXSYNC_SPACE;
 2942              		.loc 1 1209 22
 2943 09ae 0823     		movs	r3, #8
 2944 09b0 87F8A730 		strb	r3, [r7, #167]
1210:Src/register_interface.c ****             }
1211:Src/register_interface.c ****             else
1212:Src/register_interface.c ****             {
1213:Src/register_interface.c ****               memcpy(rawData, &scaleParams_M1, sizeof(ScaleParams_t) );
1214:Src/register_interface.c ****             }
1215:Src/register_interface.c ****             break;
 2945              		.loc 1 1215 13
 2946 09b4 A3E0     		b	.L215
 2947              	.L220:
1213:Src/register_interface.c ****             }
 2948              		.loc 1 1213 15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 75


 2949 09b6 D7F89430 		ldr	r3, [r7, #148]
 2950 09ba 0B4A     		ldr	r2, .L229+24
 2951 09bc 1468     		ldr	r4, [r2]	@ unaligned
 2952 09be 5068     		ldr	r0, [r2, #4]	@ unaligned
 2953 09c0 9168     		ldr	r1, [r2, #8]	@ unaligned
 2954 09c2 D268     		ldr	r2, [r2, #12]	@ unaligned
 2955 09c4 1C60     		str	r4, [r3]	@ unaligned
 2956 09c6 5860     		str	r0, [r3, #4]	@ unaligned
 2957 09c8 9960     		str	r1, [r3, #8]	@ unaligned
 2958 09ca DA60     		str	r2, [r3, #12]	@ unaligned
 2959              		.loc 1 1215 13
 2960 09cc 97E0     		b	.L215
 2961              	.L230:
 2962 09ce 00BF     		.align	2
 2963              	.L229:
 2964 09d0 00000000 		.word	PID_PosParamsM1
 2965 09d4 00000000 		.word	pMPM
 2966 09d8 00000000 		.word	PWR_BOARD_NAME
 2967 09dc 00000000 		.word	MotorConfig_reg
 2968 09e0 00000000 		.word	ApplicationConfig_reg
 2969 09e4 00000000 		.word	FOCConfig_reg
 2970 09e8 00000000 		.word	scaleParams_M1
 2971              	.L209:
 2972              	.LBB31:
1216:Src/register_interface.c ****           }
1217:Src/register_interface.c ****           case MC_REG_SPEED_RAMP:
1218:Src/register_interface.c ****           {
1219:Src/register_interface.c ****             int32_t *rpm = (int32_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 2973              		.loc 1 1219 22
 2974 09ec D7F89430 		ldr	r3, [r7, #148]
 2975 09f0 C7F88030 		str	r3, [r7, #128]
1220:Src/register_interface.c ****             uint16_t *duration = (uint16_t *)&rawData[4]; //cstat !MISRAC2012-Rule-11.3
 2976              		.loc 1 1220 23
 2977 09f4 D7F89430 		ldr	r3, [r7, #148]
 2978 09f8 0433     		adds	r3, r3, #4
 2979 09fa FB67     		str	r3, [r7, #124]
1221:Src/register_interface.c ****             *rpm = (((int32_t)MCI_GetLastRampFinalSpeed(pMCIN) * U_RPM) / (int32_t)SPEED_UNIT);
 2980              		.loc 1 1221 31
 2981 09fc D7F8A000 		ldr	r0, [r7, #160]
 2982 0a00 FFF7FEFF 		bl	MCI_GetLastRampFinalSpeed
 2983 0a04 0346     		mov	r3, r0
 2984              		.loc 1 1221 22
 2985 0a06 1A46     		mov	r2, r3
 2986              		.loc 1 1221 73
 2987 0a08 1346     		mov	r3, r2
 2988 0a0a 5B00     		lsls	r3, r3, #1
 2989 0a0c 1344     		add	r3, r3, r2
 2990 0a0e 5B00     		lsls	r3, r3, #1
 2991 0a10 1A46     		mov	r2, r3
 2992              		.loc 1 1221 18
 2993 0a12 D7F88030 		ldr	r3, [r7, #128]
 2994 0a16 1A60     		str	r2, [r3]
1222:Src/register_interface.c ****             *duration = MCI_GetLastRampFinalDuration(pMCIN);
 2995              		.loc 1 1222 25
 2996 0a18 D7F8A000 		ldr	r0, [r7, #160]
 2997 0a1c FFF7FEFF 		bl	MCI_GetLastRampFinalDuration
 2998 0a20 0346     		mov	r3, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 76


 2999 0a22 1A46     		mov	r2, r3
 3000              		.loc 1 1222 23
 3001 0a24 FB6F     		ldr	r3, [r7, #124]
 3002 0a26 1A80     		strh	r2, [r3]	@ movhi
1223:Src/register_interface.c ****             *rawSize = 6;
 3003              		.loc 1 1223 22
 3004 0a28 D7F89830 		ldr	r3, [r7, #152]
 3005 0a2c 0622     		movs	r2, #6
 3006 0a2e 1A80     		strh	r2, [r3]	@ movhi
1224:Src/register_interface.c ****             break;
 3007              		.loc 1 1224 13
 3008 0a30 65E0     		b	.L215
 3009              	.L208:
 3010              	.LBE31:
 3011              	.LBB32:
1225:Src/register_interface.c ****           }
1226:Src/register_interface.c **** 
1227:Src/register_interface.c ****           case MC_REG_TORQUE_RAMP:
1228:Src/register_interface.c ****           {
1229:Src/register_interface.c ****             int16_t *torque = (int16_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 3012              		.loc 1 1229 22
 3013 0a32 D7F89430 		ldr	r3, [r7, #148]
 3014 0a36 C7F88830 		str	r3, [r7, #136]
1230:Src/register_interface.c ****             uint16_t *duration = (uint16_t *)&rawData[2]; //cstat !MISRAC2012-Rule-11.3
 3015              		.loc 1 1230 23
 3016 0a3a D7F89430 		ldr	r3, [r7, #148]
 3017 0a3e 0233     		adds	r3, r3, #2
 3018 0a40 C7F88430 		str	r3, [r7, #132]
1231:Src/register_interface.c **** 
1232:Src/register_interface.c ****             *rawSize = 4;
 3019              		.loc 1 1232 22
 3020 0a44 D7F89830 		ldr	r3, [r7, #152]
 3021 0a48 0422     		movs	r2, #4
 3022 0a4a 1A80     		strh	r2, [r3]	@ movhi
1233:Src/register_interface.c ****             *torque = MCI_GetLastRampFinalTorque(pMCIN);
 3023              		.loc 1 1233 23
 3024 0a4c D7F8A000 		ldr	r0, [r7, #160]
 3025 0a50 FFF7FEFF 		bl	MCI_GetLastRampFinalTorque
 3026 0a54 0346     		mov	r3, r0
 3027 0a56 1A46     		mov	r2, r3
 3028              		.loc 1 1233 21
 3029 0a58 D7F88830 		ldr	r3, [r7, #136]
 3030 0a5c 1A80     		strh	r2, [r3]	@ movhi
1234:Src/register_interface.c ****             *duration = MCI_GetLastRampFinalDuration(pMCIN) ;
 3031              		.loc 1 1234 25
 3032 0a5e D7F8A000 		ldr	r0, [r7, #160]
 3033 0a62 FFF7FEFF 		bl	MCI_GetLastRampFinalDuration
 3034 0a66 0346     		mov	r3, r0
 3035 0a68 1A46     		mov	r2, r3
 3036              		.loc 1 1234 23
 3037 0a6a D7F88430 		ldr	r3, [r7, #132]
 3038 0a6e 1A80     		strh	r2, [r3]	@ movhi
1235:Src/register_interface.c ****             break;
 3039              		.loc 1 1235 13
 3040 0a70 45E0     		b	.L215
 3041              	.L207:
 3042              	.LBE32:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 77


 3043              	.LBB33:
1236:Src/register_interface.c ****           }
1237:Src/register_interface.c **** 
1238:Src/register_interface.c ****           case MC_REG_CURRENT_REF:
1239:Src/register_interface.c ****           {
1240:Src/register_interface.c ****             uint16_t *iqref = (uint16_t *)rawData; //cstat !MISRAC2012-Rule-11.3
 3044              		.loc 1 1240 23
 3045 0a72 D7F89430 		ldr	r3, [r7, #148]
 3046 0a76 C7F89030 		str	r3, [r7, #144]
1241:Src/register_interface.c ****             uint16_t *idref = (uint16_t *)&rawData[2]; //cstat !MISRAC2012-Rule-11.3
 3047              		.loc 1 1241 23
 3048 0a7a D7F89430 		ldr	r3, [r7, #148]
 3049 0a7e 0233     		adds	r3, r3, #2
 3050 0a80 C7F88C30 		str	r3, [r7, #140]
1242:Src/register_interface.c **** 
1243:Src/register_interface.c ****             *rawSize = 4;
 3051              		.loc 1 1243 22
 3052 0a84 D7F89830 		ldr	r3, [r7, #152]
 3053 0a88 0422     		movs	r2, #4
 3054 0a8a 1A80     		strh	r2, [r3]	@ movhi
1244:Src/register_interface.c ****             *iqref = (uint16_t)MCI_GetIqdref(pMCIN).q;
 3055              		.loc 1 1244 32
 3056 0a8c D7F8A000 		ldr	r0, [r7, #160]
 3057 0a90 FFF7FEFF 		bl	MCI_GetIqdref
 3058 0a94 0346     		mov	r3, r0
 3059 0a96 7B65     		str	r3, [r7, #84]
 3060              		.loc 1 1244 52
 3061 0a98 B7F95430 		ldrsh	r3, [r7, #84]
 3062              		.loc 1 1244 22
 3063 0a9c 9AB2     		uxth	r2, r3
 3064              		.loc 1 1244 20
 3065 0a9e D7F89030 		ldr	r3, [r7, #144]
 3066 0aa2 1A80     		strh	r2, [r3]	@ movhi
1245:Src/register_interface.c ****             *idref = (uint16_t)MCI_GetIqdref(pMCIN).d;
 3067              		.loc 1 1245 32
 3068 0aa4 D7F8A000 		ldr	r0, [r7, #160]
 3069 0aa8 FFF7FEFF 		bl	MCI_GetIqdref
 3070 0aac 0346     		mov	r3, r0
 3071 0aae BB65     		str	r3, [r7, #88]
 3072              		.loc 1 1245 52
 3073 0ab0 B7F95A30 		ldrsh	r3, [r7, #90]
 3074              		.loc 1 1245 22
 3075 0ab4 9AB2     		uxth	r2, r3
 3076              		.loc 1 1245 20
 3077 0ab6 D7F88C30 		ldr	r3, [r7, #140]
 3078 0aba 1A80     		strh	r2, [r3]	@ movhi
1246:Src/register_interface.c ****             break;
 3079              		.loc 1 1246 13
 3080 0abc 1FE0     		b	.L215
 3081              	.L205:
 3082              	.LBE33:
 3083              	.LBB34:
1247:Src/register_interface.c ****           }
1248:Src/register_interface.c **** 
1249:Src/register_interface.c ****           case MC_REG_POSITION_RAMP:
1250:Src/register_interface.c ****           {
1251:Src/register_interface.c ****             float Position;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 78


1252:Src/register_interface.c ****             float Duration;
1253:Src/register_interface.c **** 
1254:Src/register_interface.c ****             *rawSize = 8;
 3084              		.loc 1 1254 22
 3085 0abe D7F89830 		ldr	r3, [r7, #152]
 3086 0ac2 0822     		movs	r2, #8
 3087 0ac4 1A80     		strh	r2, [r3]	@ movhi
1255:Src/register_interface.c ****             Position = TC_GetMoveDuration(&PosCtrlM1);   /* Does this duration make sense ? */
 3088              		.loc 1 1255 24
 3089 0ac6 1748     		ldr	r0, .L231
 3090 0ac8 FFF7FEFF 		bl	TC_GetMoveDuration
 3091 0acc F0EE407A 		vmov.f32	s15, s0
 3092              		.loc 1 1255 22
 3093 0ad0 C7ED067A 		vstr.32	s15, [r7, #24]
1256:Src/register_interface.c ****             Duration = TC_GetTargetPosition(&PosCtrlM1);
 3094              		.loc 1 1256 24
 3095 0ad4 1348     		ldr	r0, .L231
 3096 0ad6 FFF7FEFF 		bl	TC_GetTargetPosition
 3097 0ada F0EE407A 		vmov.f32	s15, s0
 3098              		.loc 1 1256 22
 3099 0ade C7ED057A 		vstr.32	s15, [r7, #20]
 3100 0ae2 BA69     		ldr	r2, [r7, #24]
1257:Src/register_interface.c ****             (void)memcpy(rawData, &Position, 4);
 3101              		.loc 1 1257 19
 3102 0ae4 D7F89430 		ldr	r3, [r7, #148]
 3103 0ae8 1A60     		str	r2, [r3]	@ unaligned
1258:Src/register_interface.c ****             (void)memcpy(&rawData[4], &Duration, 4);
 3104              		.loc 1 1258 26
 3105 0aea D7F89430 		ldr	r3, [r7, #148]
 3106 0aee 0433     		adds	r3, r3, #4
 3107 0af0 7A69     		ldr	r2, [r7, #20]
 3108              		.loc 1 1258 19
 3109 0af2 1A60     		str	r2, [r3]	@ unaligned
1259:Src/register_interface.c ****             break;
 3110              		.loc 1 1259 13
 3111 0af4 03E0     		b	.L215
 3112              	.L206:
 3113              	.LBE34:
1260:Src/register_interface.c ****           }
1261:Src/register_interface.c **** 
1262:Src/register_interface.c ****           case MC_REG_ASYNC_UARTA:
1263:Src/register_interface.c ****           case MC_REG_ASYNC_UARTB:
1264:Src/register_interface.c ****           case MC_REG_ASYNC_STLNK:
1265:Src/register_interface.c ****           default:
1266:Src/register_interface.c ****           {
1267:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 3114              		.loc 1 1267 20
 3115 0af6 0523     		movs	r3, #5
 3116 0af8 87F8A730 		strb	r3, [r7, #167]
1268:Src/register_interface.c ****             break;
 3117              		.loc 1 1268 13
 3118 0afc 00BF     		nop
 3119              	.L215:
1269:Src/register_interface.c ****           }
1270:Src/register_interface.c ****         }
1271:Src/register_interface.c **** 
1272:Src/register_interface.c ****         /* Size of the answer is size of the data + 2 bytes containing data size */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 79


1273:Src/register_interface.c ****         *size = (*rawSize) + 2U;
 3120              		.loc 1 1273 18
 3121 0afe D7F89830 		ldr	r3, [r7, #152]
 3122 0b02 1B88     		ldrh	r3, [r3]
 3123              		.loc 1 1273 28
 3124 0b04 0233     		adds	r3, r3, #2
 3125 0b06 9AB2     		uxth	r2, r3
 3126              		.loc 1 1273 15
 3127 0b08 7B68     		ldr	r3, [r7, #4]
 3128 0b0a 1A80     		strh	r2, [r3]	@ movhi
1274:Src/register_interface.c ****         break;
 3129              		.loc 1 1274 9
 3130 0b0c 03E0     		b	.L146
 3131              	.L131:
 3132              	.LBE27:
1275:Src/register_interface.c ****       }
1276:Src/register_interface.c **** 
1277:Src/register_interface.c ****       default:
1278:Src/register_interface.c ****       {
1279:Src/register_interface.c ****         retVal = MCP_ERROR_BAD_DATA_TYPE;
 3133              		.loc 1 1279 16
 3134 0b0e 0723     		movs	r3, #7
 3135 0b10 87F8A730 		strb	r3, [r7, #167]
1280:Src/register_interface.c ****         break;
 3136              		.loc 1 1280 9
 3137 0b14 00BF     		nop
 3138              	.L146:
1281:Src/register_interface.c ****       }
1282:Src/register_interface.c ****     }
1283:Src/register_interface.c ****     return (retVal);
 3139              		.loc 1 1283 12
 3140 0b16 97F8A730 		ldrb	r3, [r7, #167]	@ zero_extendqisi2
1284:Src/register_interface.c ****   }
 3141              		.loc 1 1284 3
 3142 0b1a 1846     		mov	r0, r3
 3143 0b1c AC37     		adds	r7, r7, #172
 3144              	.LCFI18:
 3145              		.cfi_def_cfa_offset 12
 3146 0b1e BD46     		mov	sp, r7
 3147              	.LCFI19:
 3148              		.cfi_def_cfa_register 13
 3149              		@ sp needed
 3150 0b20 90BD     		pop	{r4, r7, pc}
 3151              	.L232:
 3152 0b22 00BF     		.align	2
 3153              	.L231:
 3154 0b24 00000000 		.word	PosCtrlM1
 3155              		.cfi_endproc
 3156              	.LFE1093:
 3158              		.section	.text.RI_MovString,"ax",%progbits
 3159              		.align	1
 3160              		.global	RI_MovString
 3161              		.syntax unified
 3162              		.thumb
 3163              		.thumb_func
 3165              	RI_MovString:
 3166              	.LFB1094:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 80


1285:Src/register_interface.c **** 
1286:Src/register_interface.c **** uint8_t RI_MovString(const char_t *srcString, char_t *destString, uint16_t *size, int16_t maxSize)
1287:Src/register_interface.c **** {
 3167              		.loc 1 1287 1
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 32
 3170              		@ frame_needed = 1, uses_anonymous_args = 0
 3171              		@ link register save eliminated.
 3172 0000 80B4     		push	{r7}
 3173              	.LCFI20:
 3174              		.cfi_def_cfa_offset 4
 3175              		.cfi_offset 7, -4
 3176 0002 89B0     		sub	sp, sp, #36
 3177              	.LCFI21:
 3178              		.cfi_def_cfa_offset 40
 3179 0004 00AF     		add	r7, sp, #0
 3180              	.LCFI22:
 3181              		.cfi_def_cfa_register 7
 3182 0006 F860     		str	r0, [r7, #12]
 3183 0008 B960     		str	r1, [r7, #8]
 3184 000a 7A60     		str	r2, [r7, #4]
 3185 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1288:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 3186              		.loc 1 1288 11
 3187 000e 0023     		movs	r3, #0
 3188 0010 FB77     		strb	r3, [r7, #31]
1289:Src/register_interface.c ****   const char_t *tempsrcString = srcString;
 3189              		.loc 1 1289 17
 3190 0012 FB68     		ldr	r3, [r7, #12]
 3191 0014 BB61     		str	r3, [r7, #24]
1290:Src/register_interface.c ****   char_t *tempdestString = destString;
 3192              		.loc 1 1290 11
 3193 0016 BB68     		ldr	r3, [r7, #8]
 3194 0018 7B61     		str	r3, [r7, #20]
1291:Src/register_interface.c ****   *size= 1U ; /* /0 is the min String size */
 3195              		.loc 1 1291 8
 3196 001a 7B68     		ldr	r3, [r7, #4]
 3197 001c 0122     		movs	r2, #1
 3198 001e 1A80     		strh	r2, [r3]	@ movhi
1292:Src/register_interface.c **** 
1293:Src/register_interface.c ****   while ((*tempsrcString != (char_t)0) && (*size < (uint16_t)maxSize))
 3199              		.loc 1 1293 9
 3200 0020 10E0     		b	.L234
 3201              	.L236:
1294:Src/register_interface.c ****   {
1295:Src/register_interface.c ****     *tempdestString = *tempsrcString;
 3202              		.loc 1 1295 23
 3203 0022 BB69     		ldr	r3, [r7, #24]
 3204 0024 93F90020 		ldrsb	r2, [r3]
 3205              		.loc 1 1295 21
 3206 0028 7B69     		ldr	r3, [r7, #20]
 3207 002a 1A70     		strb	r2, [r3]
1296:Src/register_interface.c ****     tempdestString++;
 3208              		.loc 1 1296 19
 3209 002c 7B69     		ldr	r3, [r7, #20]
 3210 002e 0133     		adds	r3, r3, #1
 3211 0030 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 81


1297:Src/register_interface.c ****     tempsrcString++;
 3212              		.loc 1 1297 18
 3213 0032 BB69     		ldr	r3, [r7, #24]
 3214 0034 0133     		adds	r3, r3, #1
 3215 0036 BB61     		str	r3, [r7, #24]
1298:Src/register_interface.c ****     *size = *size + 1U;
 3216              		.loc 1 1298 13
 3217 0038 7B68     		ldr	r3, [r7, #4]
 3218 003a 1B88     		ldrh	r3, [r3]
 3219              		.loc 1 1298 19
 3220 003c 0133     		adds	r3, r3, #1
 3221 003e 9AB2     		uxth	r2, r3
 3222              		.loc 1 1298 11
 3223 0040 7B68     		ldr	r3, [r7, #4]
 3224 0042 1A80     		strh	r2, [r3]	@ movhi
 3225              	.L234:
1293:Src/register_interface.c ****   {
 3226              		.loc 1 1293 11
 3227 0044 BB69     		ldr	r3, [r7, #24]
 3228 0046 93F90030 		ldrsb	r3, [r3]
1293:Src/register_interface.c ****   {
 3229              		.loc 1 1293 9
 3230 004a 002B     		cmp	r3, #0
 3231 004c 04D0     		beq	.L235
1293:Src/register_interface.c ****   {
 3232              		.loc 1 1293 44 discriminator 1
 3233 004e 7B68     		ldr	r3, [r7, #4]
 3234 0050 1A88     		ldrh	r2, [r3]
1293:Src/register_interface.c ****   {
 3235              		.loc 1 1293 50 discriminator 1
 3236 0052 7B88     		ldrh	r3, [r7, #2]
1293:Src/register_interface.c ****   {
 3237              		.loc 1 1293 40 discriminator 1
 3238 0054 9A42     		cmp	r2, r3
 3239 0056 E4D3     		bcc	.L236
 3240              	.L235:
1299:Src/register_interface.c ****   }
1300:Src/register_interface.c **** 
1301:Src/register_interface.c ****   if (*tempsrcString != (char_t)0)
 3241              		.loc 1 1301 7
 3242 0058 BB69     		ldr	r3, [r7, #24]
 3243 005a 93F90030 		ldrsb	r3, [r3]
 3244              		.loc 1 1301 6
 3245 005e 002B     		cmp	r3, #0
 3246 0060 02D0     		beq	.L237
1302:Src/register_interface.c ****   { /* Last string char must be 0 */
1303:Src/register_interface.c ****     retVal = MCP_ERROR_STRING_FORMAT;
 3247              		.loc 1 1303 12
 3248 0062 0623     		movs	r3, #6
 3249 0064 FB77     		strb	r3, [r7, #31]
 3250 0066 02E0     		b	.L238
 3251              	.L237:
1304:Src/register_interface.c ****   }
1305:Src/register_interface.c ****   else
1306:Src/register_interface.c ****   {
1307:Src/register_interface.c ****     *tempdestString = (int8_t)0;
 3252              		.loc 1 1307 21
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 82


 3253 0068 7B69     		ldr	r3, [r7, #20]
 3254 006a 0022     		movs	r2, #0
 3255 006c 1A70     		strb	r2, [r3]
 3256              	.L238:
1308:Src/register_interface.c ****   }
1309:Src/register_interface.c ****   return (retVal);
 3257              		.loc 1 1309 10
 3258 006e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
1310:Src/register_interface.c **** }
 3259              		.loc 1 1310 1
 3260 0070 1846     		mov	r0, r3
 3261 0072 2437     		adds	r7, r7, #36
 3262              	.LCFI23:
 3263              		.cfi_def_cfa_offset 4
 3264 0074 BD46     		mov	sp, r7
 3265              	.LCFI24:
 3266              		.cfi_def_cfa_register 13
 3267              		@ sp needed
 3268 0076 5DF8047B 		ldr	r7, [sp], #4
 3269              	.LCFI25:
 3270              		.cfi_restore 7
 3271              		.cfi_def_cfa_offset 0
 3272 007a 7047     		bx	lr
 3273              		.cfi_endproc
 3274              	.LFE1094:
 3276              		.section	.text.RI_GetIDSize,"ax",%progbits
 3277              		.align	1
 3278              		.global	RI_GetIDSize
 3279              		.syntax unified
 3280              		.thumb
 3281              		.thumb_func
 3283              	RI_GetIDSize:
 3284              	.LFB1095:
1311:Src/register_interface.c **** 
1312:Src/register_interface.c **** uint8_t RI_GetIDSize(uint16_t dataID)
1313:Src/register_interface.c **** {
 3285              		.loc 1 1313 1
 3286              		.cfi_startproc
 3287              		@ args = 0, pretend = 0, frame = 16
 3288              		@ frame_needed = 1, uses_anonymous_args = 0
 3289              		@ link register save eliminated.
 3290 0000 80B4     		push	{r7}
 3291              	.LCFI26:
 3292              		.cfi_def_cfa_offset 4
 3293              		.cfi_offset 7, -4
 3294 0002 85B0     		sub	sp, sp, #20
 3295              	.LCFI27:
 3296              		.cfi_def_cfa_offset 24
 3297 0004 00AF     		add	r7, sp, #0
 3298              	.LCFI28:
 3299              		.cfi_def_cfa_register 7
 3300 0006 0346     		mov	r3, r0
 3301 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1314:Src/register_interface.c ****   uint8_t typeID = ((uint8_t)dataID) & TYPE_MASK;
 3302              		.loc 1 1314 21
 3303 000a FB88     		ldrh	r3, [r7, #6]	@ movhi
 3304 000c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 83


 3305              		.loc 1 1314 11
 3306 000e 03F03803 		and	r3, r3, #56
 3307 0012 BB73     		strb	r3, [r7, #14]
1315:Src/register_interface.c ****   uint8_t result;
1316:Src/register_interface.c **** 
1317:Src/register_interface.c ****   switch (typeID)
 3308              		.loc 1 1317 3
 3309 0014 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3310 0016 182B     		cmp	r3, #24
 3311 0018 0CD0     		beq	.L241
 3312 001a 182B     		cmp	r3, #24
 3313 001c 0DDC     		bgt	.L242
 3314 001e 082B     		cmp	r3, #8
 3315 0020 02D0     		beq	.L243
 3316 0022 102B     		cmp	r3, #16
 3317 0024 03D0     		beq	.L244
 3318 0026 08E0     		b	.L242
 3319              	.L243:
1318:Src/register_interface.c ****   {
1319:Src/register_interface.c ****     case TYPE_DATA_8BIT:
1320:Src/register_interface.c ****     {
1321:Src/register_interface.c ****       result = 1;
 3320              		.loc 1 1321 14
 3321 0028 0123     		movs	r3, #1
 3322 002a FB73     		strb	r3, [r7, #15]
1322:Src/register_interface.c ****       break;
 3323              		.loc 1 1322 7
 3324 002c 08E0     		b	.L245
 3325              	.L244:
1323:Src/register_interface.c ****     }
1324:Src/register_interface.c **** 
1325:Src/register_interface.c ****     case TYPE_DATA_16BIT:
1326:Src/register_interface.c ****     {
1327:Src/register_interface.c ****       result = 2;
 3326              		.loc 1 1327 14
 3327 002e 0223     		movs	r3, #2
 3328 0030 FB73     		strb	r3, [r7, #15]
1328:Src/register_interface.c ****       break;
 3329              		.loc 1 1328 7
 3330 0032 05E0     		b	.L245
 3331              	.L241:
1329:Src/register_interface.c ****     }
1330:Src/register_interface.c **** 
1331:Src/register_interface.c ****     case TYPE_DATA_32BIT:
1332:Src/register_interface.c ****     {
1333:Src/register_interface.c ****       result = 4;
 3332              		.loc 1 1333 14
 3333 0034 0423     		movs	r3, #4
 3334 0036 FB73     		strb	r3, [r7, #15]
1334:Src/register_interface.c ****       break;
 3335              		.loc 1 1334 7
 3336 0038 02E0     		b	.L245
 3337              	.L242:
1335:Src/register_interface.c ****     }
1336:Src/register_interface.c **** 
1337:Src/register_interface.c ****     default:
1338:Src/register_interface.c ****     {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 84


1339:Src/register_interface.c ****       result=0;
 3338              		.loc 1 1339 13
 3339 003a 0023     		movs	r3, #0
 3340 003c FB73     		strb	r3, [r7, #15]
1340:Src/register_interface.c ****       break;
 3341              		.loc 1 1340 7
 3342 003e 00BF     		nop
 3343              	.L245:
1341:Src/register_interface.c ****     }
1342:Src/register_interface.c ****   }
1343:Src/register_interface.c **** 
1344:Src/register_interface.c ****   return (result);
 3344              		.loc 1 1344 10
 3345 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1345:Src/register_interface.c **** }
 3346              		.loc 1 1345 1
 3347 0042 1846     		mov	r0, r3
 3348 0044 1437     		adds	r7, r7, #20
 3349              	.LCFI29:
 3350              		.cfi_def_cfa_offset 4
 3351 0046 BD46     		mov	sp, r7
 3352              	.LCFI30:
 3353              		.cfi_def_cfa_register 13
 3354              		@ sp needed
 3355 0048 5DF8047B 		ldr	r7, [sp], #4
 3356              	.LCFI31:
 3357              		.cfi_restore 7
 3358              		.cfi_def_cfa_offset 0
 3359 004c 7047     		bx	lr
 3360              		.cfi_endproc
 3361              	.LFE1095:
 3363              		.section	.text.RI_GetPtrReg,"ax",%progbits
 3364              		.align	1
 3365              		.weak	RI_GetPtrReg
 3366              		.syntax unified
 3367              		.thumb
 3368              		.thumb_func
 3370              	RI_GetPtrReg:
 3371              	.LFB1096:
1346:Src/register_interface.c **** 
1347:Src/register_interface.c **** __weak uint8_t RI_GetPtrReg(uint16_t dataID, void **dataPtr)
1348:Src/register_interface.c **** {
 3372              		.loc 1 1348 1
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 24
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376              		@ link register save eliminated.
 3377 0000 80B4     		push	{r7}
 3378              	.LCFI32:
 3379              		.cfi_def_cfa_offset 4
 3380              		.cfi_offset 7, -4
 3381 0002 87B0     		sub	sp, sp, #28
 3382              	.LCFI33:
 3383              		.cfi_def_cfa_offset 32
 3384 0004 00AF     		add	r7, sp, #0
 3385              	.LCFI34:
 3386              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 85


 3387 0006 0346     		mov	r3, r0
 3388 0008 3960     		str	r1, [r7]
 3389 000a FB80     		strh	r3, [r7, #6]	@ movhi
1349:Src/register_interface.c **** 
1350:Src/register_interface.c ****   uint8_t retVal = MCP_CMD_OK;
 3390              		.loc 1 1350 11
 3391 000c 0023     		movs	r3, #0
 3392 000e FB75     		strb	r3, [r7, #23]
1351:Src/register_interface.c ****   static uint16_t nullData16=0;
1352:Src/register_interface.c **** 
1353:Src/register_interface.c **** #ifdef NULL_PTR_CHECK_REG_INT
1354:Src/register_interface.c ****   if (MC_NULL == dataPtr)
1355:Src/register_interface.c ****   {
1356:Src/register_interface.c ****     retVal = MCP_CMD_NOK;
1357:Src/register_interface.c ****   }
1358:Src/register_interface.c ****   else
1359:Src/register_interface.c ****   {
1360:Src/register_interface.c **** #endif
1361:Src/register_interface.c **** 
1362:Src/register_interface.c ****     MCI_Handle_t *pMCIN = &Mci[0];
 3393              		.loc 1 1362 19
 3394 0010 694B     		ldr	r3, .L267
 3395 0012 3B61     		str	r3, [r7, #16]
1363:Src/register_interface.c ****     uint16_t regID = dataID & REG_MASK;
 3396              		.loc 1 1363 14
 3397 0014 FB88     		ldrh	r3, [r7, #6]	@ movhi
 3398 0016 23F00703 		bic	r3, r3, #7
 3399 001a FB81     		strh	r3, [r7, #14]	@ movhi
1364:Src/register_interface.c ****     uint8_t typeID = ((uint8_t)dataID) & TYPE_MASK;
 3400              		.loc 1 1364 23
 3401 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 3402 001e DBB2     		uxtb	r3, r3
 3403              		.loc 1 1364 13
 3404 0020 03F03803 		and	r3, r3, #56
 3405 0024 7B73     		strb	r3, [r7, #13]
1365:Src/register_interface.c **** 
1366:Src/register_interface.c ****     switch (typeID)
 3406              		.loc 1 1366 5
 3407 0026 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3408 0028 102B     		cmp	r3, #16
 3409 002a 40F0B880 		bne	.L248
1367:Src/register_interface.c ****     {
1368:Src/register_interface.c ****       case TYPE_DATA_16BIT:
1369:Src/register_interface.c ****       {
1370:Src/register_interface.c ****         switch (regID)
 3410              		.loc 1 1370 9
 3411 002e FB89     		ldrh	r3, [r7, #14]
 3412 0030 B3F5316F 		cmp	r3, #2832
 3413 0034 00F0A480 		beq	.L249
 3414 0038 B3F5316F 		cmp	r3, #2832
 3415 003c 00F3A880 		bgt	.L250
 3416 0040 B3F52D6F 		cmp	r3, #2768
 3417 0044 00F0A080 		beq	.L251
 3418 0048 B3F52D6F 		cmp	r3, #2768
 3419 004c 00F3A080 		bgt	.L250
 3420 0050 B3F5296F 		cmp	r3, #2704
 3421 0054 00F08D80 		beq	.L252
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 86


 3422 0058 B3F5296F 		cmp	r3, #2704
 3423 005c 00F39880 		bgt	.L250
 3424 0060 B3F5256F 		cmp	r3, #2640
 3425 0064 7ED0     		beq	.L253
 3426 0066 B3F5256F 		cmp	r3, #2640
 3427 006a 00F39180 		bgt	.L250
 3428 006e B3F5216F 		cmp	r3, #2576
 3429 0072 70D0     		beq	.L254
 3430 0074 B3F5216F 		cmp	r3, #2576
 3431 0078 00F38A80 		bgt	.L250
 3432 007c B3F51D6F 		cmp	r3, #2512
 3433 0080 62D0     		beq	.L255
 3434 0082 B3F51D6F 		cmp	r3, #2512
 3435 0086 00F38380 		bgt	.L250
 3436 008a B3F5196F 		cmp	r3, #2448
 3437 008e 54D0     		beq	.L256
 3438 0090 B3F5196F 		cmp	r3, #2448
 3439 0094 7CDC     		bgt	.L250
 3440 0096 B3F5156F 		cmp	r3, #2384
 3441 009a 47D0     		beq	.L257
 3442 009c B3F5156F 		cmp	r3, #2384
 3443 00a0 76DC     		bgt	.L250
 3444 00a2 B3F5116F 		cmp	r3, #2320
 3445 00a6 3AD0     		beq	.L258
 3446 00a8 B3F5116F 		cmp	r3, #2320
 3447 00ac 70DC     		bgt	.L250
 3448 00ae B3F50D6F 		cmp	r3, #2256
 3449 00b2 2DD0     		beq	.L259
 3450 00b4 B3F50D6F 		cmp	r3, #2256
 3451 00b8 6ADC     		bgt	.L250
 3452 00ba B3F5096F 		cmp	r3, #2192
 3453 00be 21D0     		beq	.L260
 3454 00c0 B3F5096F 		cmp	r3, #2192
 3455 00c4 64DC     		bgt	.L250
 3456 00c6 B3F5056F 		cmp	r3, #2128
 3457 00ca 15D0     		beq	.L261
 3458 00cc B3F5056F 		cmp	r3, #2128
 3459 00d0 5EDC     		bgt	.L250
 3460 00d2 B3F5FA6F 		cmp	r3, #2000
 3461 00d6 03D0     		beq	.L262
 3462 00d8 B3F5016F 		cmp	r3, #2064
 3463 00dc 06D0     		beq	.L263
 3464 00de 57E0     		b	.L250
 3465              	.L262:
1371:Src/register_interface.c ****         {
1372:Src/register_interface.c ****           case MC_REG_I_A:
1373:Src/register_interface.c ****           {
1374:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iab.a);
 3466              		.loc 1 1374 31
 3467 00e0 3B69     		ldr	r3, [r7, #16]
 3468 00e2 5B68     		ldr	r3, [r3, #4]
 3469              		.loc 1 1374 24
 3470 00e4 1A46     		mov	r2, r3
 3471              		.loc 1 1374 22
 3472 00e6 3B68     		ldr	r3, [r7]
 3473 00e8 1A60     		str	r2, [r3]
1375:Src/register_interface.c ****              break;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 87


 3474              		.loc 1 1375 14
 3475 00ea 57E0     		b	.L264
 3476              	.L263:
1376:Src/register_interface.c ****           }
1377:Src/register_interface.c **** 
1378:Src/register_interface.c ****           case MC_REG_I_B:
1379:Src/register_interface.c ****           {
1380:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iab.b);
 3477              		.loc 1 1380 31
 3478 00ec 3B69     		ldr	r3, [r7, #16]
 3479 00ee 5B68     		ldr	r3, [r3, #4]
 3480              		.loc 1 1380 24
 3481 00f0 9A1C     		adds	r2, r3, #2
 3482              		.loc 1 1380 22
 3483 00f2 3B68     		ldr	r3, [r7]
 3484 00f4 1A60     		str	r2, [r3]
1381:Src/register_interface.c ****             break;
 3485              		.loc 1 1381 13
 3486 00f6 51E0     		b	.L264
 3487              	.L261:
1382:Src/register_interface.c ****           }
1383:Src/register_interface.c **** 
1384:Src/register_interface.c ****           case MC_REG_I_ALPHA_MEAS:
1385:Src/register_interface.c ****           {
1386:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Ialphabeta.alpha);
 3488              		.loc 1 1386 31
 3489 00f8 3B69     		ldr	r3, [r7, #16]
 3490 00fa 5B68     		ldr	r3, [r3, #4]
 3491              		.loc 1 1386 24
 3492 00fc 1A1D     		adds	r2, r3, #4
 3493              		.loc 1 1386 22
 3494 00fe 3B68     		ldr	r3, [r7]
 3495 0100 1A60     		str	r2, [r3]
1387:Src/register_interface.c ****             break;
 3496              		.loc 1 1387 13
 3497 0102 4BE0     		b	.L264
 3498              	.L260:
1388:Src/register_interface.c ****           }
1389:Src/register_interface.c **** 
1390:Src/register_interface.c ****           case MC_REG_I_BETA_MEAS:
1391:Src/register_interface.c ****           {
1392:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Ialphabeta.beta);
 3499              		.loc 1 1392 31
 3500 0104 3B69     		ldr	r3, [r7, #16]
 3501 0106 5B68     		ldr	r3, [r3, #4]
 3502              		.loc 1 1392 24
 3503 0108 9A1D     		adds	r2, r3, #6
 3504              		.loc 1 1392 22
 3505 010a 3B68     		ldr	r3, [r7]
 3506 010c 1A60     		str	r2, [r3]
1393:Src/register_interface.c ****             break;
 3507              		.loc 1 1393 13
 3508 010e 45E0     		b	.L264
 3509              	.L259:
1394:Src/register_interface.c ****           }
1395:Src/register_interface.c **** 
1396:Src/register_interface.c ****           case MC_REG_I_Q_MEAS:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 88


1397:Src/register_interface.c ****           {
1398:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iqd.q);
 3510              		.loc 1 1398 31
 3511 0110 3B69     		ldr	r3, [r7, #16]
 3512 0112 5B68     		ldr	r3, [r3, #4]
 3513              		.loc 1 1398 24
 3514 0114 03F10C02 		add	r2, r3, #12
 3515              		.loc 1 1398 22
 3516 0118 3B68     		ldr	r3, [r7]
 3517 011a 1A60     		str	r2, [r3]
1399:Src/register_interface.c ****             break;
 3518              		.loc 1 1399 13
 3519 011c 3EE0     		b	.L264
 3520              	.L258:
1400:Src/register_interface.c ****           }
1401:Src/register_interface.c **** 
1402:Src/register_interface.c ****           case MC_REG_I_D_MEAS:
1403:Src/register_interface.c ****           {
1404:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iqd.d);
 3521              		.loc 1 1404 31
 3522 011e 3B69     		ldr	r3, [r7, #16]
 3523 0120 5B68     		ldr	r3, [r3, #4]
 3524              		.loc 1 1404 24
 3525 0122 03F10E02 		add	r2, r3, #14
 3526              		.loc 1 1404 22
 3527 0126 3B68     		ldr	r3, [r7]
 3528 0128 1A60     		str	r2, [r3]
1405:Src/register_interface.c ****             break;
 3529              		.loc 1 1405 13
 3530 012a 37E0     		b	.L264
 3531              	.L257:
1406:Src/register_interface.c ****           }
1407:Src/register_interface.c **** 
1408:Src/register_interface.c ****           case MC_REG_I_Q_REF:
1409:Src/register_interface.c ****           {
1410:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iqdref.q);
 3532              		.loc 1 1410 31
 3533 012c 3B69     		ldr	r3, [r7, #16]
 3534 012e 5B68     		ldr	r3, [r3, #4]
 3535              		.loc 1 1410 24
 3536 0130 03F11002 		add	r2, r3, #16
 3537              		.loc 1 1410 22
 3538 0134 3B68     		ldr	r3, [r7]
 3539 0136 1A60     		str	r2, [r3]
1411:Src/register_interface.c ****             break;
 3540              		.loc 1 1411 13
 3541 0138 30E0     		b	.L264
 3542              	.L256:
1412:Src/register_interface.c ****           }
1413:Src/register_interface.c **** 
1414:Src/register_interface.c ****           case MC_REG_I_D_REF:
1415:Src/register_interface.c ****           {
1416:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Iqdref.d);
 3543              		.loc 1 1416 31
 3544 013a 3B69     		ldr	r3, [r7, #16]
 3545 013c 5B68     		ldr	r3, [r3, #4]
 3546              		.loc 1 1416 24
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 89


 3547 013e 03F11202 		add	r2, r3, #18
 3548              		.loc 1 1416 22
 3549 0142 3B68     		ldr	r3, [r7]
 3550 0144 1A60     		str	r2, [r3]
1417:Src/register_interface.c ****             break;
 3551              		.loc 1 1417 13
 3552 0146 29E0     		b	.L264
 3553              	.L255:
1418:Src/register_interface.c ****           }
1419:Src/register_interface.c **** 
1420:Src/register_interface.c ****           case MC_REG_V_Q:
1421:Src/register_interface.c ****           {
1422:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Vqd.q);
 3554              		.loc 1 1422 31
 3555 0148 3B69     		ldr	r3, [r7, #16]
 3556 014a 5B68     		ldr	r3, [r3, #4]
 3557              		.loc 1 1422 24
 3558 014c 03F11602 		add	r2, r3, #22
 3559              		.loc 1 1422 22
 3560 0150 3B68     		ldr	r3, [r7]
 3561 0152 1A60     		str	r2, [r3]
1423:Src/register_interface.c ****             break;
 3562              		.loc 1 1423 13
 3563 0154 22E0     		b	.L264
 3564              	.L254:
1424:Src/register_interface.c ****           }
1425:Src/register_interface.c **** 
1426:Src/register_interface.c ****           case MC_REG_V_D:
1427:Src/register_interface.c ****           {
1428:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Vqd.d);
 3565              		.loc 1 1428 31
 3566 0156 3B69     		ldr	r3, [r7, #16]
 3567 0158 5B68     		ldr	r3, [r3, #4]
 3568              		.loc 1 1428 24
 3569 015a 03F11802 		add	r2, r3, #24
 3570              		.loc 1 1428 22
 3571 015e 3B68     		ldr	r3, [r7]
 3572 0160 1A60     		str	r2, [r3]
1429:Src/register_interface.c ****             break;
 3573              		.loc 1 1429 13
 3574 0162 1BE0     		b	.L264
 3575              	.L253:
1430:Src/register_interface.c ****           }
1431:Src/register_interface.c **** 
1432:Src/register_interface.c ****           case MC_REG_V_ALPHA:
1433:Src/register_interface.c ****           {
1434:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Valphabeta.alpha);
 3576              		.loc 1 1434 31
 3577 0164 3B69     		ldr	r3, [r7, #16]
 3578 0166 5B68     		ldr	r3, [r3, #4]
 3579              		.loc 1 1434 24
 3580 0168 03F11A02 		add	r2, r3, #26
 3581              		.loc 1 1434 22
 3582 016c 3B68     		ldr	r3, [r7]
 3583 016e 1A60     		str	r2, [r3]
1435:Src/register_interface.c ****             break;
 3584              		.loc 1 1435 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 90


 3585 0170 14E0     		b	.L264
 3586              	.L252:
1436:Src/register_interface.c ****           }
1437:Src/register_interface.c **** 
1438:Src/register_interface.c ****           case MC_REG_V_BETA:
1439:Src/register_interface.c ****           {
1440:Src/register_interface.c ****             *dataPtr = &(pMCIN->pFOCVars->Valphabeta.beta);
 3587              		.loc 1 1440 31
 3588 0172 3B69     		ldr	r3, [r7, #16]
 3589 0174 5B68     		ldr	r3, [r3, #4]
 3590              		.loc 1 1440 24
 3591 0176 03F11C02 		add	r2, r3, #28
 3592              		.loc 1 1440 22
 3593 017a 3B68     		ldr	r3, [r7]
 3594 017c 1A60     		str	r2, [r3]
1441:Src/register_interface.c ****             break;
 3595              		.loc 1 1441 13
 3596 017e 0DE0     		b	.L264
 3597              	.L249:
1442:Src/register_interface.c ****           }
1443:Src/register_interface.c **** 
1444:Src/register_interface.c ****           case MC_REG_ENCODER_SPEED:
1445:Src/register_interface.c ****           {
1446:Src/register_interface.c ****             *dataPtr = &((&ENCODER_M1)->_Super.hAvrMecSpeedUnit);
 3598              		.loc 1 1446 22
 3599 0180 3B68     		ldr	r3, [r7]
 3600 0182 0E4A     		ldr	r2, .L267+4
 3601 0184 1A60     		str	r2, [r3]
1447:Src/register_interface.c ****             break;
 3602              		.loc 1 1447 13
 3603 0186 09E0     		b	.L264
 3604              	.L251:
1448:Src/register_interface.c ****           }
1449:Src/register_interface.c **** 
1450:Src/register_interface.c ****           case MC_REG_ENCODER_EL_ANGLE:
1451:Src/register_interface.c ****           {
1452:Src/register_interface.c ****             *dataPtr = &((&ENCODER_M1)->_Super.hElAngle);
 3605              		.loc 1 1452 22
 3606 0188 3B68     		ldr	r3, [r7]
 3607 018a 0D4A     		ldr	r2, .L267+8
 3608 018c 1A60     		str	r2, [r3]
1453:Src/register_interface.c ****             break;
 3609              		.loc 1 1453 13
 3610 018e 05E0     		b	.L264
 3611              	.L250:
1454:Src/register_interface.c ****           }
1455:Src/register_interface.c **** 
1456:Src/register_interface.c ****           default:
1457:Src/register_interface.c ****           {
1458:Src/register_interface.c ****             *dataPtr = &nullData16;
 3612              		.loc 1 1458 22
 3613 0190 3B68     		ldr	r3, [r7]
 3614 0192 0C4A     		ldr	r2, .L267+12
 3615 0194 1A60     		str	r2, [r3]
1459:Src/register_interface.c ****             retVal = MCP_ERROR_UNKNOWN_REG;
 3616              		.loc 1 1459 20
 3617 0196 0523     		movs	r3, #5
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 91


 3618 0198 FB75     		strb	r3, [r7, #23]
1460:Src/register_interface.c ****             break;
 3619              		.loc 1 1460 13
 3620 019a 00BF     		nop
 3621              	.L264:
1461:Src/register_interface.c ****           }
1462:Src/register_interface.c ****         }
1463:Src/register_interface.c ****         break;
 3622              		.loc 1 1463 9
 3623 019c 05E0     		b	.L265
 3624              	.L248:
1464:Src/register_interface.c ****       }
1465:Src/register_interface.c **** 
1466:Src/register_interface.c ****       default:
1467:Src/register_interface.c ****       {
1468:Src/register_interface.c ****         *dataPtr = &nullData16;
 3625              		.loc 1 1468 18
 3626 019e 3B68     		ldr	r3, [r7]
 3627 01a0 084A     		ldr	r2, .L267+12
 3628 01a2 1A60     		str	r2, [r3]
1469:Src/register_interface.c ****         retVal = MCP_ERROR_UNKNOWN_REG;
 3629              		.loc 1 1469 16
 3630 01a4 0523     		movs	r3, #5
 3631 01a6 FB75     		strb	r3, [r7, #23]
1470:Src/register_interface.c ****         break;
 3632              		.loc 1 1470 9
 3633 01a8 00BF     		nop
 3634              	.L265:
1471:Src/register_interface.c ****       }
1472:Src/register_interface.c ****     }
1473:Src/register_interface.c **** #ifdef NULL_PTR_CHECK_REG_INT
1474:Src/register_interface.c ****   }
1475:Src/register_interface.c **** #endif
1476:Src/register_interface.c ****   return (retVal);
 3635              		.loc 1 1476 10
 3636 01aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1477:Src/register_interface.c **** }
 3637              		.loc 1 1477 1
 3638 01ac 1846     		mov	r0, r3
 3639 01ae 1C37     		adds	r7, r7, #28
 3640              	.LCFI35:
 3641              		.cfi_def_cfa_offset 4
 3642 01b0 BD46     		mov	sp, r7
 3643              	.LCFI36:
 3644              		.cfi_def_cfa_register 13
 3645              		@ sp needed
 3646 01b2 5DF8047B 		ldr	r7, [sp], #4
 3647              	.LCFI37:
 3648              		.cfi_restore 7
 3649              		.cfi_def_cfa_offset 0
 3650 01b6 7047     		bx	lr
 3651              	.L268:
 3652              		.align	2
 3653              	.L267:
 3654 01b8 00000000 		.word	Mci
 3655 01bc 0C000000 		.word	ENCODER_M1+12
 3656 01c0 04000000 		.word	ENCODER_M1+4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 92


 3657 01c4 00000000 		.word	nullData16.0
 3658              		.cfi_endproc
 3659              	.LFE1096:
 3661              		.section	.bss.nullData16.0,"aw",%nobits
 3662              		.align	1
 3665              	nullData16.0:
 3666 0000 0000     		.space	2
 3667              		.text
 3668              	.Letext0:
 3669              		.file 2 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3670              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 3671              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3672              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_tim.h"
 3673              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
 3674              		.file 7 "Inc/mc_type.h"
 3675              		.file 8 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcptl.h"
 3676              		.file 9 "Inc/pwm_curr_fdbk.h"
 3677              		.file 10 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 3678              		.file 11 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 3679              		.file 12 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 3680              		.file 13 "Inc/mc_perf.h"
 3681              		.file 14 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/encoder_speed_pos_fdbk.h"
 3682              		.file 15 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/trajectory_ctrl.h"
 3683              		.file 16 "Inc/mc_interface.h"
 3684              		.file 17 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 3685              		.file 18 "Inc/mc_configuration_registers.h"
 3686              		.file 19 "Inc/mc_parameters.h"
 3687              		.file 20 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 3688              		.file 21 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 3689              		.file 22 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
 3690              		.file 23 "Inc/mc_config.h"
 3691              		.file 24 "MCSDK_v6.2.1-Full/MotorControl/MCSDK/MCLib/Any/Inc/mcpa.h"
 3692              		.file 25 "Inc/mcp_config.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 93


DEFINED SYMBOLS
                            *ABS*:00000000 register_interface.c
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:20     .rodata.OFFSET_TAB_CCMRx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:23     .rodata.OFFSET_TAB_CCMRx:00000000 OFFSET_TAB_CCMRx
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:26     .rodata.SHIFT_TAB_OCxx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:29     .rodata.SHIFT_TAB_OCxx:00000000 SHIFT_TAB_OCxx
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:32     .rodata.SHIFT_TAB_ICxx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:35     .rodata.SHIFT_TAB_ICxx:00000000 SHIFT_TAB_ICxx
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:38     .rodata.SHIFT_TAB_CCxP:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:41     .rodata.SHIFT_TAB_CCxP:00000000 SHIFT_TAB_CCxP
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:44     .rodata.SHIFT_TAB_OISx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:47     .rodata.SHIFT_TAB_OISx:00000000 SHIFT_TAB_OISx
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:50     .rodata.CHANNEL_OFFSET_TAB:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:53     .rodata.CHANNEL_OFFSET_TAB:00000000 CHANNEL_OFFSET_TAB
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:56     .text.RI_SetRegisterGlobal:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:62     .text.RI_SetRegisterGlobal:00000000 RI_SetRegisterGlobal
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:98     .text.RI_SetRegisterGlobal:00000028 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:131    .text.RI_SetRegisterGlobal:000000ac $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3165   .text.RI_MovString:00000000 RI_MovString
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:340    .text.RI_SetRegisterMotor1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:346    .text.RI_SetRegisterMotor1:00000000 RI_SetRegisterMotor1
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:394    .text.RI_SetRegisterMotor1:00000040 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:427    .text.RI_SetRegisterMotor1:000000c4 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:511    .text.RI_SetRegisterMotor1:00000148 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:515    .text.RI_SetRegisterMotor1:0000014c $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1145   .text.RI_SetRegisterMotor1:000006d0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1153   .text.RI_SetRegisterMotor1:000006e4 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1300   .text.RI_SetRegisterMotor1:000007b8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1306   .text.RI_GetRegisterGlobal:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1312   .text.RI_GetRegisterGlobal:00000000 RI_GetRegisterGlobal
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1360   .text.RI_GetRegisterGlobal:00000040 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1393   .text.RI_GetRegisterGlobal:000000c4 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1689   .text.RI_GetRegisterGlobal:00000268 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1697   .text.RI_GetRegisterMotor1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1703   .text.RI_GetRegisterMotor1:00000000 RI_GetRegisterMotor1
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1755   .text.RI_GetRegisterMotor1:00000048 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1788   .text.RI_GetRegisterMotor1:000000cc $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1875   .text.RI_GetRegisterMotor1:00000158 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:1881   .text.RI_GetRegisterMotor1:00000164 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:2543   .text.RI_GetRegisterMotor1:000006ec $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:2551   .text.RI_GetRegisterMotor1:00000704 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:2964   .text.RI_GetRegisterMotor1:000009d0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:2974   .text.RI_GetRegisterMotor1:000009ec $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3154   .text.RI_GetRegisterMotor1:00000b24 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3159   .text.RI_MovString:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3277   .text.RI_GetIDSize:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3283   .text.RI_GetIDSize:00000000 RI_GetIDSize
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3364   .text.RI_GetPtrReg:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3370   .text.RI_GetPtrReg:00000000 RI_GetPtrReg
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3654   .text.RI_GetPtrReg:000001b8 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3665   .bss.nullData16.0:00000000 nullData16.0
C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s:3662   .bss.nullData16.0:00000000 $d

UNDEFINED SYMBOLS
MCI_GetTeref
MCI_ExecTorqueRamp
MCI_GetMecSpeedRefUnit
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 94


MCI_ExecSpeedRamp
Mci
PID_SetKP
PID_SetKI
PID_SetKD
MCI_GetIqdref
MCI_SetCurrentReferences
PID_SetKPDivisorPOW2
PID_SetKIDivisorPOW2
PID_SetKDDivisorPOW2
PIDSpeedHandle_M1
PIDIqHandle_M1
PIDIdHandle_M1
PID_PosParamsM1
MCI_ExecPositionCommand
MCPA_cfgLog
MCPA_UART_A
MC_Perf_GetCPU_Load
MC_Perf_GetMinCPU_Load
MC_Perf_GetMaxCPU_Load
FIRMWARE_NAME
CTL_BOARD
globalConfig_reg
MCI_GetSTMState
MCI_GetControlMode
TC_GetControlPositionStatus
TC_GetAlignmentStatus
BusVoltageSensor_M1
PosCtrlM1
PID_GetKP
PID_GetKI
PID_GetKD
VBS_GetAvBusVoltage_V
NTC_GetAvTemp_C
MCI_GetIab
MCI_GetIalphabeta
MCI_GetIqd
MCI_GetVqd
MCI_GetValphabeta
SPD_GetElAngle
SPD_GetS16Speed
PID_GetKPDivisorPOW2
PID_GetKIDivisorPOW2
PID_GetKDDivisorPOW2
TempSensor_M1
ENCODER_M1
MCI_GetFaultState
MCI_GetAvrgMecSpeedUnit
MCI_GetCurrentPosition
PQD_GetAvrgElMotorPowerW
memcpy
pMPM
PWR_BOARD_NAME
MotorConfig_reg
ApplicationConfig_reg
FOCConfig_reg
scaleParams_M1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccEVvySe.s 			page 95


MCI_GetLastRampFinalSpeed
MCI_GetLastRampFinalDuration
MCI_GetLastRampFinalTorque
TC_GetMoveDuration
TC_GetTargetPosition
