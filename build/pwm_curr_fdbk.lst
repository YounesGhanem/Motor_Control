ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"pwm_curr_fdbk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
  20              		.align	2
  23              	OFFSET_TAB_CCMRx:
  24 0000 00000000 		.ascii	"\000\000\000\000\004\004\004<<"
  24      0404043C 
  24      3C
  25              		.section	.rodata.SHIFT_TAB_OCxx,"a"
  26              		.align	2
  29              	SHIFT_TAB_OCxx:
  30 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\010"
  30      00000800 
  30      08
  31              		.section	.rodata.SHIFT_TAB_ICxx,"a"
  32              		.align	2
  35              	SHIFT_TAB_ICxx:
  36 0000 00000800 		.ascii	"\000\000\010\000\000\000\010\000\000"
  36      00000800 
  36      00
  37              		.section	.rodata.SHIFT_TAB_CCxP,"a"
  38              		.align	2
  41              	SHIFT_TAB_CCxP:
  42 0000 00020406 		.ascii	"\000\002\004\006\010\012\014\020\024"
  42      080A0C10 
  42      14
  43              		.section	.rodata.SHIFT_TAB_OISx,"a"
  44              		.align	2
  47              	SHIFT_TAB_OISx:
  48 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\010\012"
  48      04050608 
  48      0A
  49              		.section	.text.LL_GPIO_ResetOutputPin,"ax",%progbits
  50              		.align	1
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  55              	LL_GPIO_ResetOutputPin:
  56              	.LFB624:
  57              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 2


   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @file    stm32l4xx_ll_gpio.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifndef STM32L4xx_LL_GPIO_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define STM32L4xx_LL_GPIO_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 3


  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** typedef struct
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 4


 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 5


 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_8                       (0x0000008U) /*!< Select alternate function 8 */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_9                       (0x0000009U) /*!< Select alternate function 9 */
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_10                      (0x000000AU) /*!< Select alternate function 10 */
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_11                      (0x000000BU) /*!< Select alternate function 11 */
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_12                      (0x000000CU) /*!< Select alternate function 12 */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_13                      (0x000000DU) /*!< Select alternate function 13 */
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_14                      (0x000000EU) /*!< Select alternate function 14 */
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_AF_15                      (0x000000FU) /*!< Select alternate function 15 */
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 6


 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Register value
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 7


 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U)), (Mode << (POSITION_VAL(P
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER,
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_MODER_MODE0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 8


 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) >> POSITION_VAL(Pin));
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 9


 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U)),
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 2U)));
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 10


 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR,
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_OSPEEDR_OSPEED0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(P
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U)), (Pull << (POSITION_VAL(P
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 11


 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR,
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_PUPDR_PUPD0 << (POSITION_VAL(Pin) * 2U))) >> (POSITION_VAL(Pin) 
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U)),
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin) * 4U)));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 12


 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRL_AFSEL0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) 
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 13


 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U)),
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****              (Alternate << (POSITION_VAL(Pin >> 8U) * 4U)));
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF15 depending on target.
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_8
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_9
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_10
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_11
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_12
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_13
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_14
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_15
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 14


 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****                              (GPIO_AFRH_AFSEL8 << (POSITION_VAL(Pin >> 8U) * 4U))) >> (POSITION_VAL
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #if defined(GPIO_ASCR_ASC0)
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Connect analog switch to ADC input of several pins for a dedicated port.
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   This bit must be set prior to the ADC conversion.
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Only the IO which connected to the ADC input are effective.
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         Other IO must be kept reset value
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_EnablePinAnalogControl
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_EnablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   SET_BIT(GPIOx->ASCR, PinMask);
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Disconnect analog switch to ADC input of several pins for a dedicated port.
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ASCR         ASCy          LL_GPIO_DisablePinAnalogControl
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 15


 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_DisablePinAnalogControl(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   CLEAR_BIT(GPIOx->ASCR, PinMask);
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** #endif /* GPIO_ASCR_ASC0 */
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         next reset.
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         (control and alternate function registers).
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   __IO uint32_t temp;
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   /* Read LCKK register. This read is mandatory to complete key lock sequence */
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   (void) temp;
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 16


 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, PinMask) == (PinMask)) ? 1UL : 0UL);
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK)) ? 1UL : 0UL);
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @}
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @{
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Input data register value of port
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 17


 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->IDR, PinMask) == (PinMask)) ? 1UL : 0UL);
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval Output data register value of port
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 18


 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   return ((READ_BIT(GPIOx->ODR, PinMask) == (PinMask)) ? 1UL : 0UL);
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** 
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** /**
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 19


 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   * @retval None
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   */
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** {
  58              		.loc 1 986 1
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              	.LCFI0:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 16
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI2:
  72              		.cfi_def_cfa_register 7
  73 0006 7860     		str	r0, [r7, #4]
  74 0008 3960     		str	r1, [r7]
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
  75              		.loc 1 987 3
  76 000a 7B68     		ldr	r3, [r7, #4]
  77 000c 3A68     		ldr	r2, [r7]
  78 000e 9A62     		str	r2, [r3, #40]
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_gpio.h **** }
  79              		.loc 1 988 1
  80 0010 00BF     		nop
  81 0012 0C37     		adds	r7, r7, #12
  82              	.LCFI3:
  83              		.cfi_def_cfa_offset 4
  84 0014 BD46     		mov	sp, r7
  85              	.LCFI4:
  86              		.cfi_def_cfa_register 13
  87              		@ sp needed
  88 0016 5DF8047B 		ldr	r7, [sp], #4
  89              	.LCFI5:
  90              		.cfi_restore 7
  91              		.cfi_def_cfa_offset 0
  92 001a 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE624:
  96              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
  97              		.align	2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 20


 100              	CHANNEL_OFFSET_TAB:
 101 0000 081C3044 		.ascii	"\010\0340DXl\200"
 101      586C80
 102              		.section	.text.PWMC_Clear,"ax",%progbits
 103              		.align	1
 104              		.global	PWMC_Clear
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	PWMC_Clear:
 110              	.LFB1090:
 111              		.file 2 "Src/pwm_curr_fdbk.c"
   1:Src/pwm_curr_fdbk.c **** /**
   2:Src/pwm_curr_fdbk.c ****   ******************************************************************************
   3:Src/pwm_curr_fdbk.c ****   * @file    pwm_curr_fdbk.c
   4:Src/pwm_curr_fdbk.c ****   * @author  Motor Control SDK Team, ST Microelectronics
   5:Src/pwm_curr_fdbk.c ****   * @brief   This file provides firmware functions that implement the following features
   6:Src/pwm_curr_fdbk.c ****   *          of the PWM & Current Feedback component of the Motor Control SDK:
   7:Src/pwm_curr_fdbk.c ****   *
   8:Src/pwm_curr_fdbk.c ****   *           * current sensing
   9:Src/pwm_curr_fdbk.c ****   *           * regular ADC conversion execution
  10:Src/pwm_curr_fdbk.c ****   *           * space vector modulation
  11:Src/pwm_curr_fdbk.c ****   *
  12:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  13:Src/pwm_curr_fdbk.c ****   * @attention
  14:Src/pwm_curr_fdbk.c ****   *
  15:Src/pwm_curr_fdbk.c ****   * <h2><center>&copy; Copyright (c) 2023 STMicroelectronics.
  16:Src/pwm_curr_fdbk.c ****   * All rights reserved.</center></h2>
  17:Src/pwm_curr_fdbk.c ****   *
  18:Src/pwm_curr_fdbk.c ****   * This software component is licensed by ST under Ultimate Liberty license
  19:Src/pwm_curr_fdbk.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  20:Src/pwm_curr_fdbk.c ****   * the License. You may obtain a copy of the License at:
  21:Src/pwm_curr_fdbk.c ****   *                             www.st.com/SLA0044
  22:Src/pwm_curr_fdbk.c ****   *
  23:Src/pwm_curr_fdbk.c ****   ******************************************************************************
  24:Src/pwm_curr_fdbk.c ****   * @ingroup pwm_curr_fdbk
  25:Src/pwm_curr_fdbk.c ****   */
  26:Src/pwm_curr_fdbk.c **** 
  27:Src/pwm_curr_fdbk.c **** /* Includes ------------------------------------------------------------------*/
  28:Src/pwm_curr_fdbk.c **** #include "pwm_curr_fdbk.h"
  29:Src/pwm_curr_fdbk.c **** #include "mc_math.h"
  30:Src/pwm_curr_fdbk.c **** #include "mc_type.h"
  31:Src/pwm_curr_fdbk.c **** 
  32:Src/pwm_curr_fdbk.c **** /** @addtogroup MCSDK
  33:Src/pwm_curr_fdbk.c ****   * @{
  34:Src/pwm_curr_fdbk.c ****   */
  35:Src/pwm_curr_fdbk.c **** 
  36:Src/pwm_curr_fdbk.c **** /** @defgroup pwm_curr_fdbk PWM & Current Feedback
  37:Src/pwm_curr_fdbk.c ****   *
  38:Src/pwm_curr_fdbk.c ****   * @brief PWM & Current Feedback components of the Motor Control SDK.
  39:Src/pwm_curr_fdbk.c ****   *
  40:Src/pwm_curr_fdbk.c ****   * These components fulfill two functions in a Motor Control subsystem:
  41:Src/pwm_curr_fdbk.c ****   *
  42:Src/pwm_curr_fdbk.c ****   * - The generation of the Space Vector Pulse Width Modulation on the motor's phases
  43:Src/pwm_curr_fdbk.c ****   * - The sampling of the actual motor's phases current
  44:Src/pwm_curr_fdbk.c ****   *
  45:Src/pwm_curr_fdbk.c ****   * Both these features are closely related as the instants when the values of the phase currents
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 21


  46:Src/pwm_curr_fdbk.c ****   * should be sampled by the ADC channels are basically triggered by the timers used to generate
  47:Src/pwm_curr_fdbk.c ****   * the duty cycles for the PWM.
  48:Src/pwm_curr_fdbk.c ****   *
  49:Src/pwm_curr_fdbk.c ****   * Several implementation of PWM and Current Feedback components are provided by the Motor Control
  50:Src/pwm_curr_fdbk.c ****   * SDK to account for the specificities of the application:
  51:Src/pwm_curr_fdbk.c ****   *
  52:Src/pwm_curr_fdbk.c ****   * - The selected MCU: the number of ADCs available on a given MCU, the presence of internal
  53:Src/pwm_curr_fdbk.c ****   * comparators or OpAmps, for instance, lead to different implementation of this feature
  54:Src/pwm_curr_fdbk.c ****   * - The Current sensing topology also has an impact on the firmware: implementations are provided
  55:Src/pwm_curr_fdbk.c ****   * for Insulated Current Sensors, Single Shunt and Three Shunt resistors current sensing topologie
  56:Src/pwm_curr_fdbk.c ****   *
  57:Src/pwm_curr_fdbk.c ****   * The choice of the implementation mostly depend on these two factors and is performed by the
  58:Src/pwm_curr_fdbk.c ****   * Motor Control Workbench tool.
  59:Src/pwm_curr_fdbk.c ****   *
  60:Src/pwm_curr_fdbk.c ****   * All these implementations are built on a base PWM & Current Feedback component that they extend
  61:Src/pwm_curr_fdbk.c ****   * and that provides the functions and data that are common to all of them. This base component is
  62:Src/pwm_curr_fdbk.c ****   * never used directly as it does not provide a complete implementation of the features. Rather,
  63:Src/pwm_curr_fdbk.c ****   * its handle structure (PWMC_Handle) is reused by all the PWM & Current Feedback specific
  64:Src/pwm_curr_fdbk.c ****   * implementations and the functions it provides form the API of the PWM and Current feedback feat
  65:Src/pwm_curr_fdbk.c ****   * Calling them results in calling functions of the component that actually implement the feature.
  66:Src/pwm_curr_fdbk.c ****   * See PWMC_Handle for more details on this mechanism.
  67:Src/pwm_curr_fdbk.c ****   * @{
  68:Src/pwm_curr_fdbk.c ****   */
  69:Src/pwm_curr_fdbk.c **** 
  70:Src/pwm_curr_fdbk.c **** /**
  71:Src/pwm_curr_fdbk.c ****   * @brief  Used to clear variables in CPWMC.
  72:Src/pwm_curr_fdbk.c ****   *
  73:Src/pwm_curr_fdbk.c ****   * @param pHandle: Handler of the current instance of the PWM component.
  74:Src/pwm_curr_fdbk.c ****   */
  75:Src/pwm_curr_fdbk.c **** void PWMC_Clear(PWMC_Handle_t *pHandle)
  76:Src/pwm_curr_fdbk.c **** {
 112              		.loc 2 76 1
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117 0000 80B4     		push	{r7}
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
 121 0002 83B0     		sub	sp, sp, #12
 122              	.LCFI7:
 123              		.cfi_def_cfa_offset 16
 124 0004 00AF     		add	r7, sp, #0
 125              	.LCFI8:
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
  77:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  78:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
  79:Src/pwm_curr_fdbk.c ****   {
  80:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
  81:Src/pwm_curr_fdbk.c ****   }
  82:Src/pwm_curr_fdbk.c ****   else
  83:Src/pwm_curr_fdbk.c ****   {
  84:Src/pwm_curr_fdbk.c **** #endif
  85:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = 0;
 128              		.loc 2 85 20
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 22


 129 0008 7B68     		ldr	r3, [r7, #4]
 130 000a 0022     		movs	r2, #0
 131 000c A3F86820 		strh	r2, [r3, #104]	@ movhi
  86:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = 0;
 132              		.loc 2 86 20
 133 0010 7B68     		ldr	r3, [r7, #4]
 134 0012 0022     		movs	r2, #0
 135 0014 A3F86A20 		strh	r2, [r3, #106]	@ movhi
  87:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = 0;
 136              		.loc 2 87 20
 137 0018 7B68     		ldr	r3, [r7, #4]
 138 001a 0022     		movs	r2, #0
 139 001c A3F86C20 		strh	r2, [r3, #108]	@ movhi
  88:Src/pwm_curr_fdbk.c ****     pHandle->LPFIdBuf = 0;
 140              		.loc 2 88 23
 141 0020 7B68     		ldr	r3, [r7, #4]
 142 0022 0022     		movs	r2, #0
 143 0024 9A63     		str	r2, [r3, #56]
  89:Src/pwm_curr_fdbk.c ****     pHandle->LPFIqBuf = 0;
 144              		.loc 2 89 23
 145 0026 7B68     		ldr	r3, [r7, #4]
 146 0028 0022     		movs	r2, #0
 147 002a 5A63     		str	r2, [r3, #52]
  90:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
  91:Src/pwm_curr_fdbk.c ****   }
  92:Src/pwm_curr_fdbk.c **** #endif
  93:Src/pwm_curr_fdbk.c **** }
 148              		.loc 2 93 1
 149 002c 00BF     		nop
 150 002e 0C37     		adds	r7, r7, #12
 151              	.LCFI9:
 152              		.cfi_def_cfa_offset 4
 153 0030 BD46     		mov	sp, r7
 154              	.LCFI10:
 155              		.cfi_def_cfa_register 13
 156              		@ sp needed
 157 0032 5DF8047B 		ldr	r7, [sp], #4
 158              	.LCFI11:
 159              		.cfi_restore 7
 160              		.cfi_def_cfa_offset 0
 161 0036 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE1090:
 165              		.section	.text.PWMC_SetOffsetCalib,"ax",%progbits
 166              		.align	1
 167              		.weak	PWMC_SetOffsetCalib
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	PWMC_SetOffsetCalib:
 173              	.LFB1091:
  94:Src/pwm_curr_fdbk.c **** 
  95:Src/pwm_curr_fdbk.c **** /**
  96:Src/pwm_curr_fdbk.c ****   * @brief  Sets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
  97:Src/pwm_curr_fdbk.c ****   *
  98:Src/pwm_curr_fdbk.c ****   */
  99:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 23


 100:Src/pwm_curr_fdbk.c **** __weak void PWMC_SetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 101:Src/pwm_curr_fdbk.c **** {
 174              		.loc 2 101 1
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              	.LCFI12:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              	.LCFI13:
 185              		.cfi_def_cfa_offset 16
 186 0004 00AF     		add	r7, sp, #0
 187              	.LCFI14:
 188              		.cfi_def_cfa_register 7
 189 0006 7860     		str	r0, [r7, #4]
 190 0008 3960     		str	r1, [r7]
 102:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 191              		.loc 2 102 6
 192 000a 7B68     		ldr	r3, [r7, #4]
 193 000c 002B     		cmp	r3, #0
 194 000e 04D0     		beq	.L5
 103:Src/pwm_curr_fdbk.c ****   {
 104:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 105:Src/pwm_curr_fdbk.c ****   }
 106:Src/pwm_curr_fdbk.c ****   else
 107:Src/pwm_curr_fdbk.c ****   {
 108:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetOffsetCalib(pHandle, offsets);
 195              		.loc 2 108 12
 196 0010 7B68     		ldr	r3, [r7, #4]
 197 0012 DB6A     		ldr	r3, [r3, #44]
 198              		.loc 2 108 5
 199 0014 3968     		ldr	r1, [r7]
 200 0016 7868     		ldr	r0, [r7, #4]
 201 0018 9847     		blx	r3
 202              	.LVL0:
 203              	.L5:
 109:Src/pwm_curr_fdbk.c ****   }
 110:Src/pwm_curr_fdbk.c **** }
 204              		.loc 2 110 1
 205 001a 00BF     		nop
 206 001c 0837     		adds	r7, r7, #8
 207              	.LCFI15:
 208              		.cfi_def_cfa_offset 8
 209 001e BD46     		mov	sp, r7
 210              	.LCFI16:
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 0020 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE1091:
 217              		.section	.text.PWMC_GetOffsetCalib,"ax",%progbits
 218              		.align	1
 219              		.weak	PWMC_GetOffsetCalib
 220              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 24


 221              		.thumb
 222              		.thumb_func
 224              	PWMC_GetOffsetCalib:
 225              	.LFB1092:
 111:Src/pwm_curr_fdbk.c **** 
 112:Src/pwm_curr_fdbk.c **** /**
 113:Src/pwm_curr_fdbk.c ****   * @brief  Gets the calibrated @p offsets for each of the phases in the @p pHandle handler. In cas
 114:Src/pwm_curr_fdbk.c ****   *
 115:Src/pwm_curr_fdbk.c ****   */
 116:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 117:Src/pwm_curr_fdbk.c **** __weak void PWMC_GetOffsetCalib(PWMC_Handle_t *pHandle, PolarizationOffsets_t *offsets)
 118:Src/pwm_curr_fdbk.c **** {
 226              		.loc 2 118 1
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 80B5     		push	{r7, lr}
 231              	.LCFI17:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
 236              	.LCFI18:
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI19:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 242 0008 3960     		str	r1, [r7]
 119:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 243              		.loc 2 119 6
 244 000a 7B68     		ldr	r3, [r7, #4]
 245 000c 002B     		cmp	r3, #0
 246 000e 04D0     		beq	.L8
 120:Src/pwm_curr_fdbk.c ****   {
 121:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 122:Src/pwm_curr_fdbk.c ****   }
 123:Src/pwm_curr_fdbk.c ****   else
 124:Src/pwm_curr_fdbk.c ****   {
 125:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetOffsetCalib(pHandle, offsets);
 247              		.loc 2 125 12
 248 0010 7B68     		ldr	r3, [r7, #4]
 249 0012 1B6B     		ldr	r3, [r3, #48]
 250              		.loc 2 125 5
 251 0014 3968     		ldr	r1, [r7]
 252 0016 7868     		ldr	r0, [r7, #4]
 253 0018 9847     		blx	r3
 254              	.LVL1:
 255              	.L8:
 126:Src/pwm_curr_fdbk.c ****   }
 127:Src/pwm_curr_fdbk.c **** }
 256              		.loc 2 127 1
 257 001a 00BF     		nop
 258 001c 0837     		adds	r7, r7, #8
 259              	.LCFI20:
 260              		.cfi_def_cfa_offset 8
 261 001e BD46     		mov	sp, r7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 25


 262              	.LCFI21:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 0020 80BD     		pop	{r7, pc}
 266              		.cfi_endproc
 267              	.LFE1092:
 269              		.section	.text.PWMC_GetPhaseCurrents,"ax",%progbits
 270              		.align	1
 271              		.weak	PWMC_GetPhaseCurrents
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	PWMC_GetPhaseCurrents:
 277              	.LFB1093:
 128:Src/pwm_curr_fdbk.c **** 
 129:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 130:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 131:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 132:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 133:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 134:Src/pwm_curr_fdbk.c **** #endif
 135:Src/pwm_curr_fdbk.c **** #endif
 136:Src/pwm_curr_fdbk.c **** /**
 137:Src/pwm_curr_fdbk.c ****   * @brief Returns the phase current of the motor as read by the ADC (in s16A unit).
 138:Src/pwm_curr_fdbk.c ****   *
 139:Src/pwm_curr_fdbk.c ****   * Returns the current values of phases A & B. Phase C current
 140:Src/pwm_curr_fdbk.c ****   * can be deduced thanks to the formula:
 141:Src/pwm_curr_fdbk.c ****   *
 142:Src/pwm_curr_fdbk.c ****   * @f[
 143:Src/pwm_curr_fdbk.c ****   * I_{C} = -I_{A} - I_{B}
 144:Src/pwm_curr_fdbk.c ****   * @f]
 145:Src/pwm_curr_fdbk.c ****   *
 146:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 147:Src/pwm_curr_fdbk.c ****   * @param  Iab: Pointer to the structure that will receive motor current
 148:Src/pwm_curr_fdbk.c ****   *         of phases A & B in ElectricalValue format.
 149:Src/pwm_curr_fdbk.c ****   */
 150:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 151:Src/pwm_curr_fdbk.c **** __weak void PWMC_GetPhaseCurrents(PWMC_Handle_t *pHandle, ab_t *Iab)
 152:Src/pwm_curr_fdbk.c **** {
 278              		.loc 2 152 1
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI22:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI23:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI24:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 3960     		str	r1, [r7]
 153:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 26


 154:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 155:Src/pwm_curr_fdbk.c ****   {
 156:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 157:Src/pwm_curr_fdbk.c ****   }
 158:Src/pwm_curr_fdbk.c ****   else
 159:Src/pwm_curr_fdbk.c ****   {
 160:Src/pwm_curr_fdbk.c **** #endif
 161:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetPhaseCurrents(pHandle, Iab);
 295              		.loc 2 161 12
 296 000a 7B68     		ldr	r3, [r7, #4]
 297 000c 1B68     		ldr	r3, [r3]
 298              		.loc 2 161 5
 299 000e 3968     		ldr	r1, [r7]
 300 0010 7868     		ldr	r0, [r7, #4]
 301 0012 9847     		blx	r3
 302              	.LVL2:
 162:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 163:Src/pwm_curr_fdbk.c ****   }
 164:Src/pwm_curr_fdbk.c **** #endif
 165:Src/pwm_curr_fdbk.c **** }
 303              		.loc 2 165 1
 304 0014 00BF     		nop
 305 0016 0837     		adds	r7, r7, #8
 306              	.LCFI25:
 307              		.cfi_def_cfa_offset 8
 308 0018 BD46     		mov	sp, r7
 309              	.LCFI26:
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 001a 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
 314              	.LFE1093:
 316              		.section	.text.PWMC_SetPhaseVoltage,"ax",%progbits
 317              		.align	1
 318              		.weak	PWMC_SetPhaseVoltage
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	PWMC_SetPhaseVoltage:
 324              	.LFB1094:
 166:Src/pwm_curr_fdbk.c **** 
 167:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 168:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 169:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 170:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 171:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 172:Src/pwm_curr_fdbk.c **** #endif
 173:Src/pwm_curr_fdbk.c **** #endif
 174:Src/pwm_curr_fdbk.c **** 
 175:Src/pwm_curr_fdbk.c **** /**
 176:Src/pwm_curr_fdbk.c ****   * @brief  Converts input voltages @f$ V_{\alpha} @f$ and @f$ V_{\beta} @f$ into PWM duty cycles
 177:Src/pwm_curr_fdbk.c ****   *         and feed them to the inverter.
 178:Src/pwm_curr_fdbk.c ****   *
 179:Src/pwm_curr_fdbk.c ****   * This function computes the time during which the transistors of each phase are to be switched o
 180:Src/pwm_curr_fdbk.c ****   * a PWM cycle in order to achieve the reference phase voltage set by @p Valfa_beta. The function 
 181:Src/pwm_curr_fdbk.c ****   * programs the resulting duty cycles in the related timer channels. It also sets the phase curren
 182:Src/pwm_curr_fdbk.c ****   * sampling point for the next PWM cycle accordingly.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 27


 183:Src/pwm_curr_fdbk.c ****   *
 184:Src/pwm_curr_fdbk.c ****   * This function is used in the FOC frequency loop and needs to complete itself before the next PW
 185:Src/pwm_curr_fdbk.c ****   * in order for the duty cycles it computes to be taken into account. Failing to do so (for instan
 186:Src/pwm_curr_fdbk.c ****   * the PWM Frequency is too high) results in the function returning #MC_DURATION which entails a
 187:Src/pwm_curr_fdbk.c ****   * Motor Control Fault that stops the motor.
 188:Src/pwm_curr_fdbk.c ****   *
 189:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 190:Src/pwm_curr_fdbk.c ****   * @param  Valfa_beta: Voltage Components expressed in the @f$(\alpha, \beta)@f$ reference frame.
 191:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if no error occurred or #MC_DURATION if the duty cycles were
 192:Src/pwm_curr_fdbk.c ****   *         set too late for being taken into account in the next PWM cycle.
 193:Src/pwm_curr_fdbk.c ****   */
 194:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_SetPhaseVoltage(PWMC_Handle_t *pHandle, alphabeta_t Valfa_beta)
 195:Src/pwm_curr_fdbk.c **** {
 325              		.loc 2 195 1
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 48
 328              		@ frame_needed = 1, uses_anonymous_args = 0
 329 0000 80B5     		push	{r7, lr}
 330              	.LCFI27:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 8CB0     		sub	sp, sp, #48
 335              	.LCFI28:
 336              		.cfi_def_cfa_offset 56
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI29:
 339              		.cfi_def_cfa_register 7
 340 0006 7860     		str	r0, [r7, #4]
 341 0008 3960     		str	r1, [r7]
 196:Src/pwm_curr_fdbk.c ****   uint16_t returnValue;
 197:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 198:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 199:Src/pwm_curr_fdbk.c ****   {
 200:Src/pwm_curr_fdbk.c ****     returnValue = 0U;
 201:Src/pwm_curr_fdbk.c ****   }
 202:Src/pwm_curr_fdbk.c ****   else
 203:Src/pwm_curr_fdbk.c ****   {
 204:Src/pwm_curr_fdbk.c **** #endif
 205:Src/pwm_curr_fdbk.c ****     int32_t wX;
 206:Src/pwm_curr_fdbk.c ****     int32_t wY;
 207:Src/pwm_curr_fdbk.c ****     int32_t wZ;
 208:Src/pwm_curr_fdbk.c ****     int32_t wUAlpha;
 209:Src/pwm_curr_fdbk.c ****     int32_t wUBeta;
 210:Src/pwm_curr_fdbk.c ****     int32_t wTimePhA;
 211:Src/pwm_curr_fdbk.c ****     int32_t wTimePhB;
 212:Src/pwm_curr_fdbk.c ****     int32_t wTimePhC;
 213:Src/pwm_curr_fdbk.c **** 
 214:Src/pwm_curr_fdbk.c ****     wUAlpha = Valfa_beta.alpha * (int32_t)pHandle->hT_Sqrt3;
 342              		.loc 2 214 25
 343 000a B7F90030 		ldrsh	r3, [r7]
 344 000e 1A46     		mov	r2, r3
 345              		.loc 2 214 50
 346 0010 7B68     		ldr	r3, [r7, #4]
 347 0012 B3F84E30 		ldrh	r3, [r3, #78]
 348              		.loc 2 214 13
 349 0016 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 28


 350 001a 3B62     		str	r3, [r7, #32]
 215:Src/pwm_curr_fdbk.c ****     wUBeta = -(Valfa_beta.beta * ((int32_t)pHandle->PWMperiod)) * 2;
 351              		.loc 2 215 26
 352 001c B7F90230 		ldrsh	r3, [r7, #2]
 353 0020 1A46     		mov	r2, r3
 354              		.loc 2 215 51
 355 0022 7B68     		ldr	r3, [r7, #4]
 356 0024 B3F87230 		ldrh	r3, [r3, #114]
 357              		.loc 2 215 32
 358 0028 03FB02F2 		mul	r2, r3, r2
 359              		.loc 2 215 12
 360 002c 1346     		mov	r3, r2
 361 002e DB07     		lsls	r3, r3, #31
 362 0030 9B1A     		subs	r3, r3, r2
 363 0032 5B00     		lsls	r3, r3, #1
 364 0034 FB61     		str	r3, [r7, #28]
 216:Src/pwm_curr_fdbk.c **** 
 217:Src/pwm_curr_fdbk.c ****     wX = wUBeta;
 365              		.loc 2 217 8
 366 0036 FB69     		ldr	r3, [r7, #28]
 367 0038 BB61     		str	r3, [r7, #24]
 218:Src/pwm_curr_fdbk.c ****     wY = (wUBeta + wUAlpha) / 2;
 368              		.loc 2 218 18
 369 003a FA69     		ldr	r2, [r7, #28]
 370 003c 3B6A     		ldr	r3, [r7, #32]
 371 003e 1344     		add	r3, r3, r2
 372              		.loc 2 218 8
 373 0040 DA0F     		lsrs	r2, r3, #31
 374 0042 1344     		add	r3, r3, r2
 375 0044 5B10     		asrs	r3, r3, #1
 376 0046 7B61     		str	r3, [r7, #20]
 219:Src/pwm_curr_fdbk.c ****     wZ = (wUBeta - wUAlpha) / 2;
 377              		.loc 2 219 18
 378 0048 FA69     		ldr	r2, [r7, #28]
 379 004a 3B6A     		ldr	r3, [r7, #32]
 380 004c D31A     		subs	r3, r2, r3
 381              		.loc 2 219 8
 382 004e DA0F     		lsrs	r2, r3, #31
 383 0050 1344     		add	r3, r3, r2
 384 0052 5B10     		asrs	r3, r3, #1
 385 0054 3B61     		str	r3, [r7, #16]
 220:Src/pwm_curr_fdbk.c **** 
 221:Src/pwm_curr_fdbk.c ****     /* Sector calculation from wX, wY, wZ */
 222:Src/pwm_curr_fdbk.c ****     if (wY < 0)
 386              		.loc 2 222 8
 387 0056 7B69     		ldr	r3, [r7, #20]
 388 0058 002B     		cmp	r3, #0
 389 005a 80F2F980 		bge	.L11
 223:Src/pwm_curr_fdbk.c ****     {
 224:Src/pwm_curr_fdbk.c ****       if (wZ < 0)
 390              		.loc 2 224 10
 391 005e 3B69     		ldr	r3, [r7, #16]
 392 0060 002B     		cmp	r3, #0
 393 0062 50DA     		bge	.L12
 225:Src/pwm_curr_fdbk.c ****       {
 226:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_5;
 394              		.loc 2 226 25
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 29


 395 0064 7B68     		ldr	r3, [r7, #4]
 396 0066 0422     		movs	r2, #4
 397 0068 83F87C20 		strb	r2, [r3, #124]
 227:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 398              		.loc 2 227 38
 399 006c 7B68     		ldr	r3, [r7, #4]
 400 006e B3F87230 		ldrh	r3, [r3, #114]
 401              		.loc 2 227 51
 402 0072 9B08     		lsrs	r3, r3, #2
 403 0074 9BB2     		uxth	r3, r3
 404 0076 1946     		mov	r1, r3
 405              		.loc 2 227 63
 406 0078 7A69     		ldr	r2, [r7, #20]
 407 007a 3B69     		ldr	r3, [r7, #16]
 408 007c D31A     		subs	r3, r2, r3
 409              		.loc 2 227 69
 410 007e 002B     		cmp	r3, #0
 411 0080 03DA     		bge	.L13
 412 0082 03F57F33 		add	r3, r3, #261120
 413 0086 03F2FF33 		addw	r3, r3, #1023
 414              	.L13:
 415 008a 9B14     		asrs	r3, r3, #18
 416              		.loc 2 227 18
 417 008c 0B44     		add	r3, r3, r1
 418 008e FB62     		str	r3, [r7, #44]
 228:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 419              		.loc 2 228 35
 420 0090 3B69     		ldr	r3, [r7, #16]
 421 0092 002B     		cmp	r3, #0
 422 0094 03DA     		bge	.L14
 423 0096 03F5FF33 		add	r3, r3, #130560
 424 009a 03F2FF13 		addw	r3, r3, #511
 425              	.L14:
 426 009e 5B14     		asrs	r3, r3, #17
 427 00a0 1A46     		mov	r2, r3
 428              		.loc 2 228 18
 429 00a2 FB6A     		ldr	r3, [r7, #44]
 430 00a4 1344     		add	r3, r3, r2
 431 00a6 BB62     		str	r3, [r7, #40]
 229:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072) ;
 432              		.loc 2 229 35
 433 00a8 7B69     		ldr	r3, [r7, #20]
 434 00aa 002B     		cmp	r3, #0
 435 00ac 03DA     		bge	.L15
 436 00ae 03F5FF33 		add	r3, r3, #130560
 437 00b2 03F2FF13 		addw	r3, r3, #511
 438              	.L15:
 439 00b6 5B14     		asrs	r3, r3, #17
 440 00b8 5B42     		rsbs	r3, r3, #0
 441 00ba 1A46     		mov	r2, r3
 442              		.loc 2 229 18
 443 00bc FB6A     		ldr	r3, [r7, #44]
 444 00be 1344     		add	r3, r3, r2
 445 00c0 7B62     		str	r3, [r7, #36]
 230:Src/pwm_curr_fdbk.c **** 
 231:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 446              		.loc 2 231 27
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 30


 447 00c2 7B68     		ldr	r3, [r7, #4]
 448 00c4 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 449              		.loc 2 231 11
 450 00c8 002B     		cmp	r3, #0
 451 00ca 0CD0     		beq	.L16
 232:Src/pwm_curr_fdbk.c ****         {
 233:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 1U;
 452              		.loc 2 233 28
 453 00cc 7B68     		ldr	r3, [r7, #4]
 454 00ce 0122     		movs	r2, #1
 455 00d0 A3F85820 		strh	r2, [r3, #88]	@ movhi
 234:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 456              		.loc 2 234 28
 457 00d4 7B68     		ldr	r3, [r7, #4]
 458 00d6 0022     		movs	r2, #0
 459 00d8 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 235:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 2U;
 460              		.loc 2 235 29
 461 00dc 7B68     		ldr	r3, [r7, #4]
 462 00de 0222     		movs	r2, #2
 463 00e0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 464 00e4 B1E1     		b	.L17
 465              	.L16:
 236:Src/pwm_curr_fdbk.c ****         }
 237:Src/pwm_curr_fdbk.c ****         else
 238:Src/pwm_curr_fdbk.c ****         {
 239:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 466              		.loc 2 239 30
 467 00e6 7B6A     		ldr	r3, [r7, #36]
 468 00e8 9AB2     		uxth	r2, r3
 469              		.loc 2 239 28
 470 00ea 7B68     		ldr	r3, [r7, #4]
 471 00ec A3F85820 		strh	r2, [r3, #88]	@ movhi
 240:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhA;
 472              		.loc 2 240 30
 473 00f0 FB6A     		ldr	r3, [r7, #44]
 474 00f2 9AB2     		uxth	r2, r3
 475              		.loc 2 240 28
 476 00f4 7B68     		ldr	r3, [r7, #4]
 477 00f6 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 241:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhB;
 478              		.loc 2 241 31
 479 00fa BB6A     		ldr	r3, [r7, #40]
 480 00fc 9AB2     		uxth	r2, r3
 481              		.loc 2 241 29
 482 00fe 7B68     		ldr	r3, [r7, #4]
 483 0100 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 484 0104 A1E1     		b	.L17
 485              	.L12:
 242:Src/pwm_curr_fdbk.c ****         }
 243:Src/pwm_curr_fdbk.c ****       }
 244:Src/pwm_curr_fdbk.c ****       else /* wZ >= 0 */
 245:Src/pwm_curr_fdbk.c ****         if (wX <= 0)
 486              		.loc 2 245 12
 487 0106 BB69     		ldr	r3, [r7, #24]
 488 0108 002B     		cmp	r3, #0
 489 010a 50DC     		bgt	.L18
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 31


 246:Src/pwm_curr_fdbk.c ****         {
 247:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_4;
 490              		.loc 2 247 27
 491 010c 7B68     		ldr	r3, [r7, #4]
 492 010e 0322     		movs	r2, #3
 493 0110 83F87C20 		strb	r2, [r3, #124]
 248:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wX - wZ) / (int32_t)262144);
 494              		.loc 2 248 40
 495 0114 7B68     		ldr	r3, [r7, #4]
 496 0116 B3F87230 		ldrh	r3, [r3, #114]
 497              		.loc 2 248 53
 498 011a 9B08     		lsrs	r3, r3, #2
 499 011c 9BB2     		uxth	r3, r3
 500 011e 1946     		mov	r1, r3
 501              		.loc 2 248 65
 502 0120 BA69     		ldr	r2, [r7, #24]
 503 0122 3B69     		ldr	r3, [r7, #16]
 504 0124 D31A     		subs	r3, r2, r3
 505              		.loc 2 248 71
 506 0126 002B     		cmp	r3, #0
 507 0128 03DA     		bge	.L19
 508 012a 03F57F33 		add	r3, r3, #261120
 509 012e 03F2FF33 		addw	r3, r3, #1023
 510              	.L19:
 511 0132 9B14     		asrs	r3, r3, #18
 512              		.loc 2 248 20
 513 0134 0B44     		add	r3, r3, r1
 514 0136 FB62     		str	r3, [r7, #44]
 249:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 515              		.loc 2 249 37
 516 0138 3B69     		ldr	r3, [r7, #16]
 517 013a 002B     		cmp	r3, #0
 518 013c 03DA     		bge	.L20
 519 013e 03F5FF33 		add	r3, r3, #130560
 520 0142 03F2FF13 		addw	r3, r3, #511
 521              	.L20:
 522 0146 5B14     		asrs	r3, r3, #17
 523 0148 1A46     		mov	r2, r3
 524              		.loc 2 249 20
 525 014a FB6A     		ldr	r3, [r7, #44]
 526 014c 1344     		add	r3, r3, r2
 527 014e BB62     		str	r3, [r7, #40]
 250:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 528              		.loc 2 250 37
 529 0150 BB69     		ldr	r3, [r7, #24]
 530 0152 002B     		cmp	r3, #0
 531 0154 03DA     		bge	.L21
 532 0156 03F5FF33 		add	r3, r3, #130560
 533 015a 03F2FF13 		addw	r3, r3, #511
 534              	.L21:
 535 015e 5B14     		asrs	r3, r3, #17
 536 0160 5B42     		rsbs	r3, r3, #0
 537 0162 1A46     		mov	r2, r3
 538              		.loc 2 250 20
 539 0164 BB6A     		ldr	r3, [r7, #40]
 540 0166 1344     		add	r3, r3, r2
 541 0168 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 32


 251:Src/pwm_curr_fdbk.c **** 
 252:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 542              		.loc 2 252 29
 543 016a 7B68     		ldr	r3, [r7, #4]
 544 016c 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 545              		.loc 2 252 13
 546 0170 002B     		cmp	r3, #0
 547 0172 0CD0     		beq	.L22
 253:Src/pwm_curr_fdbk.c ****           {
 254:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 548              		.loc 2 254 30
 549 0174 7B68     		ldr	r3, [r7, #4]
 550 0176 0022     		movs	r2, #0
 551 0178 A3F85820 		strh	r2, [r3, #88]	@ movhi
 255:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 552              		.loc 2 255 30
 553 017c 7B68     		ldr	r3, [r7, #4]
 554 017e 0122     		movs	r2, #1
 555 0180 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 256:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 2U;
 556              		.loc 2 256 31
 557 0184 7B68     		ldr	r3, [r7, #4]
 558 0186 0222     		movs	r2, #2
 559 0188 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 560 018c 5DE1     		b	.L17
 561              	.L22:
 257:Src/pwm_curr_fdbk.c ****           }
 258:Src/pwm_curr_fdbk.c ****           else
 259:Src/pwm_curr_fdbk.c ****           {
 260:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhC;
 562              		.loc 2 260 30
 563 018e 7B6A     		ldr	r3, [r7, #36]
 564 0190 9AB2     		uxth	r2, r3
 565              		.loc 2 260 28
 566 0192 7B68     		ldr	r3, [r7, #4]
 567 0194 A3F85820 		strh	r2, [r3, #88]	@ movhi
 261:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhB;
 568              		.loc 2 261 30
 569 0198 BB6A     		ldr	r3, [r7, #40]
 570 019a 9AB2     		uxth	r2, r3
 571              		.loc 2 261 28
 572 019c 7B68     		ldr	r3, [r7, #4]
 573 019e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 262:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 574              		.loc 2 262 31
 575 01a2 FB6A     		ldr	r3, [r7, #44]
 576 01a4 9AB2     		uxth	r2, r3
 577              		.loc 2 262 29
 578 01a6 7B68     		ldr	r3, [r7, #4]
 579 01a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 580 01ac 4DE1     		b	.L17
 581              	.L18:
 263:Src/pwm_curr_fdbk.c ****         }
 264:Src/pwm_curr_fdbk.c ****         }
 265:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
 266:Src/pwm_curr_fdbk.c ****         {
 267:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_3;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 33


 582              		.loc 2 267 27
 583 01ae 7B68     		ldr	r3, [r7, #4]
 584 01b0 0222     		movs	r2, #2
 585 01b2 83F87C20 		strb	r2, [r3, #124]
 268:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4)+ ((wY - wX) / (int32_t)262144);
 586              		.loc 2 268 41
 587 01b6 7B68     		ldr	r3, [r7, #4]
 588 01b8 B3F87230 		ldrh	r3, [r3, #114]
 589              		.loc 2 268 54
 590 01bc 9B08     		lsrs	r3, r3, #2
 591 01be 9BB2     		uxth	r3, r3
 592 01c0 1946     		mov	r1, r3
 593              		.loc 2 268 65
 594 01c2 7A69     		ldr	r2, [r7, #20]
 595 01c4 BB69     		ldr	r3, [r7, #24]
 596 01c6 D31A     		subs	r3, r2, r3
 597              		.loc 2 268 71
 598 01c8 002B     		cmp	r3, #0
 599 01ca 03DA     		bge	.L23
 600 01cc 03F57F33 		add	r3, r3, #261120
 601 01d0 03F2FF33 		addw	r3, r3, #1023
 602              	.L23:
 603 01d4 9B14     		asrs	r3, r3, #18
 604              		.loc 2 268 20
 605 01d6 0B44     		add	r3, r3, r1
 606 01d8 FB62     		str	r3, [r7, #44]
 269:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 607              		.loc 2 269 37
 608 01da 7B69     		ldr	r3, [r7, #20]
 609 01dc 002B     		cmp	r3, #0
 610 01de 03DA     		bge	.L24
 611 01e0 03F5FF33 		add	r3, r3, #130560
 612 01e4 03F2FF13 		addw	r3, r3, #511
 613              	.L24:
 614 01e8 5B14     		asrs	r3, r3, #17
 615 01ea 5B42     		rsbs	r3, r3, #0
 616 01ec 1A46     		mov	r2, r3
 617              		.loc 2 269 20
 618 01ee FB6A     		ldr	r3, [r7, #44]
 619 01f0 1344     		add	r3, r3, r2
 620 01f2 7B62     		str	r3, [r7, #36]
 270:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 621              		.loc 2 270 37
 622 01f4 BB69     		ldr	r3, [r7, #24]
 623 01f6 002B     		cmp	r3, #0
 624 01f8 03DA     		bge	.L25
 625 01fa 03F5FF33 		add	r3, r3, #130560
 626 01fe 03F2FF13 		addw	r3, r3, #511
 627              	.L25:
 628 0202 5B14     		asrs	r3, r3, #17
 629 0204 1A46     		mov	r2, r3
 630              		.loc 2 270 20
 631 0206 7B6A     		ldr	r3, [r7, #36]
 632 0208 1344     		add	r3, r3, r2
 633 020a BB62     		str	r3, [r7, #40]
 271:Src/pwm_curr_fdbk.c **** 
 272:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 34


 634              		.loc 2 272 29
 635 020c 7B68     		ldr	r3, [r7, #4]
 636 020e 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 637              		.loc 2 272 13
 638 0212 002B     		cmp	r3, #0
 639 0214 0CD0     		beq	.L26
 273:Src/pwm_curr_fdbk.c ****           {
 274:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 0U;
 640              		.loc 2 274 30
 641 0216 7B68     		ldr	r3, [r7, #4]
 642 0218 0022     		movs	r2, #0
 643 021a A3F85820 		strh	r2, [r3, #88]	@ movhi
 275:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 644              		.loc 2 275 30
 645 021e 7B68     		ldr	r3, [r7, #4]
 646 0220 0222     		movs	r2, #2
 647 0222 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 276:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 1U;
 648              		.loc 2 276 31
 649 0226 7B68     		ldr	r3, [r7, #4]
 650 0228 0122     		movs	r2, #1
 651 022a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 652 022e 0CE1     		b	.L17
 653              	.L26:
 277:Src/pwm_curr_fdbk.c ****           }
 278:Src/pwm_curr_fdbk.c ****           else
 279:Src/pwm_curr_fdbk.c ****           {
 280:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = (uint16_t)wTimePhB;
 654              		.loc 2 280 30
 655 0230 BB6A     		ldr	r3, [r7, #40]
 656 0232 9AB2     		uxth	r2, r3
 657              		.loc 2 280 28
 658 0234 7B68     		ldr	r3, [r7, #4]
 659 0236 A3F85820 		strh	r2, [r3, #88]	@ movhi
 281:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = (uint16_t)wTimePhC;
 660              		.loc 2 281 30
 661 023a 7B6A     		ldr	r3, [r7, #36]
 662 023c 9AB2     		uxth	r2, r3
 663              		.loc 2 281 28
 664 023e 7B68     		ldr	r3, [r7, #4]
 665 0240 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 282:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = (uint16_t)wTimePhA;
 666              		.loc 2 282 31
 667 0244 FB6A     		ldr	r3, [r7, #44]
 668 0246 9AB2     		uxth	r2, r3
 669              		.loc 2 282 29
 670 0248 7B68     		ldr	r3, [r7, #4]
 671 024a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 672 024e FCE0     		b	.L17
 673              	.L11:
 283:Src/pwm_curr_fdbk.c ****         }
 284:Src/pwm_curr_fdbk.c ****         }
 285:Src/pwm_curr_fdbk.c ****     }
 286:Src/pwm_curr_fdbk.c ****     else /* wY > 0 */
 287:Src/pwm_curr_fdbk.c ****     {
 288:Src/pwm_curr_fdbk.c ****       if (wZ >= 0)
 674              		.loc 2 288 10
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 35


 675 0250 3B69     		ldr	r3, [r7, #16]
 676 0252 002B     		cmp	r3, #0
 677 0254 50DB     		blt	.L27
 289:Src/pwm_curr_fdbk.c ****       {
 290:Src/pwm_curr_fdbk.c ****         pHandle->Sector = SECTOR_2;
 678              		.loc 2 290 25
 679 0256 7B68     		ldr	r3, [r7, #4]
 680 0258 0122     		movs	r2, #1
 681 025a 83F87C20 		strb	r2, [r3, #124]
 291:Src/pwm_curr_fdbk.c ****         wTimePhA = (((int32_t)pHandle->PWMperiod) / 4) + ((wY - wZ) / (int32_t)262144);
 682              		.loc 2 291 38
 683 025e 7B68     		ldr	r3, [r7, #4]
 684 0260 B3F87230 		ldrh	r3, [r3, #114]
 685              		.loc 2 291 51
 686 0264 9B08     		lsrs	r3, r3, #2
 687 0266 9BB2     		uxth	r3, r3
 688 0268 1946     		mov	r1, r3
 689              		.loc 2 291 63
 690 026a 7A69     		ldr	r2, [r7, #20]
 691 026c 3B69     		ldr	r3, [r7, #16]
 692 026e D31A     		subs	r3, r2, r3
 693              		.loc 2 291 69
 694 0270 002B     		cmp	r3, #0
 695 0272 03DA     		bge	.L28
 696 0274 03F57F33 		add	r3, r3, #261120
 697 0278 03F2FF33 		addw	r3, r3, #1023
 698              	.L28:
 699 027c 9B14     		asrs	r3, r3, #18
 700              		.loc 2 291 18
 701 027e 0B44     		add	r3, r3, r1
 702 0280 FB62     		str	r3, [r7, #44]
 292:Src/pwm_curr_fdbk.c ****         wTimePhB = wTimePhA + (wZ / 131072);
 703              		.loc 2 292 35
 704 0282 3B69     		ldr	r3, [r7, #16]
 705 0284 002B     		cmp	r3, #0
 706 0286 03DA     		bge	.L29
 707 0288 03F5FF33 		add	r3, r3, #130560
 708 028c 03F2FF13 		addw	r3, r3, #511
 709              	.L29:
 710 0290 5B14     		asrs	r3, r3, #17
 711 0292 1A46     		mov	r2, r3
 712              		.loc 2 292 18
 713 0294 FB6A     		ldr	r3, [r7, #44]
 714 0296 1344     		add	r3, r3, r2
 715 0298 BB62     		str	r3, [r7, #40]
 293:Src/pwm_curr_fdbk.c ****         wTimePhC = wTimePhA - (wY / 131072);
 716              		.loc 2 293 35
 717 029a 7B69     		ldr	r3, [r7, #20]
 718 029c 002B     		cmp	r3, #0
 719 029e 03DA     		bge	.L30
 720 02a0 03F5FF33 		add	r3, r3, #130560
 721 02a4 03F2FF13 		addw	r3, r3, #511
 722              	.L30:
 723 02a8 5B14     		asrs	r3, r3, #17
 724 02aa 5B42     		rsbs	r3, r3, #0
 725 02ac 1A46     		mov	r2, r3
 726              		.loc 2 293 18
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 36


 727 02ae FB6A     		ldr	r3, [r7, #44]
 728 02b0 1344     		add	r3, r3, r2
 729 02b2 7B62     		str	r3, [r7, #36]
 294:Src/pwm_curr_fdbk.c **** 
 295:Src/pwm_curr_fdbk.c ****         if(true == pHandle->SingleShuntTopology)
 730              		.loc 2 295 27
 731 02b4 7B68     		ldr	r3, [r7, #4]
 732 02b6 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 733              		.loc 2 295 11
 734 02ba 002B     		cmp	r3, #0
 735 02bc 0CD0     		beq	.L31
 296:Src/pwm_curr_fdbk.c ****         {
 297:Src/pwm_curr_fdbk.c ****           pHandle->lowDuty = 2U;
 736              		.loc 2 297 28
 737 02be 7B68     		ldr	r3, [r7, #4]
 738 02c0 0222     		movs	r2, #2
 739 02c2 A3F85820 		strh	r2, [r3, #88]	@ movhi
 298:Src/pwm_curr_fdbk.c ****           pHandle->midDuty = 0U;
 740              		.loc 2 298 28
 741 02c6 7B68     		ldr	r3, [r7, #4]
 742 02c8 0022     		movs	r2, #0
 743 02ca A3F85A20 		strh	r2, [r3, #90]	@ movhi
 299:Src/pwm_curr_fdbk.c ****           pHandle->highDuty = 1U;
 744              		.loc 2 299 29
 745 02ce 7B68     		ldr	r3, [r7, #4]
 746 02d0 0122     		movs	r2, #1
 747 02d2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 748 02d6 B8E0     		b	.L17
 749              	.L31:
 300:Src/pwm_curr_fdbk.c ****         }
 301:Src/pwm_curr_fdbk.c ****         else
 302:Src/pwm_curr_fdbk.c ****         {
 303:Src/pwm_curr_fdbk.c ****         pHandle->lowDuty = (uint16_t)wTimePhB;
 750              		.loc 2 303 28
 751 02d8 BB6A     		ldr	r3, [r7, #40]
 752 02da 9AB2     		uxth	r2, r3
 753              		.loc 2 303 26
 754 02dc 7B68     		ldr	r3, [r7, #4]
 755 02de A3F85820 		strh	r2, [r3, #88]	@ movhi
 304:Src/pwm_curr_fdbk.c ****         pHandle->midDuty = (uint16_t)wTimePhA;
 756              		.loc 2 304 28
 757 02e2 FB6A     		ldr	r3, [r7, #44]
 758 02e4 9AB2     		uxth	r2, r3
 759              		.loc 2 304 26
 760 02e6 7B68     		ldr	r3, [r7, #4]
 761 02e8 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 305:Src/pwm_curr_fdbk.c ****         pHandle->highDuty = (uint16_t)wTimePhC;
 762              		.loc 2 305 29
 763 02ec 7B6A     		ldr	r3, [r7, #36]
 764 02ee 9AB2     		uxth	r2, r3
 765              		.loc 2 305 27
 766 02f0 7B68     		ldr	r3, [r7, #4]
 767 02f2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 768 02f6 A8E0     		b	.L17
 769              	.L27:
 306:Src/pwm_curr_fdbk.c ****         }
 307:Src/pwm_curr_fdbk.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 37


 308:Src/pwm_curr_fdbk.c ****       else /* wZ < 0 */
 309:Src/pwm_curr_fdbk.c ****         if ( wX <= 0 )
 770              		.loc 2 309 12
 771 02f8 BB69     		ldr	r3, [r7, #24]
 772 02fa 002B     		cmp	r3, #0
 773 02fc 50DC     		bgt	.L32
 310:Src/pwm_curr_fdbk.c ****         {
 311:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_6;
 774              		.loc 2 311 27
 775 02fe 7B68     		ldr	r3, [r7, #4]
 776 0300 0522     		movs	r2, #5
 777 0302 83F87C20 		strb	r2, [r3, #124]
 312:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t )pHandle->PWMperiod) / 4) + ((wY - wX) / (int32_t)262144);
 778              		.loc 2 312 41
 779 0306 7B68     		ldr	r3, [r7, #4]
 780 0308 B3F87230 		ldrh	r3, [r3, #114]
 781              		.loc 2 312 54
 782 030c 9B08     		lsrs	r3, r3, #2
 783 030e 9BB2     		uxth	r3, r3
 784 0310 1946     		mov	r1, r3
 785              		.loc 2 312 66
 786 0312 7A69     		ldr	r2, [r7, #20]
 787 0314 BB69     		ldr	r3, [r7, #24]
 788 0316 D31A     		subs	r3, r2, r3
 789              		.loc 2 312 72
 790 0318 002B     		cmp	r3, #0
 791 031a 03DA     		bge	.L33
 792 031c 03F57F33 		add	r3, r3, #261120
 793 0320 03F2FF33 		addw	r3, r3, #1023
 794              	.L33:
 795 0324 9B14     		asrs	r3, r3, #18
 796              		.loc 2 312 20
 797 0326 0B44     		add	r3, r3, r1
 798 0328 FB62     		str	r3, [r7, #44]
 313:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhA - (wY / 131072);
 799              		.loc 2 313 37
 800 032a 7B69     		ldr	r3, [r7, #20]
 801 032c 002B     		cmp	r3, #0
 802 032e 03DA     		bge	.L34
 803 0330 03F5FF33 		add	r3, r3, #130560
 804 0334 03F2FF13 		addw	r3, r3, #511
 805              	.L34:
 806 0338 5B14     		asrs	r3, r3, #17
 807 033a 5B42     		rsbs	r3, r3, #0
 808 033c 1A46     		mov	r2, r3
 809              		.loc 2 313 20
 810 033e FB6A     		ldr	r3, [r7, #44]
 811 0340 1344     		add	r3, r3, r2
 812 0342 7B62     		str	r3, [r7, #36]
 314:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhC + (wX / 131072);
 813              		.loc 2 314 37
 814 0344 BB69     		ldr	r3, [r7, #24]
 815 0346 002B     		cmp	r3, #0
 816 0348 03DA     		bge	.L35
 817 034a 03F5FF33 		add	r3, r3, #130560
 818 034e 03F2FF13 		addw	r3, r3, #511
 819              	.L35:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 38


 820 0352 5B14     		asrs	r3, r3, #17
 821 0354 1A46     		mov	r2, r3
 822              		.loc 2 314 20
 823 0356 7B6A     		ldr	r3, [r7, #36]
 824 0358 1344     		add	r3, r3, r2
 825 035a BB62     		str	r3, [r7, #40]
 315:Src/pwm_curr_fdbk.c **** 
 316:Src/pwm_curr_fdbk.c ****           if(true == pHandle->SingleShuntTopology)
 826              		.loc 2 316 29
 827 035c 7B68     		ldr	r3, [r7, #4]
 828 035e 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 829              		.loc 2 316 13
 830 0362 002B     		cmp	r3, #0
 831 0364 0CD0     		beq	.L36
 317:Src/pwm_curr_fdbk.c ****           {
 318:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 1U;
 832              		.loc 2 318 30
 833 0366 7B68     		ldr	r3, [r7, #4]
 834 0368 0122     		movs	r2, #1
 835 036a A3F85820 		strh	r2, [r3, #88]	@ movhi
 319:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 2U;
 836              		.loc 2 319 30
 837 036e 7B68     		ldr	r3, [r7, #4]
 838 0370 0222     		movs	r2, #2
 839 0372 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 320:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 840              		.loc 2 320 31
 841 0376 7B68     		ldr	r3, [r7, #4]
 842 0378 0022     		movs	r2, #0
 843 037a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 844 037e 64E0     		b	.L17
 845              	.L36:
 321:Src/pwm_curr_fdbk.c ****           }
 322:Src/pwm_curr_fdbk.c ****           else
 323:Src/pwm_curr_fdbk.c ****           {
 324:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 846              		.loc 2 324 32
 847 0380 FB6A     		ldr	r3, [r7, #44]
 848 0382 9AB2     		uxth	r2, r3
 849              		.loc 2 324 30
 850 0384 7B68     		ldr	r3, [r7, #4]
 851 0386 A3F85820 		strh	r2, [r3, #88]	@ movhi
 325:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhC;
 852              		.loc 2 325 32
 853 038a 7B6A     		ldr	r3, [r7, #36]
 854 038c 9AB2     		uxth	r2, r3
 855              		.loc 2 325 30
 856 038e 7B68     		ldr	r3, [r7, #4]
 857 0390 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 326:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhB;
 858              		.loc 2 326 33
 859 0394 BB6A     		ldr	r3, [r7, #40]
 860 0396 9AB2     		uxth	r2, r3
 861              		.loc 2 326 31
 862 0398 7B68     		ldr	r3, [r7, #4]
 863 039a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 864 039e 54E0     		b	.L17
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 39


 865              	.L32:
 327:Src/pwm_curr_fdbk.c ****         }
 328:Src/pwm_curr_fdbk.c ****         }
 329:Src/pwm_curr_fdbk.c ****         else /* wX > 0 */
 330:Src/pwm_curr_fdbk.c ****         {
 331:Src/pwm_curr_fdbk.c ****           pHandle->Sector = SECTOR_1;
 866              		.loc 2 331 27
 867 03a0 7B68     		ldr	r3, [r7, #4]
 868 03a2 0022     		movs	r2, #0
 869 03a4 83F87C20 		strb	r2, [r3, #124]
 332:Src/pwm_curr_fdbk.c ****           wTimePhA = (((int32_t)pHandle->PWMperiod) / 4)+ ((wX - wZ) / (int32_t)262144);
 870              		.loc 2 332 40
 871 03a8 7B68     		ldr	r3, [r7, #4]
 872 03aa B3F87230 		ldrh	r3, [r3, #114]
 873              		.loc 2 332 53
 874 03ae 9B08     		lsrs	r3, r3, #2
 875 03b0 9BB2     		uxth	r3, r3
 876 03b2 1946     		mov	r1, r3
 877              		.loc 2 332 64
 878 03b4 BA69     		ldr	r2, [r7, #24]
 879 03b6 3B69     		ldr	r3, [r7, #16]
 880 03b8 D31A     		subs	r3, r2, r3
 881              		.loc 2 332 70
 882 03ba 002B     		cmp	r3, #0
 883 03bc 03DA     		bge	.L37
 884 03be 03F57F33 		add	r3, r3, #261120
 885 03c2 03F2FF33 		addw	r3, r3, #1023
 886              	.L37:
 887 03c6 9B14     		asrs	r3, r3, #18
 888              		.loc 2 332 20
 889 03c8 0B44     		add	r3, r3, r1
 890 03ca FB62     		str	r3, [r7, #44]
 333:Src/pwm_curr_fdbk.c ****           wTimePhB = wTimePhA + (wZ / 131072);
 891              		.loc 2 333 37
 892 03cc 3B69     		ldr	r3, [r7, #16]
 893 03ce 002B     		cmp	r3, #0
 894 03d0 03DA     		bge	.L38
 895 03d2 03F5FF33 		add	r3, r3, #130560
 896 03d6 03F2FF13 		addw	r3, r3, #511
 897              	.L38:
 898 03da 5B14     		asrs	r3, r3, #17
 899 03dc 1A46     		mov	r2, r3
 900              		.loc 2 333 20
 901 03de FB6A     		ldr	r3, [r7, #44]
 902 03e0 1344     		add	r3, r3, r2
 903 03e2 BB62     		str	r3, [r7, #40]
 334:Src/pwm_curr_fdbk.c ****           wTimePhC = wTimePhB - (wX / 131072);
 904              		.loc 2 334 37
 905 03e4 BB69     		ldr	r3, [r7, #24]
 906 03e6 002B     		cmp	r3, #0
 907 03e8 03DA     		bge	.L39
 908 03ea 03F5FF33 		add	r3, r3, #130560
 909 03ee 03F2FF13 		addw	r3, r3, #511
 910              	.L39:
 911 03f2 5B14     		asrs	r3, r3, #17
 912 03f4 5B42     		rsbs	r3, r3, #0
 913 03f6 1A46     		mov	r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 40


 914              		.loc 2 334 20
 915 03f8 BB6A     		ldr	r3, [r7, #40]
 916 03fa 1344     		add	r3, r3, r2
 917 03fc 7B62     		str	r3, [r7, #36]
 335:Src/pwm_curr_fdbk.c **** 
 336:Src/pwm_curr_fdbk.c ****           if((pHandle->DPWM_Mode == true) || (pHandle->SingleShuntTopology == true))
 918              		.loc 2 336 22
 919 03fe 7B68     		ldr	r3, [r7, #4]
 920 0400 93F87F30 		ldrb	r3, [r3, #127]	@ zero_extendqisi2
 921              		.loc 2 336 13
 922 0404 002B     		cmp	r3, #0
 923 0406 04D1     		bne	.L40
 924              		.loc 2 336 54 discriminator 1
 925 0408 7B68     		ldr	r3, [r7, #4]
 926 040a 93F88730 		ldrb	r3, [r3, #135]	@ zero_extendqisi2
 927              		.loc 2 336 43 discriminator 1
 928 040e 002B     		cmp	r3, #0
 929 0410 0CD0     		beq	.L41
 930              	.L40:
 337:Src/pwm_curr_fdbk.c ****           {
 338:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = 2U;
 931              		.loc 2 338 30
 932 0412 7B68     		ldr	r3, [r7, #4]
 933 0414 0222     		movs	r2, #2
 934 0416 A3F85820 		strh	r2, [r3, #88]	@ movhi
 339:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = 1U;
 935              		.loc 2 339 30
 936 041a 7B68     		ldr	r3, [r7, #4]
 937 041c 0122     		movs	r2, #1
 938 041e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 340:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = 0U;
 939              		.loc 2 340 31
 940 0422 7B68     		ldr	r3, [r7, #4]
 941 0424 0022     		movs	r2, #0
 942 0426 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 943 042a 0EE0     		b	.L17
 944              	.L41:
 341:Src/pwm_curr_fdbk.c ****           }
 342:Src/pwm_curr_fdbk.c ****           else
 343:Src/pwm_curr_fdbk.c ****           {
 344:Src/pwm_curr_fdbk.c ****             pHandle->lowDuty = (uint16_t)wTimePhA;
 945              		.loc 2 344 32
 946 042c FB6A     		ldr	r3, [r7, #44]
 947 042e 9AB2     		uxth	r2, r3
 948              		.loc 2 344 30
 949 0430 7B68     		ldr	r3, [r7, #4]
 950 0432 A3F85820 		strh	r2, [r3, #88]	@ movhi
 345:Src/pwm_curr_fdbk.c ****             pHandle->midDuty = (uint16_t)wTimePhB;
 951              		.loc 2 345 32
 952 0436 BB6A     		ldr	r3, [r7, #40]
 953 0438 9AB2     		uxth	r2, r3
 954              		.loc 2 345 30
 955 043a 7B68     		ldr	r3, [r7, #4]
 956 043c A3F85A20 		strh	r2, [r3, #90]	@ movhi
 346:Src/pwm_curr_fdbk.c ****             pHandle->highDuty = (uint16_t)wTimePhC;
 957              		.loc 2 346 33
 958 0440 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 41


 959 0442 9AB2     		uxth	r2, r3
 960              		.loc 2 346 31
 961 0444 7B68     		ldr	r3, [r7, #4]
 962 0446 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 963              	.L17:
 347:Src/pwm_curr_fdbk.c ****         }
 348:Src/pwm_curr_fdbk.c ****         }
 349:Src/pwm_curr_fdbk.c ****     }
 350:Src/pwm_curr_fdbk.c **** 
 351:Src/pwm_curr_fdbk.c ****     pHandle->CntPhA = (uint16_t)(MAX(wTimePhA, 0));
 964              		.loc 2 351 23
 965 044a FB6A     		ldr	r3, [r7, #44]
 966 044c 002B     		cmp	r3, #0
 967 044e 02DD     		ble	.L42
 968              		.loc 2 351 23 is_stmt 0 discriminator 1
 969 0450 FB6A     		ldr	r3, [r7, #44]
 970 0452 9AB2     		uxth	r2, r3
 971 0454 00E0     		b	.L43
 972              	.L42:
 973              		.loc 2 351 23 discriminator 2
 974 0456 0022     		movs	r2, #0
 975              	.L43:
 976              		.loc 2 351 21 is_stmt 1 discriminator 4
 977 0458 7B68     		ldr	r3, [r7, #4]
 978 045a A3F85020 		strh	r2, [r3, #80]	@ movhi
 352:Src/pwm_curr_fdbk.c ****     pHandle->CntPhB = (uint16_t)(MAX(wTimePhB, 0));
 979              		.loc 2 352 23 discriminator 4
 980 045e BB6A     		ldr	r3, [r7, #40]
 981 0460 002B     		cmp	r3, #0
 982 0462 02DD     		ble	.L44
 983              		.loc 2 352 23 is_stmt 0 discriminator 1
 984 0464 BB6A     		ldr	r3, [r7, #40]
 985 0466 9AB2     		uxth	r2, r3
 986 0468 00E0     		b	.L45
 987              	.L44:
 988              		.loc 2 352 23 discriminator 2
 989 046a 0022     		movs	r2, #0
 990              	.L45:
 991              		.loc 2 352 21 is_stmt 1 discriminator 4
 992 046c 7B68     		ldr	r3, [r7, #4]
 993 046e A3F85220 		strh	r2, [r3, #82]	@ movhi
 353:Src/pwm_curr_fdbk.c ****     pHandle->CntPhC = (uint16_t)(MAX(wTimePhC, 0));
 994              		.loc 2 353 23 discriminator 4
 995 0472 7B6A     		ldr	r3, [r7, #36]
 996 0474 002B     		cmp	r3, #0
 997 0476 02DD     		ble	.L46
 998              		.loc 2 353 23 is_stmt 0 discriminator 1
 999 0478 7B6A     		ldr	r3, [r7, #36]
 1000 047a 9AB2     		uxth	r2, r3
 1001 047c 00E0     		b	.L47
 1002              	.L46:
 1003              		.loc 2 353 23 discriminator 2
 1004 047e 0022     		movs	r2, #0
 1005              	.L47:
 1006              		.loc 2 353 21 is_stmt 1 discriminator 4
 1007 0480 7B68     		ldr	r3, [r7, #4]
 1008 0482 A3F85420 		strh	r2, [r3, #84]	@ movhi
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 42


 354:Src/pwm_curr_fdbk.c **** 
 355:Src/pwm_curr_fdbk.c ****     if (1U == pHandle->DTTest)
 1009              		.loc 2 355 22 discriminator 4
 1010 0486 7B68     		ldr	r3, [r7, #4]
 1011 0488 B3F87030 		ldrh	r3, [r3, #112]
 1012              		.loc 2 355 8 discriminator 4
 1013 048c 012B     		cmp	r3, #1
 1014 048e 53D1     		bne	.L48
 356:Src/pwm_curr_fdbk.c ****     {
 357:Src/pwm_curr_fdbk.c ****       /* Dead time compensation */
 358:Src/pwm_curr_fdbk.c ****       if (pHandle->Ia > 0)
 1015              		.loc 2 358 18
 1016 0490 7B68     		ldr	r3, [r7, #4]
 1017 0492 B3F96230 		ldrsh	r3, [r3, #98]
 1018              		.loc 2 358 10
 1019 0496 002B     		cmp	r3, #0
 1020 0498 0BDD     		ble	.L49
 359:Src/pwm_curr_fdbk.c ****       {
 360:Src/pwm_curr_fdbk.c ****         pHandle->CntPhA += pHandle->DTCompCnt;
 1021              		.loc 2 360 25
 1022 049a 7B68     		ldr	r3, [r7, #4]
 1023 049c B3F85020 		ldrh	r2, [r3, #80]
 1024              		.loc 2 360 35
 1025 04a0 7B68     		ldr	r3, [r7, #4]
 1026 04a2 B3F87430 		ldrh	r3, [r3, #116]
 1027              		.loc 2 360 25
 1028 04a6 1344     		add	r3, r3, r2
 1029 04a8 9AB2     		uxth	r2, r3
 1030 04aa 7B68     		ldr	r3, [r7, #4]
 1031 04ac A3F85020 		strh	r2, [r3, #80]	@ movhi
 1032 04b0 0AE0     		b	.L50
 1033              	.L49:
 361:Src/pwm_curr_fdbk.c ****       }
 362:Src/pwm_curr_fdbk.c ****       else
 363:Src/pwm_curr_fdbk.c ****       {
 364:Src/pwm_curr_fdbk.c ****         pHandle->CntPhA -= pHandle->DTCompCnt;
 1034              		.loc 2 364 25
 1035 04b2 7B68     		ldr	r3, [r7, #4]
 1036 04b4 B3F85020 		ldrh	r2, [r3, #80]
 1037              		.loc 2 364 35
 1038 04b8 7B68     		ldr	r3, [r7, #4]
 1039 04ba B3F87430 		ldrh	r3, [r3, #116]
 1040              		.loc 2 364 25
 1041 04be D31A     		subs	r3, r2, r3
 1042 04c0 9AB2     		uxth	r2, r3
 1043 04c2 7B68     		ldr	r3, [r7, #4]
 1044 04c4 A3F85020 		strh	r2, [r3, #80]	@ movhi
 1045              	.L50:
 365:Src/pwm_curr_fdbk.c ****       }
 366:Src/pwm_curr_fdbk.c **** 
 367:Src/pwm_curr_fdbk.c ****       if (pHandle->Ib > 0)
 1046              		.loc 2 367 18
 1047 04c8 7B68     		ldr	r3, [r7, #4]
 1048 04ca B3F96430 		ldrsh	r3, [r3, #100]
 1049              		.loc 2 367 10
 1050 04ce 002B     		cmp	r3, #0
 1051 04d0 0BDD     		ble	.L51
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 43


 368:Src/pwm_curr_fdbk.c ****       {
 369:Src/pwm_curr_fdbk.c ****         pHandle->CntPhB += pHandle->DTCompCnt;
 1052              		.loc 2 369 25
 1053 04d2 7B68     		ldr	r3, [r7, #4]
 1054 04d4 B3F85220 		ldrh	r2, [r3, #82]
 1055              		.loc 2 369 35
 1056 04d8 7B68     		ldr	r3, [r7, #4]
 1057 04da B3F87430 		ldrh	r3, [r3, #116]
 1058              		.loc 2 369 25
 1059 04de 1344     		add	r3, r3, r2
 1060 04e0 9AB2     		uxth	r2, r3
 1061 04e2 7B68     		ldr	r3, [r7, #4]
 1062 04e4 A3F85220 		strh	r2, [r3, #82]	@ movhi
 1063 04e8 0AE0     		b	.L52
 1064              	.L51:
 370:Src/pwm_curr_fdbk.c ****       }
 371:Src/pwm_curr_fdbk.c ****       else
 372:Src/pwm_curr_fdbk.c ****       {
 373:Src/pwm_curr_fdbk.c ****         pHandle->CntPhB -= pHandle->DTCompCnt;
 1065              		.loc 2 373 25
 1066 04ea 7B68     		ldr	r3, [r7, #4]
 1067 04ec B3F85220 		ldrh	r2, [r3, #82]
 1068              		.loc 2 373 35
 1069 04f0 7B68     		ldr	r3, [r7, #4]
 1070 04f2 B3F87430 		ldrh	r3, [r3, #116]
 1071              		.loc 2 373 25
 1072 04f6 D31A     		subs	r3, r2, r3
 1073 04f8 9AB2     		uxth	r2, r3
 1074 04fa 7B68     		ldr	r3, [r7, #4]
 1075 04fc A3F85220 		strh	r2, [r3, #82]	@ movhi
 1076              	.L52:
 374:Src/pwm_curr_fdbk.c ****       }
 375:Src/pwm_curr_fdbk.c **** 
 376:Src/pwm_curr_fdbk.c ****       if (pHandle->Ic > 0)
 1077              		.loc 2 376 18
 1078 0500 7B68     		ldr	r3, [r7, #4]
 1079 0502 B3F96630 		ldrsh	r3, [r3, #102]
 1080              		.loc 2 376 10
 1081 0506 002B     		cmp	r3, #0
 1082 0508 0BDD     		ble	.L53
 377:Src/pwm_curr_fdbk.c ****       {
 378:Src/pwm_curr_fdbk.c ****         pHandle->CntPhC += pHandle->DTCompCnt;
 1083              		.loc 2 378 25
 1084 050a 7B68     		ldr	r3, [r7, #4]
 1085 050c B3F85420 		ldrh	r2, [r3, #84]
 1086              		.loc 2 378 35
 1087 0510 7B68     		ldr	r3, [r7, #4]
 1088 0512 B3F87430 		ldrh	r3, [r3, #116]
 1089              		.loc 2 378 25
 1090 0516 1344     		add	r3, r3, r2
 1091 0518 9AB2     		uxth	r2, r3
 1092 051a 7B68     		ldr	r3, [r7, #4]
 1093 051c A3F85420 		strh	r2, [r3, #84]	@ movhi
 1094 0520 0AE0     		b	.L48
 1095              	.L53:
 379:Src/pwm_curr_fdbk.c ****       }
 380:Src/pwm_curr_fdbk.c ****       else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 44


 381:Src/pwm_curr_fdbk.c ****       {
 382:Src/pwm_curr_fdbk.c ****         pHandle->CntPhC -= pHandle->DTCompCnt;
 1096              		.loc 2 382 25
 1097 0522 7B68     		ldr	r3, [r7, #4]
 1098 0524 B3F85420 		ldrh	r2, [r3, #84]
 1099              		.loc 2 382 35
 1100 0528 7B68     		ldr	r3, [r7, #4]
 1101 052a B3F87430 		ldrh	r3, [r3, #116]
 1102              		.loc 2 382 25
 1103 052e D31A     		subs	r3, r2, r3
 1104 0530 9AB2     		uxth	r2, r3
 1105 0532 7B68     		ldr	r3, [r7, #4]
 1106 0534 A3F85420 		strh	r2, [r3, #84]	@ movhi
 1107              	.L48:
 383:Src/pwm_curr_fdbk.c ****       }
 384:Src/pwm_curr_fdbk.c ****     }
 385:Src/pwm_curr_fdbk.c ****     returnValue = pHandle->pFctSetADCSampPointSectX(pHandle);
 1108              		.loc 2 385 26
 1109 0538 7B68     		ldr	r3, [r7, #4]
 1110 053a 5B69     		ldr	r3, [r3, #20]
 1111              		.loc 2 385 19
 1112 053c 7868     		ldr	r0, [r7, #4]
 1113 053e 9847     		blx	r3
 1114              	.LVL3:
 1115 0540 0346     		mov	r3, r0
 1116 0542 FB81     		strh	r3, [r7, #14]	@ movhi
 386:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 387:Src/pwm_curr_fdbk.c ****   }
 388:Src/pwm_curr_fdbk.c **** #endif
 389:Src/pwm_curr_fdbk.c ****   return (returnValue);
 1117              		.loc 2 389 10
 1118 0544 FB89     		ldrh	r3, [r7, #14]
 390:Src/pwm_curr_fdbk.c **** }
 1119              		.loc 2 390 1
 1120 0546 1846     		mov	r0, r3
 1121 0548 3037     		adds	r7, r7, #48
 1122              	.LCFI30:
 1123              		.cfi_def_cfa_offset 8
 1124 054a BD46     		mov	sp, r7
 1125              	.LCFI31:
 1126              		.cfi_def_cfa_register 13
 1127              		@ sp needed
 1128 054c 80BD     		pop	{r7, pc}
 1129              		.cfi_endproc
 1130              	.LFE1094:
 1132              		.section	.text.PWMC_SwitchOffPWM,"ax",%progbits
 1133              		.align	1
 1134              		.weak	PWMC_SwitchOffPWM
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1139              	PWMC_SwitchOffPWM:
 1140              	.LFB1095:
 391:Src/pwm_curr_fdbk.c **** 
 392:Src/pwm_curr_fdbk.c **** /**
 393:Src/pwm_curr_fdbk.c ****   * @brief  Switches PWM generation off, inactivating the outputs.
 394:Src/pwm_curr_fdbk.c ****   *
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 45


 395:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 396:Src/pwm_curr_fdbk.c ****   */
 397:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 398:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOffPWM(PWMC_Handle_t *pHandle)
 399:Src/pwm_curr_fdbk.c **** {
 1141              		.loc 2 399 1
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              	.LCFI32:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 82B0     		sub	sp, sp, #8
 1151              	.LCFI33:
 1152              		.cfi_def_cfa_offset 16
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI34:
 1155              		.cfi_def_cfa_register 7
 1156 0006 7860     		str	r0, [r7, #4]
 400:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 401:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 402:Src/pwm_curr_fdbk.c ****   {
 403:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 404:Src/pwm_curr_fdbk.c ****   }
 405:Src/pwm_curr_fdbk.c ****   else
 406:Src/pwm_curr_fdbk.c ****   {
 407:Src/pwm_curr_fdbk.c **** #endif
 408:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm(pHandle);
 1157              		.loc 2 408 12
 1158 0008 7B68     		ldr	r3, [r7, #4]
 1159 000a 5B68     		ldr	r3, [r3, #4]
 1160              		.loc 2 408 5
 1161 000c 7868     		ldr	r0, [r7, #4]
 1162 000e 9847     		blx	r3
 1163              	.LVL4:
 409:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 410:Src/pwm_curr_fdbk.c ****   }
 411:Src/pwm_curr_fdbk.c **** #endif
 412:Src/pwm_curr_fdbk.c **** }
 1164              		.loc 2 412 1
 1165 0010 00BF     		nop
 1166 0012 0837     		adds	r7, r7, #8
 1167              	.LCFI35:
 1168              		.cfi_def_cfa_offset 8
 1169 0014 BD46     		mov	sp, r7
 1170              	.LCFI36:
 1171              		.cfi_def_cfa_register 13
 1172              		@ sp needed
 1173 0016 80BD     		pop	{r7, pc}
 1174              		.cfi_endproc
 1175              	.LFE1095:
 1177              		.section	.text.PWMC_SwitchOnPWM,"ax",%progbits
 1178              		.align	1
 1179              		.weak	PWMC_SwitchOnPWM
 1180              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 46


 1181              		.thumb
 1182              		.thumb_func
 1184              	PWMC_SwitchOnPWM:
 1185              	.LFB1096:
 413:Src/pwm_curr_fdbk.c **** 
 414:Src/pwm_curr_fdbk.c **** /**
 415:Src/pwm_curr_fdbk.c ****   * @brief  Enables PWM generation on the proper Timer peripheral.
 416:Src/pwm_curr_fdbk.c ****   *
 417:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 418:Src/pwm_curr_fdbk.c ****   */
 419:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 420:Src/pwm_curr_fdbk.c **** __weak void PWMC_SwitchOnPWM(PWMC_Handle_t *pHandle)
 421:Src/pwm_curr_fdbk.c **** {
 1186              		.loc 2 421 1
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 8
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190 0000 80B5     		push	{r7, lr}
 1191              	.LCFI37:
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 82B0     		sub	sp, sp, #8
 1196              	.LCFI38:
 1197              		.cfi_def_cfa_offset 16
 1198 0004 00AF     		add	r7, sp, #0
 1199              	.LCFI39:
 1200              		.cfi_def_cfa_register 7
 1201 0006 7860     		str	r0, [r7, #4]
 422:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 423:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 424:Src/pwm_curr_fdbk.c ****   {
 425:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 426:Src/pwm_curr_fdbk.c ****   }
 427:Src/pwm_curr_fdbk.c ****   else
 428:Src/pwm_curr_fdbk.c ****   {
 429:Src/pwm_curr_fdbk.c **** #endif
 430:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm(pHandle);
 1202              		.loc 2 430 12
 1203 0008 7B68     		ldr	r3, [r7, #4]
 1204 000a 9B68     		ldr	r3, [r3, #8]
 1205              		.loc 2 430 5
 1206 000c 7868     		ldr	r0, [r7, #4]
 1207 000e 9847     		blx	r3
 1208              	.LVL5:
 431:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 432:Src/pwm_curr_fdbk.c ****   }
 433:Src/pwm_curr_fdbk.c **** #endif
 434:Src/pwm_curr_fdbk.c **** }
 1209              		.loc 2 434 1
 1210 0010 00BF     		nop
 1211 0012 0837     		adds	r7, r7, #8
 1212              	.LCFI40:
 1213              		.cfi_def_cfa_offset 8
 1214 0014 BD46     		mov	sp, r7
 1215              	.LCFI41:
 1216              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 47


 1217              		@ sp needed
 1218 0016 80BD     		pop	{r7, pc}
 1219              		.cfi_endproc
 1220              	.LFE1096:
 1222              		.section	.text.PWMC_CurrentReadingCalibr,"ax",%progbits
 1223              		.align	1
 1224              		.weak	PWMC_CurrentReadingCalibr
 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1229              	PWMC_CurrentReadingCalibr:
 1230              	.LFB1097:
 435:Src/pwm_curr_fdbk.c **** 
 436:Src/pwm_curr_fdbk.c **** /**
 437:Src/pwm_curr_fdbk.c ****   * @brief  Calibrates ADC current conversions by reading the offset voltage
 438:Src/pwm_curr_fdbk.c ****   *         present on ADC pins when no motor current is flowing in.
 439:Src/pwm_curr_fdbk.c ****   *
 440:Src/pwm_curr_fdbk.c ****   * This function should be called before each motor start-up.
 441:Src/pwm_curr_fdbk.c ****   *
 442:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 443:Src/pwm_curr_fdbk.c ****   * @param  action: Can be #CRC_START to initialize the offset calibration or
 444:Src/pwm_curr_fdbk.c ****   *         #CRC_EXEC to execute the offset calibration.
 445:Src/pwm_curr_fdbk.c ****   * @retval true if the current calibration has been completed, **false** if it is
 446:Src/pwm_curr_fdbk.c ****   *         still ongoing.
 447:Src/pwm_curr_fdbk.c ****   */
 448:Src/pwm_curr_fdbk.c **** __weak bool PWMC_CurrentReadingCalibr(PWMC_Handle_t *pHandle, CRCAction_t action)
 449:Src/pwm_curr_fdbk.c **** {
 1231              		.loc 2 449 1
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 16
 1234              		@ frame_needed = 1, uses_anonymous_args = 0
 1235 0000 80B5     		push	{r7, lr}
 1236              	.LCFI42:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 84B0     		sub	sp, sp, #16
 1241              	.LCFI43:
 1242              		.cfi_def_cfa_offset 24
 1243 0004 00AF     		add	r7, sp, #0
 1244              	.LCFI44:
 1245              		.cfi_def_cfa_register 7
 1246 0006 7860     		str	r0, [r7, #4]
 1247 0008 0B46     		mov	r3, r1
 1248 000a FB70     		strb	r3, [r7, #3]
 450:Src/pwm_curr_fdbk.c ****   bool retVal = false;
 1249              		.loc 2 450 8
 1250 000c 0023     		movs	r3, #0
 1251 000e FB73     		strb	r3, [r7, #15]
 451:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 452:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 453:Src/pwm_curr_fdbk.c ****   {
 454:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 455:Src/pwm_curr_fdbk.c ****   }
 456:Src/pwm_curr_fdbk.c ****   else
 457:Src/pwm_curr_fdbk.c ****   {
 458:Src/pwm_curr_fdbk.c **** #endif
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 48


 459:Src/pwm_curr_fdbk.c ****     if (CRC_START == action)
 1252              		.loc 2 459 8
 1253 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1254 0012 002B     		cmp	r3, #0
 1255 0014 09D1     		bne	.L58
 460:Src/pwm_curr_fdbk.c ****     {
 461:Src/pwm_curr_fdbk.c ****       PWMC_SwitchOffPWM(pHandle);
 1256              		.loc 2 461 7
 1257 0016 7868     		ldr	r0, [r7, #4]
 1258 0018 FFF7FEFF 		bl	PWMC_SwitchOffPWM
 462:Src/pwm_curr_fdbk.c ****       pHandle->pFctCurrReadingCalib(pHandle);
 1259              		.loc 2 462 14
 1260 001c 7B68     		ldr	r3, [r7, #4]
 1261 001e DB68     		ldr	r3, [r3, #12]
 1262              		.loc 2 462 7
 1263 0020 7868     		ldr	r0, [r7, #4]
 1264 0022 9847     		blx	r3
 1265              	.LVL6:
 463:Src/pwm_curr_fdbk.c ****       retVal = true;
 1266              		.loc 2 463 14
 1267 0024 0123     		movs	r3, #1
 1268 0026 FB73     		strb	r3, [r7, #15]
 1269 0028 1DE0     		b	.L59
 1270              	.L58:
 464:Src/pwm_curr_fdbk.c ****     }
 465:Src/pwm_curr_fdbk.c ****     else if (CRC_EXEC == action)
 1271              		.loc 2 465 13
 1272 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1273 002c 012B     		cmp	r3, #1
 1274 002e 1AD1     		bne	.L59
 466:Src/pwm_curr_fdbk.c ****     {
 467:Src/pwm_curr_fdbk.c ****       if (pHandle->OffCalibrWaitTimeCounter > 0u)
 1275              		.loc 2 467 18
 1276 0030 7B68     		ldr	r3, [r7, #4]
 1277 0032 B3F86030 		ldrh	r3, [r3, #96]
 1278              		.loc 2 467 10
 1279 0036 002B     		cmp	r3, #0
 1280 0038 13D0     		beq	.L60
 468:Src/pwm_curr_fdbk.c ****       {
 469:Src/pwm_curr_fdbk.c ****         pHandle->OffCalibrWaitTimeCounter--;
 1281              		.loc 2 469 16
 1282 003a 7B68     		ldr	r3, [r7, #4]
 1283 003c B3F86030 		ldrh	r3, [r3, #96]
 1284              		.loc 2 469 42
 1285 0040 013B     		subs	r3, r3, #1
 1286 0042 9AB2     		uxth	r2, r3
 1287 0044 7B68     		ldr	r3, [r7, #4]
 1288 0046 A3F86020 		strh	r2, [r3, #96]	@ movhi
 470:Src/pwm_curr_fdbk.c ****         if (0U == pHandle->OffCalibrWaitTimeCounter)
 1289              		.loc 2 470 26
 1290 004a 7B68     		ldr	r3, [r7, #4]
 1291 004c B3F86030 		ldrh	r3, [r3, #96]
 1292              		.loc 2 470 12
 1293 0050 002B     		cmp	r3, #0
 1294 0052 08D1     		bne	.L59
 471:Src/pwm_curr_fdbk.c ****         {
 472:Src/pwm_curr_fdbk.c ****           pHandle->pFctCurrReadingCalib(pHandle);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 49


 1295              		.loc 2 472 18
 1296 0054 7B68     		ldr	r3, [r7, #4]
 1297 0056 DB68     		ldr	r3, [r3, #12]
 1298              		.loc 2 472 11
 1299 0058 7868     		ldr	r0, [r7, #4]
 1300 005a 9847     		blx	r3
 1301              	.LVL7:
 473:Src/pwm_curr_fdbk.c ****           retVal = true;
 1302              		.loc 2 473 18
 1303 005c 0123     		movs	r3, #1
 1304 005e FB73     		strb	r3, [r7, #15]
 1305 0060 01E0     		b	.L59
 1306              	.L60:
 474:Src/pwm_curr_fdbk.c ****         }
 475:Src/pwm_curr_fdbk.c ****       }
 476:Src/pwm_curr_fdbk.c ****       else
 477:Src/pwm_curr_fdbk.c ****       {
 478:Src/pwm_curr_fdbk.c ****         retVal = true;
 1307              		.loc 2 478 16
 1308 0062 0123     		movs	r3, #1
 1309 0064 FB73     		strb	r3, [r7, #15]
 1310              	.L59:
 479:Src/pwm_curr_fdbk.c ****       }
 480:Src/pwm_curr_fdbk.c ****     }
 481:Src/pwm_curr_fdbk.c ****     else
 482:Src/pwm_curr_fdbk.c ****     {
 483:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 484:Src/pwm_curr_fdbk.c ****     }
 485:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 486:Src/pwm_curr_fdbk.c ****   }
 487:Src/pwm_curr_fdbk.c **** #endif
 488:Src/pwm_curr_fdbk.c ****   return (retVal);
 1311              		.loc 2 488 10
 1312 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 489:Src/pwm_curr_fdbk.c **** }
 1313              		.loc 2 489 1
 1314 0068 1846     		mov	r0, r3
 1315 006a 1037     		adds	r7, r7, #16
 1316              	.LCFI45:
 1317              		.cfi_def_cfa_offset 8
 1318 006c BD46     		mov	sp, r7
 1319              	.LCFI46:
 1320              		.cfi_def_cfa_register 13
 1321              		@ sp needed
 1322 006e 80BD     		pop	{r7, pc}
 1323              		.cfi_endproc
 1324              	.LFE1097:
 1326              		.section	.text.PWMC_LowPassFilter,"ax",%progbits
 1327              		.align	1
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1332              	PWMC_LowPassFilter:
 1333              	.LFB1098:
 490:Src/pwm_curr_fdbk.c **** 
 491:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 492:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 50


 493:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 494:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 495:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 496:Src/pwm_curr_fdbk.c **** #endif
 497:Src/pwm_curr_fdbk.c **** #endif
 498:Src/pwm_curr_fdbk.c **** /**
 499:Src/pwm_curr_fdbk.c ****   * @brief  Sets a low pass filter.
 500:Src/pwm_curr_fdbk.c ****   *
 501:Src/pwm_curr_fdbk.c ****   * This function is called for setting low pass filter on Iq and Id, before getting
 502:Src/pwm_curr_fdbk.c ****   * transformed in Ia and Ib by the Reverse Park function.
 503:Src/pwm_curr_fdbk.c ****   *
 504:Src/pwm_curr_fdbk.c ****   * @param in: Value needing to be passed through the filter (Iq and Id).
 505:Src/pwm_curr_fdbk.c ****   * @param out_buf: LPF buffer.
 506:Src/pwm_curr_fdbk.c ****   * @param t: Low pass filter constant.
 507:Src/pwm_curr_fdbk.c ****   * @retval New value after the low pass filter.
 508:Src/pwm_curr_fdbk.c ****   */
 509:Src/pwm_curr_fdbk.c **** static inline int32_t PWMC_LowPassFilter(int32_t in, int32_t *out_buf, int32_t t)
 510:Src/pwm_curr_fdbk.c **** {
 1334              		.loc 2 510 1
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 24
 1337              		@ frame_needed = 1, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339 0000 80B4     		push	{r7}
 1340              	.LCFI47:
 1341              		.cfi_def_cfa_offset 4
 1342              		.cfi_offset 7, -4
 1343 0002 87B0     		sub	sp, sp, #28
 1344              	.LCFI48:
 1345              		.cfi_def_cfa_offset 32
 1346 0004 00AF     		add	r7, sp, #0
 1347              	.LCFI49:
 1348              		.cfi_def_cfa_register 7
 1349 0006 F860     		str	r0, [r7, #12]
 1350 0008 B960     		str	r1, [r7, #8]
 1351 000a 7A60     		str	r2, [r7, #4]
 511:Src/pwm_curr_fdbk.c ****   int32_t x;
 512:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 513:Src/pwm_curr_fdbk.c ****   if (MC_NULL == out_buf)
 514:Src/pwm_curr_fdbk.c ****   {
 515:Src/pwm_curr_fdbk.c ****     x = 0;
 516:Src/pwm_curr_fdbk.c ****   }
 517:Src/pwm_curr_fdbk.c ****   else
 518:Src/pwm_curr_fdbk.c ****   {
 519:Src/pwm_curr_fdbk.c **** #endif
 520:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 521:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 522:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) >> 15)) * t);
 1352              		.loc 2 522 17
 1353 000c BB68     		ldr	r3, [r7, #8]
 1354 000e 1A68     		ldr	r2, [r3]
 1355              		.loc 2 522 38
 1356 0010 BB68     		ldr	r3, [r7, #8]
 1357 0012 1B68     		ldr	r3, [r3]
 1358              		.loc 2 522 48
 1359 0014 DB13     		asrs	r3, r3, #15
 1360              		.loc 2 522 34
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 51


 1361 0016 F968     		ldr	r1, [r7, #12]
 1362 0018 CB1A     		subs	r3, r1, r3
 1363              		.loc 2 522 56
 1364 001a 7968     		ldr	r1, [r7, #4]
 1365 001c 01FB03F3 		mul	r3, r1, r3
 1366              		.loc 2 522 27
 1367 0020 1A44     		add	r2, r2, r3
 1368              		.loc 2 522 14
 1369 0022 BB68     		ldr	r3, [r7, #8]
 1370 0024 1A60     		str	r2, [r3]
 523:Src/pwm_curr_fdbk.c ****     x = (*out_buf) >> 15; //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 1371              		.loc 2 523 10
 1372 0026 BB68     		ldr	r3, [r7, #8]
 1373 0028 1B68     		ldr	r3, [r3]
 1374              		.loc 2 523 7
 1375 002a DB13     		asrs	r3, r3, #15
 1376 002c 7B61     		str	r3, [r7, #20]
 524:Src/pwm_curr_fdbk.c **** #else
 525:Src/pwm_curr_fdbk.c ****     *out_buf = (*out_buf) + ((in - ((*out_buf) / 32768)) * t);
 526:Src/pwm_curr_fdbk.c ****     x = (*out_buf) / 32768;
 527:Src/pwm_curr_fdbk.c **** 
 528:Src/pwm_curr_fdbk.c **** #endif
 529:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 530:Src/pwm_curr_fdbk.c ****   }
 531:Src/pwm_curr_fdbk.c **** #endif
 532:Src/pwm_curr_fdbk.c ****   return (x);
 1377              		.loc 2 532 10
 1378 002e 7B69     		ldr	r3, [r7, #20]
 533:Src/pwm_curr_fdbk.c **** }
 1379              		.loc 2 533 1
 1380 0030 1846     		mov	r0, r3
 1381 0032 1C37     		adds	r7, r7, #28
 1382              	.LCFI50:
 1383              		.cfi_def_cfa_offset 4
 1384 0034 BD46     		mov	sp, r7
 1385              	.LCFI51:
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 0036 5DF8047B 		ldr	r7, [sp], #4
 1389              	.LCFI52:
 1390              		.cfi_restore 7
 1391              		.cfi_def_cfa_offset 0
 1392 003a 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE1098:
 1396              		.section	.text.PWMC_CalcPhaseCurrentsEst,"ax",%progbits
 1397              		.align	1
 1398              		.global	PWMC_CalcPhaseCurrentsEst
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1403              	PWMC_CalcPhaseCurrentsEst:
 1404              	.LFB1099:
 534:Src/pwm_curr_fdbk.c **** 
 535:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 536:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 537:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 52


 538:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 539:Src/pwm_curr_fdbk.c **** __attribute__( ( section ( ".ccmram" ) ) )
 540:Src/pwm_curr_fdbk.c **** #endif
 541:Src/pwm_curr_fdbk.c **** #endif
 542:Src/pwm_curr_fdbk.c **** /**
 543:Src/pwm_curr_fdbk.c ****   * @brief  Converts input currents components Iqd into estimated
 544:Src/pwm_curr_fdbk.c ****   *         currents Ia, Ib and Ic.
 545:Src/pwm_curr_fdbk.c ****   *
 546:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 547:Src/pwm_curr_fdbk.c ****   * @param  Iqd: Structure that will receive Iq and Id currents.
 548:Src/pwm_curr_fdbk.c ****   * @param  hElAngledpp: Electrical angle.
 549:Src/pwm_curr_fdbk.c ****   */
 550:Src/pwm_curr_fdbk.c **** void PWMC_CalcPhaseCurrentsEst(PWMC_Handle_t *pHandle, qd_t Iqd, int16_t hElAngledpp)
 551:Src/pwm_curr_fdbk.c **** {
 1405              		.loc 2 551 1
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 32
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              	.LCFI53:
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 88B0     		sub	sp, sp, #32
 1415              	.LCFI54:
 1416              		.cfi_def_cfa_offset 40
 1417 0004 00AF     		add	r7, sp, #0
 1418              	.LCFI55:
 1419              		.cfi_def_cfa_register 7
 1420 0006 F860     		str	r0, [r7, #12]
 1421 0008 B960     		str	r1, [r7, #8]
 1422 000a 1346     		mov	r3, r2
 1423 000c FB80     		strh	r3, [r7, #6]	@ movhi
 552:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 553:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 554:Src/pwm_curr_fdbk.c ****   {
 555:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 556:Src/pwm_curr_fdbk.c ****   }
 557:Src/pwm_curr_fdbk.c ****   else
 558:Src/pwm_curr_fdbk.c ****   {
 559:Src/pwm_curr_fdbk.c **** #endif
 560:Src/pwm_curr_fdbk.c ****     qd_t idq_ave;
 561:Src/pwm_curr_fdbk.c ****     alphabeta_t ialpha_beta;
 562:Src/pwm_curr_fdbk.c ****     int32_t temp1, temp2;
 563:Src/pwm_curr_fdbk.c **** 
 564:Src/pwm_curr_fdbk.c ****     idq_ave.q = (int16_t)PWMC_LowPassFilter(Iqd.q, &(pHandle->LPFIqBuf), pHandle->LPFIqd_const);
 1424              		.loc 2 564 48
 1425 000e B7F90830 		ldrsh	r3, [r7, #8]
 1426              		.loc 2 564 26
 1427 0012 1846     		mov	r0, r3
 1428 0014 FB68     		ldr	r3, [r7, #12]
 1429 0016 03F13401 		add	r1, r3, #52
 1430              		.loc 2 564 81
 1431 001a FB68     		ldr	r3, [r7, #12]
 1432 001c B3F96E30 		ldrsh	r3, [r3, #110]
 1433              		.loc 2 564 26
 1434 0020 1A46     		mov	r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 53


 1435 0022 FFF7FEFF 		bl	PWMC_LowPassFilter
 1436 0026 0346     		mov	r3, r0
 1437              		.loc 2 564 17
 1438 0028 1BB2     		sxth	r3, r3
 1439              		.loc 2 564 15
 1440 002a BB82     		strh	r3, [r7, #20]	@ movhi
 565:Src/pwm_curr_fdbk.c ****     idq_ave.d = (int16_t)PWMC_LowPassFilter(Iqd.d, &(pHandle->LPFIdBuf), pHandle->LPFIqd_const);
 1441              		.loc 2 565 48
 1442 002c B7F90A30 		ldrsh	r3, [r7, #10]
 1443              		.loc 2 565 26
 1444 0030 1846     		mov	r0, r3
 1445 0032 FB68     		ldr	r3, [r7, #12]
 1446 0034 03F13801 		add	r1, r3, #56
 1447              		.loc 2 565 81
 1448 0038 FB68     		ldr	r3, [r7, #12]
 1449 003a B3F96E30 		ldrsh	r3, [r3, #110]
 1450              		.loc 2 565 26
 1451 003e 1A46     		mov	r2, r3
 1452 0040 FFF7FEFF 		bl	PWMC_LowPassFilter
 1453 0044 0346     		mov	r3, r0
 1454              		.loc 2 565 17
 1455 0046 1BB2     		sxth	r3, r3
 1456              		.loc 2 565 15
 1457 0048 FB82     		strh	r3, [r7, #22]	@ movhi
 566:Src/pwm_curr_fdbk.c **** 
 567:Src/pwm_curr_fdbk.c ****     ialpha_beta = MCM_Rev_Park(idq_ave, hElAngledpp);
 1458              		.loc 2 567 19
 1459 004a B7F90630 		ldrsh	r3, [r7, #6]
 1460 004e 1946     		mov	r1, r3
 1461 0050 7869     		ldr	r0, [r7, #20]
 1462 0052 FFF7FEFF 		bl	MCM_Rev_Park
 1463 0056 0346     		mov	r3, r0
 1464 0058 3B61     		str	r3, [r7, #16]
 568:Src/pwm_curr_fdbk.c **** 
 569:Src/pwm_curr_fdbk.c ****     /* Reverse Clarke */
 570:Src/pwm_curr_fdbk.c **** 
 571:Src/pwm_curr_fdbk.c ****     /*Ia*/
 572:Src/pwm_curr_fdbk.c ****     pHandle->IaEst = ialpha_beta.alpha;
 1465              		.loc 2 572 33
 1466 005a B7F91020 		ldrsh	r2, [r7, #16]
 1467              		.loc 2 572 20
 1468 005e FB68     		ldr	r3, [r7, #12]
 1469 0060 A3F86820 		strh	r2, [r3, #104]	@ movhi
 573:Src/pwm_curr_fdbk.c **** 
 574:Src/pwm_curr_fdbk.c ****     temp1 = - ialpha_beta.alpha;
 1470              		.loc 2 574 26
 1471 0064 B7F91030 		ldrsh	r3, [r7, #16]
 1472              		.loc 2 574 11
 1473 0068 5B42     		rsbs	r3, r3, #0
 1474 006a FB61     		str	r3, [r7, #28]
 575:Src/pwm_curr_fdbk.c **** #ifndef FULL_MISRA_C_COMPLIANCY_PWM_CURR
 576:Src/pwm_curr_fdbk.c ****     //cstat !MISRAC2012-Rule-1.3_n !ATH-shift-neg !MISRAC2012-Rule-10.1_R6
 577:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * ((int32_t)SQRT3FACTOR >> 15);
 1475              		.loc 2 577 34
 1476 006c B7F91230 		ldrsh	r3, [r7, #18]
 1477              		.loc 2 577 11
 1478 0070 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 54


 578:Src/pwm_curr_fdbk.c **** #else
 579:Src/pwm_curr_fdbk.c ****     temp2 = (int32_t)(ialpha_beta.beta) * (int32_t)SQRT3FACTOR / 32768;
 580:Src/pwm_curr_fdbk.c **** #endif
 581:Src/pwm_curr_fdbk.c **** 
 582:Src/pwm_curr_fdbk.c ****     /* Ib */
 583:Src/pwm_curr_fdbk.c ****     pHandle->IbEst = (int16_t)(temp1 - temp2)/2;
 1479              		.loc 2 583 38
 1480 0072 FB69     		ldr	r3, [r7, #28]
 1481 0074 9AB2     		uxth	r2, r3
 1482 0076 BB69     		ldr	r3, [r7, #24]
 1483 0078 9BB2     		uxth	r3, r3
 1484 007a D31A     		subs	r3, r2, r3
 1485 007c 9BB2     		uxth	r3, r3
 1486              		.loc 2 583 22
 1487 007e 1BB2     		sxth	r3, r3
 1488              		.loc 2 583 20
 1489 0080 DA0F     		lsrs	r2, r3, #31
 1490 0082 1344     		add	r3, r3, r2
 1491 0084 5B10     		asrs	r3, r3, #1
 1492 0086 1AB2     		sxth	r2, r3
 1493 0088 FB68     		ldr	r3, [r7, #12]
 1494 008a A3F86A20 		strh	r2, [r3, #106]	@ movhi
 584:Src/pwm_curr_fdbk.c **** 
 585:Src/pwm_curr_fdbk.c ****     /* Ic */
 586:Src/pwm_curr_fdbk.c ****     pHandle->IcEst = (int16_t)(temp1 + temp2)/2;
 1495              		.loc 2 586 38
 1496 008e FB69     		ldr	r3, [r7, #28]
 1497 0090 9AB2     		uxth	r2, r3
 1498 0092 BB69     		ldr	r3, [r7, #24]
 1499 0094 9BB2     		uxth	r3, r3
 1500 0096 1344     		add	r3, r3, r2
 1501 0098 9BB2     		uxth	r3, r3
 1502              		.loc 2 586 22
 1503 009a 1BB2     		sxth	r3, r3
 1504              		.loc 2 586 20
 1505 009c DA0F     		lsrs	r2, r3, #31
 1506 009e 1344     		add	r3, r3, r2
 1507 00a0 5B10     		asrs	r3, r3, #1
 1508 00a2 1AB2     		sxth	r2, r3
 1509 00a4 FB68     		ldr	r3, [r7, #12]
 1510 00a6 A3F86C20 		strh	r2, [r3, #108]	@ movhi
 587:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 588:Src/pwm_curr_fdbk.c ****   }
 589:Src/pwm_curr_fdbk.c **** #endif
 590:Src/pwm_curr_fdbk.c **** }
 1511              		.loc 2 590 1
 1512 00aa 00BF     		nop
 1513 00ac 2037     		adds	r7, r7, #32
 1514              	.LCFI56:
 1515              		.cfi_def_cfa_offset 8
 1516 00ae BD46     		mov	sp, r7
 1517              	.LCFI57:
 1518              		.cfi_def_cfa_register 13
 1519              		@ sp needed
 1520 00b0 80BD     		pop	{r7, pc}
 1521              		.cfi_endproc
 1522              	.LFE1099:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 55


 1524              		.section	.text.PWMC_TurnOnLowSides,"ax",%progbits
 1525              		.align	1
 1526              		.weak	PWMC_TurnOnLowSides
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1531              	PWMC_TurnOnLowSides:
 1532              	.LFB1100:
 591:Src/pwm_curr_fdbk.c **** 
 592:Src/pwm_curr_fdbk.c **** /**
 593:Src/pwm_curr_fdbk.c ****   * @brief  Switches power stage Low Sides transistors on.
 594:Src/pwm_curr_fdbk.c ****   *
 595:Src/pwm_curr_fdbk.c ****   * This function is meant for charging boot capacitors of the driving
 596:Src/pwm_curr_fdbk.c ****   * section. It has to be called on each motor start-up when using high
 597:Src/pwm_curr_fdbk.c ****   * voltage drivers.
 598:Src/pwm_curr_fdbk.c ****   *
 599:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 600:Src/pwm_curr_fdbk.c ****   * @param  ticks: Timer ticks value to be applied.
 601:Src/pwm_curr_fdbk.c ****   *                Min value: 0 (low sides ON)
 602:Src/pwm_curr_fdbk.c ****   *                Max value: PWM_PERIOD_CYCLES/2 (low sides OFF)
 603:Src/pwm_curr_fdbk.c ****   */
 604:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 605:Src/pwm_curr_fdbk.c **** __weak void PWMC_TurnOnLowSides(PWMC_Handle_t *pHandle, uint32_t ticks)
 606:Src/pwm_curr_fdbk.c **** {
 1533              		.loc 2 606 1
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 8
 1536              		@ frame_needed = 1, uses_anonymous_args = 0
 1537 0000 80B5     		push	{r7, lr}
 1538              	.LCFI58:
 1539              		.cfi_def_cfa_offset 8
 1540              		.cfi_offset 7, -8
 1541              		.cfi_offset 14, -4
 1542 0002 82B0     		sub	sp, sp, #8
 1543              	.LCFI59:
 1544              		.cfi_def_cfa_offset 16
 1545 0004 00AF     		add	r7, sp, #0
 1546              	.LCFI60:
 1547              		.cfi_def_cfa_register 7
 1548 0006 7860     		str	r0, [r7, #4]
 1549 0008 3960     		str	r1, [r7]
 607:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 608:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 609:Src/pwm_curr_fdbk.c ****   {
 610:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 611:Src/pwm_curr_fdbk.c ****   }
 612:Src/pwm_curr_fdbk.c ****   else
 613:Src/pwm_curr_fdbk.c ****   {
 614:Src/pwm_curr_fdbk.c **** #endif
 615:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides(pHandle, ticks);
 1550              		.loc 2 615 12
 1551 000a 7B68     		ldr	r3, [r7, #4]
 1552 000c 1B69     		ldr	r3, [r3, #16]
 1553              		.loc 2 615 5
 1554 000e 3968     		ldr	r1, [r7]
 1555 0010 7868     		ldr	r0, [r7, #4]
 1556 0012 9847     		blx	r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 56


 1557              	.LVL8:
 616:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 617:Src/pwm_curr_fdbk.c ****   }
 618:Src/pwm_curr_fdbk.c **** #endif
 619:Src/pwm_curr_fdbk.c **** }
 1558              		.loc 2 619 1
 1559 0014 00BF     		nop
 1560 0016 0837     		adds	r7, r7, #8
 1561              	.LCFI61:
 1562              		.cfi_def_cfa_offset 8
 1563 0018 BD46     		mov	sp, r7
 1564              	.LCFI62:
 1565              		.cfi_def_cfa_register 13
 1566              		@ sp needed
 1567 001a 80BD     		pop	{r7, pc}
 1568              		.cfi_endproc
 1569              	.LFE1100:
 1571              		.section	.text.PWMC_OCP_Handler,"ax",%progbits
 1572              		.align	1
 1573              		.weak	PWMC_OCP_Handler
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1578              	PWMC_OCP_Handler:
 1579              	.LFB1101:
 620:Src/pwm_curr_fdbk.c **** 
 621:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 622:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 623:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 624:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 625:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 626:Src/pwm_curr_fdbk.c **** #endif
 627:Src/pwm_curr_fdbk.c **** #endif
 628:Src/pwm_curr_fdbk.c **** /*
 629:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overcurrent protection.
 630:Src/pwm_curr_fdbk.c ****   *
 631:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 632:Src/pwm_curr_fdbk.c ****   */
 633:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OCP_Handler(PWMC_Handle_t *pHandle)
 634:Src/pwm_curr_fdbk.c **** {
 1580              		.loc 2 634 1
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              	.LCFI63:
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 7, -8
 1588              		.cfi_offset 14, -4
 1589 0002 84B0     		sub	sp, sp, #16
 1590              	.LCFI64:
 1591              		.cfi_def_cfa_offset 24
 1592 0004 00AF     		add	r7, sp, #0
 1593              	.LCFI65:
 1594              		.cfi_def_cfa_register 7
 1595 0006 7860     		str	r0, [r7, #4]
 635:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 57


 636:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 637:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 638:Src/pwm_curr_fdbk.c ****   {
 639:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 640:Src/pwm_curr_fdbk.c ****   }
 641:Src/pwm_curr_fdbk.c ****   else
 642:Src/pwm_curr_fdbk.c ****   {
 643:Src/pwm_curr_fdbk.c **** #endif
 644:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1596              		.loc 2 644 25
 1597 0008 7B68     		ldr	r3, [r7, #4]
 1598 000a 93F88530 		ldrb	r3, [r3, #133]	@ zero_extendqisi2
 1599              		.loc 2 644 15
 1600 000e 83F00103 		eor	r3, r3, #1
 1601 0012 DBB2     		uxtb	r3, r3
 1602              		.loc 2 644 8
 1603 0014 002B     		cmp	r3, #0
 1604 0016 1FD0     		beq	.L67
 645:Src/pwm_curr_fdbk.c ****     {
 646:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1605              		.loc 2 646 29
 1606 0018 7B68     		ldr	r3, [r7, #4]
 1607 001a 93F87D30 		ldrb	r3, [r3, #125]	@ zero_extendqisi2
 1608              		.loc 2 646 10
 1609 001e 022B     		cmp	r3, #2
 1610 0020 1AD1     		bne	.L67
 647:Src/pwm_curr_fdbk.c ****       {
 648:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 1611              		.loc 2 648 9
 1612 0022 7B68     		ldr	r3, [r7, #4]
 1613 0024 DA6B     		ldr	r2, [r3, #60]
 1614              		.loc 2 648 63
 1615 0026 7B68     		ldr	r3, [r7, #4]
 1616 0028 B3F84830 		ldrh	r3, [r3, #72]
 1617              		.loc 2 648 9
 1618 002c 1946     		mov	r1, r3
 1619 002e 1046     		mov	r0, r2
 1620 0030 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 649:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1621              		.loc 2 649 9
 1622 0034 7B68     		ldr	r3, [r7, #4]
 1623 0036 1A6C     		ldr	r2, [r3, #64]
 1624              		.loc 2 649 63
 1625 0038 7B68     		ldr	r3, [r7, #4]
 1626 003a B3F84A30 		ldrh	r3, [r3, #74]
 1627              		.loc 2 649 9
 1628 003e 1946     		mov	r1, r3
 1629 0040 1046     		mov	r0, r2
 1630 0042 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 650:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1631              		.loc 2 650 9
 1632 0046 7B68     		ldr	r3, [r7, #4]
 1633 0048 5A6C     		ldr	r2, [r3, #68]
 1634              		.loc 2 650 63
 1635 004a 7B68     		ldr	r3, [r7, #4]
 1636 004c B3F84C30 		ldrh	r3, [r3, #76]
 1637              		.loc 2 650 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 58


 1638 0050 1946     		mov	r1, r3
 1639 0052 1046     		mov	r0, r2
 1640 0054 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 1641              	.L67:
 651:Src/pwm_curr_fdbk.c ****       }
 652:Src/pwm_curr_fdbk.c ****       else
 653:Src/pwm_curr_fdbk.c ****       {
 654:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 655:Src/pwm_curr_fdbk.c ****       }
 656:Src/pwm_curr_fdbk.c ****     }
 657:Src/pwm_curr_fdbk.c ****     else
 658:Src/pwm_curr_fdbk.c ****     {
 659:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 660:Src/pwm_curr_fdbk.c ****     }
 661:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = true;
 1642              		.loc 2 661 30
 1643 0058 7B68     		ldr	r3, [r7, #4]
 1644 005a 0122     		movs	r2, #1
 1645 005c 83F88220 		strb	r2, [r3, #130]
 662:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1646              		.loc 2 662 17
 1647 0060 7B68     		ldr	r3, [r7, #4]
 1648 0062 7A33     		adds	r3, r3, #122
 1649 0064 FB60     		str	r3, [r7, #12]
 663:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 664:Src/pwm_curr_fdbk.c ****   }
 665:Src/pwm_curr_fdbk.c **** #endif
 666:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1650              		.loc 2 666 10
 1651 0066 FB68     		ldr	r3, [r7, #12]
 667:Src/pwm_curr_fdbk.c **** }
 1652              		.loc 2 667 1
 1653 0068 1846     		mov	r0, r3
 1654 006a 1037     		adds	r7, r7, #16
 1655              	.LCFI66:
 1656              		.cfi_def_cfa_offset 8
 1657 006c BD46     		mov	sp, r7
 1658              	.LCFI67:
 1659              		.cfi_def_cfa_register 13
 1660              		@ sp needed
 1661 006e 80BD     		pop	{r7, pc}
 1662              		.cfi_endproc
 1663              	.LFE1101:
 1665              		.section	.text.PWMC_DP_Handler,"ax",%progbits
 1666              		.align	1
 1667              		.weak	PWMC_DP_Handler
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1672              	PWMC_DP_Handler:
 1673              	.LFB1102:
 668:Src/pwm_curr_fdbk.c **** 
 669:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 670:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 671:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 672:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 673:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 59


 674:Src/pwm_curr_fdbk.c **** #endif
 675:Src/pwm_curr_fdbk.c **** #endif
 676:Src/pwm_curr_fdbk.c **** /*
 677:Src/pwm_curr_fdbk.c ****   * @brief  manages driver protection.
 678:Src/pwm_curr_fdbk.c ****   *
 679:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 680:Src/pwm_curr_fdbk.c ****   */
 681:Src/pwm_curr_fdbk.c **** __weak void *PWMC_DP_Handler(PWMC_Handle_t *pHandle)
 682:Src/pwm_curr_fdbk.c **** {
 1674              		.loc 2 682 1
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 16
 1677              		@ frame_needed = 1, uses_anonymous_args = 0
 1678 0000 80B5     		push	{r7, lr}
 1679              	.LCFI68:
 1680              		.cfi_def_cfa_offset 8
 1681              		.cfi_offset 7, -8
 1682              		.cfi_offset 14, -4
 1683 0002 84B0     		sub	sp, sp, #16
 1684              	.LCFI69:
 1685              		.cfi_def_cfa_offset 24
 1686 0004 00AF     		add	r7, sp, #0
 1687              	.LCFI70:
 1688              		.cfi_def_cfa_register 7
 1689 0006 7860     		str	r0, [r7, #4]
 683:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 684:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 685:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 686:Src/pwm_curr_fdbk.c ****   {
 687:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 688:Src/pwm_curr_fdbk.c ****   }
 689:Src/pwm_curr_fdbk.c ****   else
 690:Src/pwm_curr_fdbk.c ****   {
 691:Src/pwm_curr_fdbk.c **** #endif
 692:Src/pwm_curr_fdbk.c ****     if (false == pHandle->BrakeActionLock)
 1690              		.loc 2 692 25
 1691 0008 7B68     		ldr	r3, [r7, #4]
 1692 000a 93F88530 		ldrb	r3, [r3, #133]	@ zero_extendqisi2
 1693              		.loc 2 692 15
 1694 000e 83F00103 		eor	r3, r3, #1
 1695 0012 DBB2     		uxtb	r3, r3
 1696              		.loc 2 692 8
 1697 0014 002B     		cmp	r3, #0
 1698 0016 1FD0     		beq	.L70
 693:Src/pwm_curr_fdbk.c ****     {
 694:Src/pwm_curr_fdbk.c ****       if (ES_GPIO == pHandle->LowSideOutputs)
 1699              		.loc 2 694 29
 1700 0018 7B68     		ldr	r3, [r7, #4]
 1701 001a 93F87D30 		ldrb	r3, [r3, #125]	@ zero_extendqisi2
 1702              		.loc 2 694 10
 1703 001e 022B     		cmp	r3, #2
 1704 0020 1AD1     		bne	.L70
 695:Src/pwm_curr_fdbk.c ****       {
 696:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_u_port, pHandle->pwm_en_u_pin);
 1705              		.loc 2 696 9
 1706 0022 7B68     		ldr	r3, [r7, #4]
 1707 0024 DA6B     		ldr	r2, [r3, #60]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 60


 1708              		.loc 2 696 63
 1709 0026 7B68     		ldr	r3, [r7, #4]
 1710 0028 B3F84830 		ldrh	r3, [r3, #72]
 1711              		.loc 2 696 9
 1712 002c 1946     		mov	r1, r3
 1713 002e 1046     		mov	r0, r2
 1714 0030 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 697:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_v_port, pHandle->pwm_en_v_pin);
 1715              		.loc 2 697 9
 1716 0034 7B68     		ldr	r3, [r7, #4]
 1717 0036 1A6C     		ldr	r2, [r3, #64]
 1718              		.loc 2 697 63
 1719 0038 7B68     		ldr	r3, [r7, #4]
 1720 003a B3F84A30 		ldrh	r3, [r3, #74]
 1721              		.loc 2 697 9
 1722 003e 1946     		mov	r1, r3
 1723 0040 1046     		mov	r0, r2
 1724 0042 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 698:Src/pwm_curr_fdbk.c ****         LL_GPIO_ResetOutputPin(pHandle->pwm_en_w_port, pHandle->pwm_en_w_pin);
 1725              		.loc 2 698 9
 1726 0046 7B68     		ldr	r3, [r7, #4]
 1727 0048 5A6C     		ldr	r2, [r3, #68]
 1728              		.loc 2 698 63
 1729 004a 7B68     		ldr	r3, [r7, #4]
 1730 004c B3F84C30 		ldrh	r3, [r3, #76]
 1731              		.loc 2 698 9
 1732 0050 1946     		mov	r1, r3
 1733 0052 1046     		mov	r0, r2
 1734 0054 FFF7FEFF 		bl	LL_GPIO_ResetOutputPin
 1735              	.L70:
 699:Src/pwm_curr_fdbk.c ****       }
 700:Src/pwm_curr_fdbk.c ****       else
 701:Src/pwm_curr_fdbk.c ****       {
 702:Src/pwm_curr_fdbk.c ****         /* Nothing to do */
 703:Src/pwm_curr_fdbk.c ****       }
 704:Src/pwm_curr_fdbk.c ****     }
 705:Src/pwm_curr_fdbk.c ****     else
 706:Src/pwm_curr_fdbk.c ****     {
 707:Src/pwm_curr_fdbk.c ****       /* Nothing to do */
 708:Src/pwm_curr_fdbk.c ****     }
 709:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = true;
 1736              		.loc 2 709 35
 1737 0058 7B68     		ldr	r3, [r7, #4]
 1738 005a 0122     		movs	r2, #1
 1739 005c 83F88420 		strb	r2, [r3, #132]
 710:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1740              		.loc 2 710 17
 1741 0060 7B68     		ldr	r3, [r7, #4]
 1742 0062 7A33     		adds	r3, r3, #122
 1743 0064 FB60     		str	r3, [r7, #12]
 711:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 712:Src/pwm_curr_fdbk.c ****   }
 713:Src/pwm_curr_fdbk.c **** #endif
 714:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1744              		.loc 2 714 10
 1745 0066 FB68     		ldr	r3, [r7, #12]
 715:Src/pwm_curr_fdbk.c **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 61


 1746              		.loc 2 715 1
 1747 0068 1846     		mov	r0, r3
 1748 006a 1037     		adds	r7, r7, #16
 1749              	.LCFI71:
 1750              		.cfi_def_cfa_offset 8
 1751 006c BD46     		mov	sp, r7
 1752              	.LCFI72:
 1753              		.cfi_def_cfa_register 13
 1754              		@ sp needed
 1755 006e 80BD     		pop	{r7, pc}
 1756              		.cfi_endproc
 1757              	.LFE1102:
 1759              		.section	.text.PWMC_OVP_Handler,"ax",%progbits
 1760              		.align	1
 1761              		.weak	PWMC_OVP_Handler
 1762              		.syntax unified
 1763              		.thumb
 1764              		.thumb_func
 1766              	PWMC_OVP_Handler:
 1767              	.LFB1103:
 716:Src/pwm_curr_fdbk.c **** 
 717:Src/pwm_curr_fdbk.c **** #if defined (CCMRAM)
 718:Src/pwm_curr_fdbk.c **** #if defined (__ICCARM__)
 719:Src/pwm_curr_fdbk.c **** #pragma location = ".ccmram"
 720:Src/pwm_curr_fdbk.c **** #elif defined (__CC_ARM) || defined(__GNUC__)
 721:Src/pwm_curr_fdbk.c **** __attribute__((section(".ccmram")))
 722:Src/pwm_curr_fdbk.c **** #endif
 723:Src/pwm_curr_fdbk.c **** #endif
 724:Src/pwm_curr_fdbk.c **** /*
 725:Src/pwm_curr_fdbk.c ****   * @brief  Manages HW overvoltage protection.
 726:Src/pwm_curr_fdbk.c ****   *
 727:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWM component.
 728:Src/pwm_curr_fdbk.c ****   *         TIMx: timer used for PWM generation
 729:Src/pwm_curr_fdbk.c ****   */
 730:Src/pwm_curr_fdbk.c **** __weak void *PWMC_OVP_Handler(PWMC_Handle_t *pHandle, TIM_TypeDef *TIMx)
 731:Src/pwm_curr_fdbk.c **** {
 1768              		.loc 2 731 1
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 16
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772              		@ link register save eliminated.
 1773 0000 80B4     		push	{r7}
 1774              	.LCFI73:
 1775              		.cfi_def_cfa_offset 4
 1776              		.cfi_offset 7, -4
 1777 0002 85B0     		sub	sp, sp, #20
 1778              	.LCFI74:
 1779              		.cfi_def_cfa_offset 24
 1780 0004 00AF     		add	r7, sp, #0
 1781              	.LCFI75:
 1782              		.cfi_def_cfa_register 7
 1783 0006 7860     		str	r0, [r7, #4]
 1784 0008 3960     		str	r1, [r7]
 732:Src/pwm_curr_fdbk.c ****   void *tempPointer; //cstat !MISRAC2012-Rule-8.13
 733:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 734:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
 735:Src/pwm_curr_fdbk.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 62


 736:Src/pwm_curr_fdbk.c ****     tempPointer = MC_NULL;
 737:Src/pwm_curr_fdbk.c ****   }
 738:Src/pwm_curr_fdbk.c ****   else
 739:Src/pwm_curr_fdbk.c ****   {
 740:Src/pwm_curr_fdbk.c **** #endif
 741:Src/pwm_curr_fdbk.c ****     TIMx->BDTR |= LL_TIM_OSSI_ENABLE;
 1785              		.loc 2 741 16
 1786 000a 3B68     		ldr	r3, [r7]
 1787 000c 5B6C     		ldr	r3, [r3, #68]
 1788 000e 43F48062 		orr	r2, r3, #1024
 1789 0012 3B68     		ldr	r3, [r7]
 1790 0014 5A64     		str	r2, [r3, #68]
 742:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = true;
 1791              		.loc 2 742 30
 1792 0016 7B68     		ldr	r3, [r7, #4]
 1793 0018 0122     		movs	r2, #1
 1794 001a 83F88320 		strb	r2, [r3, #131]
 743:Src/pwm_curr_fdbk.c ****     pHandle->BrakeActionLock = true;
 1795              		.loc 2 743 30
 1796 001e 7B68     		ldr	r3, [r7, #4]
 1797 0020 0122     		movs	r2, #1
 1798 0022 83F88520 		strb	r2, [r3, #133]
 744:Src/pwm_curr_fdbk.c ****     tempPointer = &(pHandle->Motor);
 1799              		.loc 2 744 17
 1800 0026 7B68     		ldr	r3, [r7, #4]
 1801 0028 7A33     		adds	r3, r3, #122
 1802 002a FB60     		str	r3, [r7, #12]
 745:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 746:Src/pwm_curr_fdbk.c ****   }
 747:Src/pwm_curr_fdbk.c **** #endif
 748:Src/pwm_curr_fdbk.c ****   return (tempPointer);
 1803              		.loc 2 748 10
 1804 002c FB68     		ldr	r3, [r7, #12]
 749:Src/pwm_curr_fdbk.c **** }
 1805              		.loc 2 749 1
 1806 002e 1846     		mov	r0, r3
 1807 0030 1437     		adds	r7, r7, #20
 1808              	.LCFI76:
 1809              		.cfi_def_cfa_offset 4
 1810 0032 BD46     		mov	sp, r7
 1811              	.LCFI77:
 1812              		.cfi_def_cfa_register 13
 1813              		@ sp needed
 1814 0034 5DF8047B 		ldr	r7, [sp], #4
 1815              	.LCFI78:
 1816              		.cfi_restore 7
 1817              		.cfi_def_cfa_offset 0
 1818 0038 7047     		bx	lr
 1819              		.cfi_endproc
 1820              	.LFE1103:
 1822              		.section	.text.PWMC_IsFaultOccurred,"ax",%progbits
 1823              		.align	1
 1824              		.weak	PWMC_IsFaultOccurred
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1829              	PWMC_IsFaultOccurred:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 63


 1830              	.LFB1104:
 750:Src/pwm_curr_fdbk.c **** 
 751:Src/pwm_curr_fdbk.c **** /*
 752:Src/pwm_curr_fdbk.c ****   * @brief  Checks if an overcurrent occurred since last call.
 753:Src/pwm_curr_fdbk.c ****   *
 754:Src/pwm_curr_fdbk.c ****   * @param  pHdl: Handler of the current instance of the PWM component.
 755:Src/pwm_curr_fdbk.c ****   * @retval uint16_t Returns #MC_OVER_CURR if an overcurrent has been
 756:Src/pwm_curr_fdbk.c ****   *                  detected since last method call, #MC_NO_FAULTS otherwise.
 757:Src/pwm_curr_fdbk.c ****   */
 758:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_IsFaultOccurred(PWMC_Handle_t *pHandle)
 759:Src/pwm_curr_fdbk.c **** {
 1831              		.loc 2 759 1
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 16
 1834              		@ frame_needed = 1, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836 0000 80B4     		push	{r7}
 1837              	.LCFI79:
 1838              		.cfi_def_cfa_offset 4
 1839              		.cfi_offset 7, -4
 1840 0002 85B0     		sub	sp, sp, #20
 1841              	.LCFI80:
 1842              		.cfi_def_cfa_offset 24
 1843 0004 00AF     		add	r7, sp, #0
 1844              	.LCFI81:
 1845              		.cfi_def_cfa_register 7
 1846 0006 7860     		str	r0, [r7, #4]
 760:Src/pwm_curr_fdbk.c ****   uint16_t retVal = MC_NO_FAULTS;
 1847              		.loc 2 760 12
 1848 0008 0023     		movs	r3, #0
 1849 000a FB81     		strh	r3, [r7, #14]	@ movhi
 761:Src/pwm_curr_fdbk.c **** 
 762:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverVoltageFlag)
 1850              		.loc 2 762 22
 1851 000c 7B68     		ldr	r3, [r7, #4]
 1852 000e 93F88330 		ldrb	r3, [r3, #131]	@ zero_extendqisi2
 1853              		.loc 2 762 6
 1854 0012 002B     		cmp	r3, #0
 1855 0014 05D0     		beq	.L75
 763:Src/pwm_curr_fdbk.c ****   {
 764:Src/pwm_curr_fdbk.c ****     retVal = MC_OVER_VOLT;
 1856              		.loc 2 764 12
 1857 0016 0223     		movs	r3, #2
 1858 0018 FB81     		strh	r3, [r7, #14]	@ movhi
 765:Src/pwm_curr_fdbk.c ****     pHandle->OverVoltageFlag = false;
 1859              		.loc 2 765 30
 1860 001a 7B68     		ldr	r3, [r7, #4]
 1861 001c 0022     		movs	r2, #0
 1862 001e 83F88320 		strb	r2, [r3, #131]
 1863              	.L75:
 766:Src/pwm_curr_fdbk.c ****   }
 767:Src/pwm_curr_fdbk.c ****   else
 768:Src/pwm_curr_fdbk.c ****   {
 769:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 770:Src/pwm_curr_fdbk.c ****   }
 771:Src/pwm_curr_fdbk.c **** 
 772:Src/pwm_curr_fdbk.c ****   if (true == pHandle->OverCurrentFlag)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 64


 1864              		.loc 2 772 22
 1865 0022 7B68     		ldr	r3, [r7, #4]
 1866 0024 93F88230 		ldrb	r3, [r3, #130]	@ zero_extendqisi2
 1867              		.loc 2 772 6
 1868 0028 002B     		cmp	r3, #0
 1869 002a 07D0     		beq	.L76
 773:Src/pwm_curr_fdbk.c ****   {
 774:Src/pwm_curr_fdbk.c ****     retVal |= MC_OVER_CURR;
 1870              		.loc 2 774 12
 1871 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1872 002e 43F04003 		orr	r3, r3, #64
 1873 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 775:Src/pwm_curr_fdbk.c ****     pHandle->OverCurrentFlag = false;
 1874              		.loc 2 775 30
 1875 0034 7B68     		ldr	r3, [r7, #4]
 1876 0036 0022     		movs	r2, #0
 1877 0038 83F88220 		strb	r2, [r3, #130]
 1878              	.L76:
 776:Src/pwm_curr_fdbk.c ****   }
 777:Src/pwm_curr_fdbk.c ****   else
 778:Src/pwm_curr_fdbk.c ****   {
 779:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 780:Src/pwm_curr_fdbk.c ****   }
 781:Src/pwm_curr_fdbk.c **** 
 782:Src/pwm_curr_fdbk.c ****   if (true == pHandle->driverProtectionFlag)
 1879              		.loc 2 782 22
 1880 003c 7B68     		ldr	r3, [r7, #4]
 1881 003e 93F88430 		ldrb	r3, [r3, #132]	@ zero_extendqisi2
 1882              		.loc 2 782 6
 1883 0042 002B     		cmp	r3, #0
 1884 0044 07D0     		beq	.L77
 783:Src/pwm_curr_fdbk.c ****   {
 784:Src/pwm_curr_fdbk.c ****     retVal |= MC_DP_FAULT;
 1885              		.loc 2 784 12
 1886 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1887 0048 43F48063 		orr	r3, r3, #1024
 1888 004c FB81     		strh	r3, [r7, #14]	@ movhi
 785:Src/pwm_curr_fdbk.c ****     pHandle->driverProtectionFlag = false;
 1889              		.loc 2 785 35
 1890 004e 7B68     		ldr	r3, [r7, #4]
 1891 0050 0022     		movs	r2, #0
 1892 0052 83F88420 		strb	r2, [r3, #132]
 1893              	.L77:
 786:Src/pwm_curr_fdbk.c ****   }
 787:Src/pwm_curr_fdbk.c ****   else
 788:Src/pwm_curr_fdbk.c ****   {
 789:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 790:Src/pwm_curr_fdbk.c ****   }
 791:Src/pwm_curr_fdbk.c **** 
 792:Src/pwm_curr_fdbk.c ****   return (retVal);
 1894              		.loc 2 792 10
 1895 0056 FB89     		ldrh	r3, [r7, #14]
 793:Src/pwm_curr_fdbk.c **** }
 1896              		.loc 2 793 1
 1897 0058 1846     		mov	r0, r3
 1898 005a 1437     		adds	r7, r7, #20
 1899              	.LCFI82:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 65


 1900              		.cfi_def_cfa_offset 4
 1901 005c BD46     		mov	sp, r7
 1902              	.LCFI83:
 1903              		.cfi_def_cfa_register 13
 1904              		@ sp needed
 1905 005e 5DF8047B 		ldr	r7, [sp], #4
 1906              	.LCFI84:
 1907              		.cfi_restore 7
 1908              		.cfi_def_cfa_offset 0
 1909 0062 7047     		bx	lr
 1910              		.cfi_endproc
 1911              	.LFE1104:
 1913              		.section	.text.PWMC_OCPSetReferenceVoltage,"ax",%progbits
 1914              		.align	1
 1915              		.weak	PWMC_OCPSetReferenceVoltage
 1916              		.syntax unified
 1917              		.thumb
 1918              		.thumb_func
 1920              	PWMC_OCPSetReferenceVoltage:
 1921              	.LFB1105:
 794:Src/pwm_curr_fdbk.c **** 
 795:Src/pwm_curr_fdbk.c **** /**
 796:Src/pwm_curr_fdbk.c ****   * @brief  Sets the over current threshold through the DAC reference voltage.
 797:Src/pwm_curr_fdbk.c ****   *
 798:Src/pwm_curr_fdbk.c ****   * @param  pHandle:  Handler of the current instance of the PWM component.
 799:Src/pwm_curr_fdbk.c ****   * @param  hDACVref: Value of DAC reference voltage to be applied expressed as a 16bit unsigned in
 800:Src/pwm_curr_fdbk.c ****   *					  Min value: 0 (0 V)
 801:Src/pwm_curr_fdbk.c ****   *                	  Max value: 65536 (VDD_DAC)
 802:Src/pwm_curr_fdbk.c ****   */
 803:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 804:Src/pwm_curr_fdbk.c **** __weak void PWMC_OCPSetReferenceVoltage(PWMC_Handle_t *pHandle, uint16_t hDACVref)
 805:Src/pwm_curr_fdbk.c **** {
 1922              		.loc 2 805 1
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 8
 1925              		@ frame_needed = 1, uses_anonymous_args = 0
 1926 0000 80B5     		push	{r7, lr}
 1927              	.LCFI85:
 1928              		.cfi_def_cfa_offset 8
 1929              		.cfi_offset 7, -8
 1930              		.cfi_offset 14, -4
 1931 0002 82B0     		sub	sp, sp, #8
 1932              	.LCFI86:
 1933              		.cfi_def_cfa_offset 16
 1934 0004 00AF     		add	r7, sp, #0
 1935              	.LCFI87:
 1936              		.cfi_def_cfa_register 7
 1937 0006 7860     		str	r0, [r7, #4]
 1938 0008 0B46     		mov	r3, r1
 1939 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 806:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 807:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || (MC_NULL == pHandle->pFctOCPSetReferenceVoltage))
 808:Src/pwm_curr_fdbk.c ****   {
 809:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 810:Src/pwm_curr_fdbk.c ****   }
 811:Src/pwm_curr_fdbk.c ****   else
 812:Src/pwm_curr_fdbk.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 66


 813:Src/pwm_curr_fdbk.c **** #endif
 814:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage(pHandle, hDACVref);
 1940              		.loc 2 814 12
 1941 000c 7B68     		ldr	r3, [r7, #4]
 1942 000e 9B69     		ldr	r3, [r3, #24]
 1943              		.loc 2 814 5
 1944 0010 7A88     		ldrh	r2, [r7, #2]
 1945 0012 1146     		mov	r1, r2
 1946 0014 7868     		ldr	r0, [r7, #4]
 1947 0016 9847     		blx	r3
 1948              	.LVL9:
 815:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 816:Src/pwm_curr_fdbk.c ****   }
 817:Src/pwm_curr_fdbk.c **** #endif
 818:Src/pwm_curr_fdbk.c **** }
 1949              		.loc 2 818 1
 1950 0018 00BF     		nop
 1951 001a 0837     		adds	r7, r7, #8
 1952              	.LCFI88:
 1953              		.cfi_def_cfa_offset 8
 1954 001c BD46     		mov	sp, r7
 1955              	.LCFI89:
 1956              		.cfi_def_cfa_register 13
 1957              		@ sp needed
 1958 001e 80BD     		pop	{r7, pc}
 1959              		.cfi_endproc
 1960              	.LFE1105:
 1962              		.section	.text.PWMC_GetTurnOnLowSidesAction,"ax",%progbits
 1963              		.align	1
 1964              		.weak	PWMC_GetTurnOnLowSidesAction
 1965              		.syntax unified
 1966              		.thumb
 1967              		.thumb_func
 1969              	PWMC_GetTurnOnLowSidesAction:
 1970              	.LFB1106:
 819:Src/pwm_curr_fdbk.c **** 
 820:Src/pwm_curr_fdbk.c **** /**
 821:Src/pwm_curr_fdbk.c ****   * @brief  Retrieves the satus of TurnOnLowSides action.
 822:Src/pwm_curr_fdbk.c ****   *
 823:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 824:Src/pwm_curr_fdbk.c ****   * @retval bool State of TurnOnLowSides action:
 825:Src/pwm_curr_fdbk.c ****   *         **true** if TurnOnLowSides action is active, **false** otherwise.
 826:Src/pwm_curr_fdbk.c ****   */
 827:Src/pwm_curr_fdbk.c **** __weak bool PWMC_GetTurnOnLowSidesAction(const PWMC_Handle_t *pHandle)
 828:Src/pwm_curr_fdbk.c **** {
 1971              		.loc 2 828 1
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 8
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975              		@ link register save eliminated.
 1976 0000 80B4     		push	{r7}
 1977              	.LCFI90:
 1978              		.cfi_def_cfa_offset 4
 1979              		.cfi_offset 7, -4
 1980 0002 83B0     		sub	sp, sp, #12
 1981              	.LCFI91:
 1982              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 67


 1983 0004 00AF     		add	r7, sp, #0
 1984              	.LCFI92:
 1985              		.cfi_def_cfa_register 7
 1986 0006 7860     		str	r0, [r7, #4]
 829:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 830:Src/pwm_curr_fdbk.c ****   return ((MC_NULL == pHandle) ? false : pHandle->TurnOnLowSidesAction);
 831:Src/pwm_curr_fdbk.c **** #else
 832:Src/pwm_curr_fdbk.c ****   return (pHandle->TurnOnLowSidesAction);
 1987              		.loc 2 832 18
 1988 0008 7B68     		ldr	r3, [r7, #4]
 1989 000a 93F87E30 		ldrb	r3, [r3, #126]	@ zero_extendqisi2
 833:Src/pwm_curr_fdbk.c **** #endif
 834:Src/pwm_curr_fdbk.c **** }
 1990              		.loc 2 834 1
 1991 000e 1846     		mov	r0, r3
 1992 0010 0C37     		adds	r7, r7, #12
 1993              	.LCFI93:
 1994              		.cfi_def_cfa_offset 4
 1995 0012 BD46     		mov	sp, r7
 1996              	.LCFI94:
 1997              		.cfi_def_cfa_register 13
 1998              		@ sp needed
 1999 0014 5DF8047B 		ldr	r7, [sp], #4
 2000              	.LCFI95:
 2001              		.cfi_restore 7
 2002              		.cfi_def_cfa_offset 0
 2003 0018 7047     		bx	lr
 2004              		.cfi_endproc
 2005              	.LFE1106:
 2007              		.section	.text.PWMC_DPWM_ModeEnable,"ax",%progbits
 2008              		.align	1
 2009              		.weak	PWMC_DPWM_ModeEnable
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2014              	PWMC_DPWM_ModeEnable:
 2015              	.LFB1107:
 835:Src/pwm_curr_fdbk.c **** 
 836:Src/pwm_curr_fdbk.c **** /** @brief Enables Discontinuous PWM mode using the @p pHandle PWMC component.
 837:Src/pwm_curr_fdbk.c ****   *
 838:Src/pwm_curr_fdbk.c ****   */
 839:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeEnable(PWMC_Handle_t *pHandle)
 840:Src/pwm_curr_fdbk.c **** {
 2016              		.loc 2 840 1
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 8
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020              		@ link register save eliminated.
 2021 0000 80B4     		push	{r7}
 2022              	.LCFI96:
 2023              		.cfi_def_cfa_offset 4
 2024              		.cfi_offset 7, -4
 2025 0002 83B0     		sub	sp, sp, #12
 2026              	.LCFI97:
 2027              		.cfi_def_cfa_offset 16
 2028 0004 00AF     		add	r7, sp, #0
 2029              	.LCFI98:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 68


 2030              		.cfi_def_cfa_register 7
 2031 0006 7860     		str	r0, [r7, #4]
 841:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 842:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 843:Src/pwm_curr_fdbk.c ****   {
 844:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 845:Src/pwm_curr_fdbk.c ****   }
 846:Src/pwm_curr_fdbk.c ****   else
 847:Src/pwm_curr_fdbk.c ****   {
 848:Src/pwm_curr_fdbk.c **** #endif
 849:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = true;
 2032              		.loc 2 849 24
 2033 0008 7B68     		ldr	r3, [r7, #4]
 2034 000a 0122     		movs	r2, #1
 2035 000c 83F87F20 		strb	r2, [r3, #127]
 850:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 851:Src/pwm_curr_fdbk.c ****   }
 852:Src/pwm_curr_fdbk.c **** #endif
 853:Src/pwm_curr_fdbk.c **** }
 2036              		.loc 2 853 1
 2037 0010 00BF     		nop
 2038 0012 0C37     		adds	r7, r7, #12
 2039              	.LCFI99:
 2040              		.cfi_def_cfa_offset 4
 2041 0014 BD46     		mov	sp, r7
 2042              	.LCFI100:
 2043              		.cfi_def_cfa_register 13
 2044              		@ sp needed
 2045 0016 5DF8047B 		ldr	r7, [sp], #4
 2046              	.LCFI101:
 2047              		.cfi_restore 7
 2048              		.cfi_def_cfa_offset 0
 2049 001a 7047     		bx	lr
 2050              		.cfi_endproc
 2051              	.LFE1107:
 2053              		.section	.text.PWMC_DPWM_ModeDisable,"ax",%progbits
 2054              		.align	1
 2055              		.weak	PWMC_DPWM_ModeDisable
 2056              		.syntax unified
 2057              		.thumb
 2058              		.thumb_func
 2060              	PWMC_DPWM_ModeDisable:
 2061              	.LFB1108:
 854:Src/pwm_curr_fdbk.c **** 
 855:Src/pwm_curr_fdbk.c **** /** @brief Disables Discontinuous PWM mode using the @p pHandle PWMC component.
 856:Src/pwm_curr_fdbk.c ****   *
 857:Src/pwm_curr_fdbk.c ****   */
 858:Src/pwm_curr_fdbk.c **** __weak void PWMC_DPWM_ModeDisable(PWMC_Handle_t *pHandle)
 859:Src/pwm_curr_fdbk.c **** {
 2062              		.loc 2 859 1
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 8
 2065              		@ frame_needed = 1, uses_anonymous_args = 0
 2066              		@ link register save eliminated.
 2067 0000 80B4     		push	{r7}
 2068              	.LCFI102:
 2069              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 69


 2070              		.cfi_offset 7, -4
 2071 0002 83B0     		sub	sp, sp, #12
 2072              	.LCFI103:
 2073              		.cfi_def_cfa_offset 16
 2074 0004 00AF     		add	r7, sp, #0
 2075              	.LCFI104:
 2076              		.cfi_def_cfa_register 7
 2077 0006 7860     		str	r0, [r7, #4]
 860:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 861:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 862:Src/pwm_curr_fdbk.c ****   {
 863:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 864:Src/pwm_curr_fdbk.c ****   }
 865:Src/pwm_curr_fdbk.c ****   else
 866:Src/pwm_curr_fdbk.c ****   {
 867:Src/pwm_curr_fdbk.c **** #endif
 868:Src/pwm_curr_fdbk.c ****     pHandle->DPWM_Mode = false;
 2078              		.loc 2 868 24
 2079 0008 7B68     		ldr	r3, [r7, #4]
 2080 000a 0022     		movs	r2, #0
 2081 000c 83F87F20 		strb	r2, [r3, #127]
 869:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 870:Src/pwm_curr_fdbk.c ****   }
 871:Src/pwm_curr_fdbk.c **** #endif
 872:Src/pwm_curr_fdbk.c **** }
 2082              		.loc 2 872 1
 2083 0010 00BF     		nop
 2084 0012 0C37     		adds	r7, r7, #12
 2085              	.LCFI105:
 2086              		.cfi_def_cfa_offset 4
 2087 0014 BD46     		mov	sp, r7
 2088              	.LCFI106:
 2089              		.cfi_def_cfa_register 13
 2090              		@ sp needed
 2091 0016 5DF8047B 		ldr	r7, [sp], #4
 2092              	.LCFI107:
 2093              		.cfi_restore 7
 2094              		.cfi_def_cfa_offset 0
 2095 001a 7047     		bx	lr
 2096              		.cfi_endproc
 2097              	.LFE1108:
 2099              		.section	.text.PWMC_GetDPWM_Mode,"ax",%progbits
 2100              		.align	1
 2101              		.weak	PWMC_GetDPWM_Mode
 2102              		.syntax unified
 2103              		.thumb
 2104              		.thumb_func
 2106              	PWMC_GetDPWM_Mode:
 2107              	.LFB1109:
 873:Src/pwm_curr_fdbk.c **** 
 874:Src/pwm_curr_fdbk.c **** /** @brief  Returns the status of the Discontinuous PWM Mode stored in the @p pHandle PWMC componen
 875:Src/pwm_curr_fdbk.c ****   *
 876:Src/pwm_curr_fdbk.c ****   * @retval true if DPWM Mode is enabled, **false** otherwise.
 877:Src/pwm_curr_fdbk.c ****   */
 878:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13
 879:Src/pwm_curr_fdbk.c **** __weak bool PWMC_GetDPWM_Mode(PWMC_Handle_t *pHandle)
 880:Src/pwm_curr_fdbk.c **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 70


 2108              		.loc 2 880 1
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 8
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112              		@ link register save eliminated.
 2113 0000 80B4     		push	{r7}
 2114              	.LCFI108:
 2115              		.cfi_def_cfa_offset 4
 2116              		.cfi_offset 7, -4
 2117 0002 83B0     		sub	sp, sp, #12
 2118              	.LCFI109:
 2119              		.cfi_def_cfa_offset 16
 2120 0004 00AF     		add	r7, sp, #0
 2121              	.LCFI110:
 2122              		.cfi_def_cfa_register 7
 2123 0006 7860     		str	r0, [r7, #4]
 881:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 882:Src/pwm_curr_fdbk.c ****   return ((MC_NULL == pHandle) ? false : pHandle->DPWM_Mode);
 883:Src/pwm_curr_fdbk.c **** #else
 884:Src/pwm_curr_fdbk.c ****   return (pHandle->DPWM_Mode);
 2124              		.loc 2 884 18
 2125 0008 7B68     		ldr	r3, [r7, #4]
 2126 000a 93F87F30 		ldrb	r3, [r3, #127]	@ zero_extendqisi2
 885:Src/pwm_curr_fdbk.c **** #endif
 886:Src/pwm_curr_fdbk.c **** }
 2127              		.loc 2 886 1
 2128 000e 1846     		mov	r0, r3
 2129 0010 0C37     		adds	r7, r7, #12
 2130              	.LCFI111:
 2131              		.cfi_def_cfa_offset 4
 2132 0012 BD46     		mov	sp, r7
 2133              	.LCFI112:
 2134              		.cfi_def_cfa_register 13
 2135              		@ sp needed
 2136 0014 5DF8047B 		ldr	r7, [sp], #4
 2137              	.LCFI113:
 2138              		.cfi_restore 7
 2139              		.cfi_def_cfa_offset 0
 2140 0018 7047     		bx	lr
 2141              		.cfi_endproc
 2142              	.LFE1109:
 2144              		.section	.text.PWMC_RLDetectionModeEnable,"ax",%progbits
 2145              		.align	1
 2146              		.weak	PWMC_RLDetectionModeEnable
 2147              		.syntax unified
 2148              		.thumb
 2149              		.thumb_func
 2151              	PWMC_RLDetectionModeEnable:
 2152              	.LFB1110:
 887:Src/pwm_curr_fdbk.c **** 
 888:Src/pwm_curr_fdbk.c **** /** @brief  Enables the RL detection mode by calling the function in @p pHandle PWMC component.
 889:Src/pwm_curr_fdbk.c ****   *
 890:Src/pwm_curr_fdbk.c ****   */
 891:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 892:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeEnable(PWMC_Handle_t *pHandle)
 893:Src/pwm_curr_fdbk.c **** {
 2153              		.loc 2 893 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 71


 2154              		.cfi_startproc
 2155              		@ args = 0, pretend = 0, frame = 8
 2156              		@ frame_needed = 1, uses_anonymous_args = 0
 2157 0000 80B5     		push	{r7, lr}
 2158              	.LCFI114:
 2159              		.cfi_def_cfa_offset 8
 2160              		.cfi_offset 7, -8
 2161              		.cfi_offset 14, -4
 2162 0002 82B0     		sub	sp, sp, #8
 2163              	.LCFI115:
 2164              		.cfi_def_cfa_offset 16
 2165 0004 00AF     		add	r7, sp, #0
 2166              	.LCFI116:
 2167              		.cfi_def_cfa_register 7
 2168 0006 7860     		str	r0, [r7, #4]
 894:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 895:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeEnable))
 896:Src/pwm_curr_fdbk.c ****   {
 897:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 898:Src/pwm_curr_fdbk.c ****   }
 899:Src/pwm_curr_fdbk.c ****   else
 900:Src/pwm_curr_fdbk.c ****   {
 901:Src/pwm_curr_fdbk.c **** #endif
 902:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable(pHandle);
 2169              		.loc 2 902 12
 2170 0008 7B68     		ldr	r3, [r7, #4]
 2171 000a DB69     		ldr	r3, [r3, #28]
 2172              		.loc 2 902 5
 2173 000c 7868     		ldr	r0, [r7, #4]
 2174 000e 9847     		blx	r3
 2175              	.LVL10:
 903:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 904:Src/pwm_curr_fdbk.c ****   }
 905:Src/pwm_curr_fdbk.c **** #endif
 906:Src/pwm_curr_fdbk.c **** }
 2176              		.loc 2 906 1
 2177 0010 00BF     		nop
 2178 0012 0837     		adds	r7, r7, #8
 2179              	.LCFI117:
 2180              		.cfi_def_cfa_offset 8
 2181 0014 BD46     		mov	sp, r7
 2182              	.LCFI118:
 2183              		.cfi_def_cfa_register 13
 2184              		@ sp needed
 2185 0016 80BD     		pop	{r7, pc}
 2186              		.cfi_endproc
 2187              	.LFE1110:
 2189              		.section	.text.PWMC_RLDetectionModeDisable,"ax",%progbits
 2190              		.align	1
 2191              		.weak	PWMC_RLDetectionModeDisable
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2196              	PWMC_RLDetectionModeDisable:
 2197              	.LFB1111:
 907:Src/pwm_curr_fdbk.c **** 
 908:Src/pwm_curr_fdbk.c **** /** @brief  Disables the RL detection mode by calling the function in @p pHandle PWMC component.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 72


 909:Src/pwm_curr_fdbk.c ****   *
 910:Src/pwm_curr_fdbk.c ****   */
 911:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 912:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLDetectionModeDisable(PWMC_Handle_t *pHandle)
 913:Src/pwm_curr_fdbk.c **** {
 2198              		.loc 2 913 1
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 8
 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 0000 80B5     		push	{r7, lr}
 2203              	.LCFI119:
 2204              		.cfi_def_cfa_offset 8
 2205              		.cfi_offset 7, -8
 2206              		.cfi_offset 14, -4
 2207 0002 82B0     		sub	sp, sp, #8
 2208              	.LCFI120:
 2209              		.cfi_def_cfa_offset 16
 2210 0004 00AF     		add	r7, sp, #0
 2211              	.LCFI121:
 2212              		.cfi_def_cfa_register 7
 2213 0006 7860     		str	r0, [r7, #4]
 914:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 915:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeDisable))
 916:Src/pwm_curr_fdbk.c ****   {
 917:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 918:Src/pwm_curr_fdbk.c ****   }
 919:Src/pwm_curr_fdbk.c ****   else
 920:Src/pwm_curr_fdbk.c ****   {
 921:Src/pwm_curr_fdbk.c **** #endif
 922:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable(pHandle);
 2214              		.loc 2 922 12
 2215 0008 7B68     		ldr	r3, [r7, #4]
 2216 000a 1B6A     		ldr	r3, [r3, #32]
 2217              		.loc 2 922 5
 2218 000c 7868     		ldr	r0, [r7, #4]
 2219 000e 9847     		blx	r3
 2220              	.LVL11:
 923:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 924:Src/pwm_curr_fdbk.c ****   }
 925:Src/pwm_curr_fdbk.c **** #endif
 926:Src/pwm_curr_fdbk.c **** }
 2221              		.loc 2 926 1
 2222 0010 00BF     		nop
 2223 0012 0837     		adds	r7, r7, #8
 2224              	.LCFI122:
 2225              		.cfi_def_cfa_offset 8
 2226 0014 BD46     		mov	sp, r7
 2227              	.LCFI123:
 2228              		.cfi_def_cfa_register 13
 2229              		@ sp needed
 2230 0016 80BD     		pop	{r7, pc}
 2231              		.cfi_endproc
 2232              	.LFE1111:
 2234              		.section	.text.PWMC_RLDetectionModeSetDuty,"ax",%progbits
 2235              		.align	1
 2236              		.weak	PWMC_RLDetectionModeSetDuty
 2237              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 73


 2238              		.thumb
 2239              		.thumb_func
 2241              	PWMC_RLDetectionModeSetDuty:
 2242              	.LFB1112:
 927:Src/pwm_curr_fdbk.c **** 
 928:Src/pwm_curr_fdbk.c **** /**
 929:Src/pwm_curr_fdbk.c ****   * @brief  Sets the PWM duty cycle to apply in the RL Detection mode.
 930:Src/pwm_curr_fdbk.c ****   *
 931:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 932:Src/pwm_curr_fdbk.c ****   * @param  hDuty: Duty cycle to apply, written in uint16_t.
 933:Src/pwm_curr_fdbk.c ****   * @retval #MC_NO_ERROR if the Duty Cycle could be applied on time for the next PWM period.
 934:Src/pwm_curr_fdbk.c ****   * 		Returns #MC_DURATION otherwise.
 935:Src/pwm_curr_fdbk.c ****   */
 936:Src/pwm_curr_fdbk.c **** __weak uint16_t PWMC_RLDetectionModeSetDuty(PWMC_Handle_t *pHandle, uint16_t hDuty) //cstat !MISRAC
 937:Src/pwm_curr_fdbk.c **** {
 2243              		.loc 2 937 1
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 8
 2246              		@ frame_needed = 1, uses_anonymous_args = 0
 2247 0000 80B5     		push	{r7, lr}
 2248              	.LCFI124:
 2249              		.cfi_def_cfa_offset 8
 2250              		.cfi_offset 7, -8
 2251              		.cfi_offset 14, -4
 2252 0002 82B0     		sub	sp, sp, #8
 2253              	.LCFI125:
 2254              		.cfi_def_cfa_offset 16
 2255 0004 00AF     		add	r7, sp, #0
 2256              	.LCFI126:
 2257              		.cfi_def_cfa_register 7
 2258 0006 7860     		str	r0, [r7, #4]
 2259 0008 0B46     		mov	r3, r1
 2260 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 938:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 939:Src/pwm_curr_fdbk.c ****  uint16_t retVal = MC_DURATION;
 940:Src/pwm_curr_fdbk.c **** 
 941:Src/pwm_curr_fdbk.c ****  if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLDetectionModeSetDuty))
 942:Src/pwm_curr_fdbk.c ****  {
 943:Src/pwm_curr_fdbk.c ****    /* Nothing to do */
 944:Src/pwm_curr_fdbk.c ****  }
 945:Src/pwm_curr_fdbk.c ****  else
 946:Src/pwm_curr_fdbk.c ****  {
 947:Src/pwm_curr_fdbk.c ****    retVal = pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty);
 948:Src/pwm_curr_fdbk.c ****  }
 949:Src/pwm_curr_fdbk.c ****  return (retVal);
 950:Src/pwm_curr_fdbk.c **** #else
 951:Src/pwm_curr_fdbk.c ****   return (pHandle->pFctRLDetectionModeSetDuty(pHandle, hDuty));
 2261              		.loc 2 951 18
 2262 000c 7B68     		ldr	r3, [r7, #4]
 2263 000e 5B6A     		ldr	r3, [r3, #36]
 2264              		.loc 2 951 11
 2265 0010 7A88     		ldrh	r2, [r7, #2]
 2266 0012 1146     		mov	r1, r2
 2267 0014 7868     		ldr	r0, [r7, #4]
 2268 0016 9847     		blx	r3
 2269              	.LVL12:
 2270 0018 0346     		mov	r3, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 74


 952:Src/pwm_curr_fdbk.c **** #endif
 953:Src/pwm_curr_fdbk.c **** }
 2271              		.loc 2 953 1
 2272 001a 1846     		mov	r0, r3
 2273 001c 0837     		adds	r7, r7, #8
 2274              	.LCFI127:
 2275              		.cfi_def_cfa_offset 8
 2276 001e BD46     		mov	sp, r7
 2277              	.LCFI128:
 2278              		.cfi_def_cfa_register 13
 2279              		@ sp needed
 2280 0020 80BD     		pop	{r7, pc}
 2281              		.cfi_endproc
 2282              	.LFE1112:
 2284              		.section	.text.PWMC_RLTurnOnLowSidesAndStart,"ax",%progbits
 2285              		.align	1
 2286              		.weak	PWMC_RLTurnOnLowSidesAndStart
 2287              		.syntax unified
 2288              		.thumb
 2289              		.thumb_func
 2291              	PWMC_RLTurnOnLowSidesAndStart:
 2292              	.LFB1113:
 954:Src/pwm_curr_fdbk.c **** 
 955:Src/pwm_curr_fdbk.c **** /** @brief  Turns on low sides switches and starts ADC triggerin.
 956:Src/pwm_curr_fdbk.c ****   *
 957:Src/pwm_curr_fdbk.c ****   */
 958:Src/pwm_curr_fdbk.c **** //cstat !MISRAC2012-Rule-8.13 !RED-func-no-effect
 959:Src/pwm_curr_fdbk.c **** __weak void PWMC_RLTurnOnLowSidesAndStart(PWMC_Handle_t *pHandle)
 960:Src/pwm_curr_fdbk.c **** {
 2293              		.loc 2 960 1
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 8
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297 0000 80B5     		push	{r7, lr}
 2298              	.LCFI129:
 2299              		.cfi_def_cfa_offset 8
 2300              		.cfi_offset 7, -8
 2301              		.cfi_offset 14, -4
 2302 0002 82B0     		sub	sp, sp, #8
 2303              	.LCFI130:
 2304              		.cfi_def_cfa_offset 16
 2305 0004 00AF     		add	r7, sp, #0
 2306              	.LCFI131:
 2307              		.cfi_def_cfa_register 7
 2308 0006 7860     		str	r0, [r7, #4]
 961:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 962:Src/pwm_curr_fdbk.c ****   if ((MC_NULL == pHandle) || ( MC_NULL == pHandle->pFctRLTurnOnLowSidesAndStart))
 963:Src/pwm_curr_fdbk.c ****   {
 964:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 965:Src/pwm_curr_fdbk.c ****   }
 966:Src/pwm_curr_fdbk.c ****   else
 967:Src/pwm_curr_fdbk.c ****   {
 968:Src/pwm_curr_fdbk.c **** #endif
 969:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLTurnOnLowSidesAndStart(pHandle);
 2309              		.loc 2 969 12
 2310 0008 7B68     		ldr	r3, [r7, #4]
 2311 000a 9B6A     		ldr	r3, [r3, #40]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 75


 2312              		.loc 2 969 5
 2313 000c 7868     		ldr	r0, [r7, #4]
 2314 000e 9847     		blx	r3
 2315              	.LVL13:
 970:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 971:Src/pwm_curr_fdbk.c ****   }
 972:Src/pwm_curr_fdbk.c **** #endif
 973:Src/pwm_curr_fdbk.c **** }
 2316              		.loc 2 973 1
 2317 0010 00BF     		nop
 2318 0012 0837     		adds	r7, r7, #8
 2319              	.LCFI132:
 2320              		.cfi_def_cfa_offset 8
 2321 0014 BD46     		mov	sp, r7
 2322              	.LCFI133:
 2323              		.cfi_def_cfa_register 13
 2324              		@ sp needed
 2325 0016 80BD     		pop	{r7, pc}
 2326              		.cfi_endproc
 2327              	.LFE1113:
 2329              		.section	.text.PWMC_SetAlignFlag,"ax",%progbits
 2330              		.align	1
 2331              		.global	PWMC_SetAlignFlag
 2332              		.syntax unified
 2333              		.thumb
 2334              		.thumb_func
 2336              	PWMC_SetAlignFlag:
 2337              	.LFB1114:
 974:Src/pwm_curr_fdbk.c **** /**
 975:Src/pwm_curr_fdbk.c ****   * @brief  Sets the aligned motor flag.
 976:Src/pwm_curr_fdbk.c ****   *
 977:Src/pwm_curr_fdbk.c ****   * @param  pHandle: Handler of the current instance of the PWMC component.
 978:Src/pwm_curr_fdbk.c ****   * @param  flag: Value to be applied as an 8 bit unsigned integer.
 979:Src/pwm_curr_fdbk.c ****   *				  1: motor is in aligned stage.
 980:Src/pwm_curr_fdbk.c ****   *               2: motor is not in aligned stage.
 981:Src/pwm_curr_fdbk.c ****   */
 982:Src/pwm_curr_fdbk.c **** void PWMC_SetAlignFlag(PWMC_Handle_t *pHandle, uint8_t flag)
 983:Src/pwm_curr_fdbk.c **** {
 2338              		.loc 2 983 1
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 8
 2341              		@ frame_needed = 1, uses_anonymous_args = 0
 2342              		@ link register save eliminated.
 2343 0000 80B4     		push	{r7}
 2344              	.LCFI134:
 2345              		.cfi_def_cfa_offset 4
 2346              		.cfi_offset 7, -4
 2347 0002 83B0     		sub	sp, sp, #12
 2348              	.LCFI135:
 2349              		.cfi_def_cfa_offset 16
 2350 0004 00AF     		add	r7, sp, #0
 2351              	.LCFI136:
 2352              		.cfi_def_cfa_register 7
 2353 0006 7860     		str	r0, [r7, #4]
 2354 0008 0B46     		mov	r3, r1
 2355 000a FB70     		strb	r3, [r7, #3]
 984:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 76


 985:Src/pwm_curr_fdbk.c ****   if (MC_NULL ==  pHandle)
 986:Src/pwm_curr_fdbk.c ****   {
 987:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
 988:Src/pwm_curr_fdbk.c ****   }
 989:Src/pwm_curr_fdbk.c ****   else
 990:Src/pwm_curr_fdbk.c ****   {
 991:Src/pwm_curr_fdbk.c **** #endif
 992:Src/pwm_curr_fdbk.c ****     pHandle->AlignFlag = flag;
 2356              		.loc 2 992 24
 2357 000c 7B68     		ldr	r3, [r7, #4]
 2358 000e FA78     		ldrb	r2, [r7, #3]
 2359 0010 83F87B20 		strb	r2, [r3, #123]
 993:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
 994:Src/pwm_curr_fdbk.c ****   }
 995:Src/pwm_curr_fdbk.c **** #endif
 996:Src/pwm_curr_fdbk.c **** }
 2360              		.loc 2 996 1
 2361 0014 00BF     		nop
 2362 0016 0C37     		adds	r7, r7, #12
 2363              	.LCFI137:
 2364              		.cfi_def_cfa_offset 4
 2365 0018 BD46     		mov	sp, r7
 2366              	.LCFI138:
 2367              		.cfi_def_cfa_register 13
 2368              		@ sp needed
 2369 001a 5DF8047B 		ldr	r7, [sp], #4
 2370              	.LCFI139:
 2371              		.cfi_restore 7
 2372              		.cfi_def_cfa_offset 0
 2373 001e 7047     		bx	lr
 2374              		.cfi_endproc
 2375              	.LFE1114:
 2377              		.section	.text.PWMC_RegisterGetPhaseCurrentsCallBack,"ax",%progbits
 2378              		.align	1
 2379              		.weak	PWMC_RegisterGetPhaseCurrentsCallBack
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2384              	PWMC_RegisterGetPhaseCurrentsCallBack:
 2385              	.LFB1115:
 997:Src/pwm_curr_fdbk.c **** 
 998:Src/pwm_curr_fdbk.c **** /**
 999:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to get phases current.
1000:Src/pwm_curr_fdbk.c ****  *
1001:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback to get the phase current.
1002:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1003:Src/pwm_curr_fdbk.c ****  */
1004:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterGetPhaseCurrentsCallBack(PWMC_GetPhaseCurr_Cb_t pCallBack, PWMC_Handle_t *
1005:Src/pwm_curr_fdbk.c **** {
 2386              		.loc 2 1005 1
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 8
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390              		@ link register save eliminated.
 2391 0000 80B4     		push	{r7}
 2392              	.LCFI140:
 2393              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 77


 2394              		.cfi_offset 7, -4
 2395 0002 83B0     		sub	sp, sp, #12
 2396              	.LCFI141:
 2397              		.cfi_def_cfa_offset 16
 2398 0004 00AF     		add	r7, sp, #0
 2399              	.LCFI142:
 2400              		.cfi_def_cfa_register 7
 2401 0006 7860     		str	r0, [r7, #4]
 2402 0008 3960     		str	r1, [r7]
1006:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1007:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1008:Src/pwm_curr_fdbk.c ****   {
1009:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1010:Src/pwm_curr_fdbk.c ****   }
1011:Src/pwm_curr_fdbk.c ****   else
1012:Src/pwm_curr_fdbk.c ****   {
1013:Src/pwm_curr_fdbk.c **** #endif
1014:Src/pwm_curr_fdbk.c ****     pHandle->pFctGetPhaseCurrents = pCallBack;
 2403              		.loc 2 1014 35
 2404 000a 3B68     		ldr	r3, [r7]
 2405 000c 7A68     		ldr	r2, [r7, #4]
 2406 000e 1A60     		str	r2, [r3]
1015:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1016:Src/pwm_curr_fdbk.c ****   }
1017:Src/pwm_curr_fdbk.c **** #endif
1018:Src/pwm_curr_fdbk.c **** }
 2407              		.loc 2 1018 1
 2408 0010 00BF     		nop
 2409 0012 0C37     		adds	r7, r7, #12
 2410              	.LCFI143:
 2411              		.cfi_def_cfa_offset 4
 2412 0014 BD46     		mov	sp, r7
 2413              	.LCFI144:
 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed
 2416 0016 5DF8047B 		ldr	r7, [sp], #4
 2417              	.LCFI145:
 2418              		.cfi_restore 7
 2419              		.cfi_def_cfa_offset 0
 2420 001a 7047     		bx	lr
 2421              		.cfi_endproc
 2422              	.LFE1115:
 2424              		.section	.text.PWMC_RegisterSwitchOffPwmCallBack,"ax",%progbits
 2425              		.align	1
 2426              		.weak	PWMC_RegisterSwitchOffPwmCallBack
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2431              	PWMC_RegisterSwitchOffPwmCallBack:
 2432              	.LFB1116:
1019:Src/pwm_curr_fdbk.c **** 
1020:Src/pwm_curr_fdbk.c **** /**
1021:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
1022:Src/pwm_curr_fdbk.c ****  *        generation off.
1023:Src/pwm_curr_fdbk.c ****  *
1024:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1025:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 78


1026:Src/pwm_curr_fdbk.c ****  */
1027:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchOffPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
1028:Src/pwm_curr_fdbk.c **** {
 2433              		.loc 2 1028 1
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 8
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437              		@ link register save eliminated.
 2438 0000 80B4     		push	{r7}
 2439              	.LCFI146:
 2440              		.cfi_def_cfa_offset 4
 2441              		.cfi_offset 7, -4
 2442 0002 83B0     		sub	sp, sp, #12
 2443              	.LCFI147:
 2444              		.cfi_def_cfa_offset 16
 2445 0004 00AF     		add	r7, sp, #0
 2446              	.LCFI148:
 2447              		.cfi_def_cfa_register 7
 2448 0006 7860     		str	r0, [r7, #4]
 2449 0008 3960     		str	r1, [r7]
1029:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1030:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1031:Src/pwm_curr_fdbk.c ****   {
1032:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1033:Src/pwm_curr_fdbk.c ****   }
1034:Src/pwm_curr_fdbk.c ****   else
1035:Src/pwm_curr_fdbk.c ****   {
1036:Src/pwm_curr_fdbk.c **** #endif
1037:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOffPwm = pCallBack;
 2450              		.loc 2 1037 31
 2451 000a 3B68     		ldr	r3, [r7]
 2452 000c 7A68     		ldr	r2, [r7, #4]
 2453 000e 5A60     		str	r2, [r3, #4]
1038:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1039:Src/pwm_curr_fdbk.c ****   }
1040:Src/pwm_curr_fdbk.c **** #endif
1041:Src/pwm_curr_fdbk.c **** }
 2454              		.loc 2 1041 1
 2455 0010 00BF     		nop
 2456 0012 0C37     		adds	r7, r7, #12
 2457              	.LCFI149:
 2458              		.cfi_def_cfa_offset 4
 2459 0014 BD46     		mov	sp, r7
 2460              	.LCFI150:
 2461              		.cfi_def_cfa_register 13
 2462              		@ sp needed
 2463 0016 5DF8047B 		ldr	r7, [sp], #4
 2464              	.LCFI151:
 2465              		.cfi_restore 7
 2466              		.cfi_def_cfa_offset 0
 2467 001a 7047     		bx	lr
 2468              		.cfi_endproc
 2469              	.LFE1116:
 2471              		.section	.text.PWMC_RegisterSwitchonPwmCallBack,"ax",%progbits
 2472              		.align	1
 2473              		.weak	PWMC_RegisterSwitchonPwmCallBack
 2474              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 79


 2475              		.thumb
 2476              		.thumb_func
 2478              	PWMC_RegisterSwitchonPwmCallBack:
 2479              	.LFB1117:
1042:Src/pwm_curr_fdbk.c **** 
1043:Src/pwm_curr_fdbk.c **** /**
1044:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to switch PWM
1045:Src/pwm_curr_fdbk.c ****  *        generation on.
1046:Src/pwm_curr_fdbk.c ****  *
1047:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1048:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1049:Src/pwm_curr_fdbk.c ****  */
1050:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSwitchonPwmCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHandle)
1051:Src/pwm_curr_fdbk.c **** {
 2480              		.loc 2 1051 1
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 8
 2483              		@ frame_needed = 1, uses_anonymous_args = 0
 2484              		@ link register save eliminated.
 2485 0000 80B4     		push	{r7}
 2486              	.LCFI152:
 2487              		.cfi_def_cfa_offset 4
 2488              		.cfi_offset 7, -4
 2489 0002 83B0     		sub	sp, sp, #12
 2490              	.LCFI153:
 2491              		.cfi_def_cfa_offset 16
 2492 0004 00AF     		add	r7, sp, #0
 2493              	.LCFI154:
 2494              		.cfi_def_cfa_register 7
 2495 0006 7860     		str	r0, [r7, #4]
 2496 0008 3960     		str	r1, [r7]
1052:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1053:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1054:Src/pwm_curr_fdbk.c ****   {
1055:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1056:Src/pwm_curr_fdbk.c ****   }
1057:Src/pwm_curr_fdbk.c ****   else
1058:Src/pwm_curr_fdbk.c ****   {
1059:Src/pwm_curr_fdbk.c **** #endif
1060:Src/pwm_curr_fdbk.c ****     pHandle->pFctSwitchOnPwm = pCallBack;
 2497              		.loc 2 1060 30
 2498 000a 3B68     		ldr	r3, [r7]
 2499 000c 7A68     		ldr	r2, [r7, #4]
 2500 000e 9A60     		str	r2, [r3, #8]
1061:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1062:Src/pwm_curr_fdbk.c ****   }
1063:Src/pwm_curr_fdbk.c **** #endif
1064:Src/pwm_curr_fdbk.c **** }
 2501              		.loc 2 1064 1
 2502 0010 00BF     		nop
 2503 0012 0C37     		adds	r7, r7, #12
 2504              	.LCFI155:
 2505              		.cfi_def_cfa_offset 4
 2506 0014 BD46     		mov	sp, r7
 2507              	.LCFI156:
 2508              		.cfi_def_cfa_register 13
 2509              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 80


 2510 0016 5DF8047B 		ldr	r7, [sp], #4
 2511              	.LCFI157:
 2512              		.cfi_restore 7
 2513              		.cfi_def_cfa_offset 0
 2514 001a 7047     		bx	lr
 2515              		.cfi_endproc
 2516              	.LFE1117:
 2518              		.section	.text.PWMC_RegisterReadingCalibrationCallBack,"ax",%progbits
 2519              		.align	1
 2520              		.weak	PWMC_RegisterReadingCalibrationCallBack
 2521              		.syntax unified
 2522              		.thumb
 2523              		.thumb_func
 2525              	PWMC_RegisterReadingCalibrationCallBack:
 2526              	.LFB1118:
1065:Src/pwm_curr_fdbk.c **** 
1066:Src/pwm_curr_fdbk.c **** /**
1067:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to execute a calibration
1068:Src/pwm_curr_fdbk.c ****  *        of the current sensing system.
1069:Src/pwm_curr_fdbk.c ****  *
1070:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1071:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1072:Src/pwm_curr_fdbk.c ****  */
1073:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterReadingCalibrationCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *pHa
1074:Src/pwm_curr_fdbk.c **** {
 2527              		.loc 2 1074 1
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 8
 2530              		@ frame_needed = 1, uses_anonymous_args = 0
 2531              		@ link register save eliminated.
 2532 0000 80B4     		push	{r7}
 2533              	.LCFI158:
 2534              		.cfi_def_cfa_offset 4
 2535              		.cfi_offset 7, -4
 2536 0002 83B0     		sub	sp, sp, #12
 2537              	.LCFI159:
 2538              		.cfi_def_cfa_offset 16
 2539 0004 00AF     		add	r7, sp, #0
 2540              	.LCFI160:
 2541              		.cfi_def_cfa_register 7
 2542 0006 7860     		str	r0, [r7, #4]
 2543 0008 3960     		str	r1, [r7]
1075:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1076:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1077:Src/pwm_curr_fdbk.c ****   {
1078:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1079:Src/pwm_curr_fdbk.c ****   }
1080:Src/pwm_curr_fdbk.c ****   else
1081:Src/pwm_curr_fdbk.c ****   {
1082:Src/pwm_curr_fdbk.c **** #endif
1083:Src/pwm_curr_fdbk.c ****     pHandle->pFctCurrReadingCalib = pCallBack;
 2544              		.loc 2 1083 35
 2545 000a 3B68     		ldr	r3, [r7]
 2546 000c 7A68     		ldr	r2, [r7, #4]
 2547 000e DA60     		str	r2, [r3, #12]
1084:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1085:Src/pwm_curr_fdbk.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 81


1086:Src/pwm_curr_fdbk.c **** #endif
1087:Src/pwm_curr_fdbk.c **** }
 2548              		.loc 2 1087 1
 2549 0010 00BF     		nop
 2550 0012 0C37     		adds	r7, r7, #12
 2551              	.LCFI161:
 2552              		.cfi_def_cfa_offset 4
 2553 0014 BD46     		mov	sp, r7
 2554              	.LCFI162:
 2555              		.cfi_def_cfa_register 13
 2556              		@ sp needed
 2557 0016 5DF8047B 		ldr	r7, [sp], #4
 2558              	.LCFI163:
 2559              		.cfi_restore 7
 2560              		.cfi_def_cfa_offset 0
 2561 001a 7047     		bx	lr
 2562              		.cfi_endproc
 2563              	.LFE1118:
 2565              		.section	.text.PWMC_RegisterTurnOnLowSidesCallBack,"ax",%progbits
 2566              		.align	1
 2567              		.weak	PWMC_RegisterTurnOnLowSidesCallBack
 2568              		.syntax unified
 2569              		.thumb
 2570              		.thumb_func
 2572              	PWMC_RegisterTurnOnLowSidesCallBack:
 2573              	.LFB1119:
1088:Src/pwm_curr_fdbk.c **** 
1089:Src/pwm_curr_fdbk.c **** /**
1090:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to turn low sides on.
1091:Src/pwm_curr_fdbk.c ****  *
1092:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which turns low sides on.
1093:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1094:Src/pwm_curr_fdbk.c ****  */
1095:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterTurnOnLowSidesCallBack(PWMC_TurnOnLowSides_Cb_t pCallBack, PWMC_Handle_t *
1096:Src/pwm_curr_fdbk.c **** {
 2574              		.loc 2 1096 1
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 8
 2577              		@ frame_needed = 1, uses_anonymous_args = 0
 2578              		@ link register save eliminated.
 2579 0000 80B4     		push	{r7}
 2580              	.LCFI164:
 2581              		.cfi_def_cfa_offset 4
 2582              		.cfi_offset 7, -4
 2583 0002 83B0     		sub	sp, sp, #12
 2584              	.LCFI165:
 2585              		.cfi_def_cfa_offset 16
 2586 0004 00AF     		add	r7, sp, #0
 2587              	.LCFI166:
 2588              		.cfi_def_cfa_register 7
 2589 0006 7860     		str	r0, [r7, #4]
 2590 0008 3960     		str	r1, [r7]
1097:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1098:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1099:Src/pwm_curr_fdbk.c ****   {
1100:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1101:Src/pwm_curr_fdbk.c ****   }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 82


1102:Src/pwm_curr_fdbk.c ****   else
1103:Src/pwm_curr_fdbk.c ****   {
1104:Src/pwm_curr_fdbk.c **** #endif
1105:Src/pwm_curr_fdbk.c ****     pHandle->pFctTurnOnLowSides = pCallBack;
 2591              		.loc 2 1105 33
 2592 000a 3B68     		ldr	r3, [r7]
 2593 000c 7A68     		ldr	r2, [r7, #4]
 2594 000e 1A61     		str	r2, [r3, #16]
1106:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1107:Src/pwm_curr_fdbk.c ****   }
1108:Src/pwm_curr_fdbk.c **** #endif
1109:Src/pwm_curr_fdbk.c **** }
 2595              		.loc 2 1109 1
 2596 0010 00BF     		nop
 2597 0012 0C37     		adds	r7, r7, #12
 2598              	.LCFI167:
 2599              		.cfi_def_cfa_offset 4
 2600 0014 BD46     		mov	sp, r7
 2601              	.LCFI168:
 2602              		.cfi_def_cfa_register 13
 2603              		@ sp needed
 2604 0016 5DF8047B 		ldr	r7, [sp], #4
 2605              	.LCFI169:
 2606              		.cfi_restore 7
 2607              		.cfi_def_cfa_offset 0
 2608 001a 7047     		bx	lr
 2609              		.cfi_endproc
 2610              	.LFE1119:
 2612              		.section	.text.PWMC_RegisterSampPointSectXCallBack,"ax",%progbits
 2613              		.align	1
 2614              		.weak	PWMC_RegisterSampPointSectXCallBack
 2615              		.syntax unified
 2616              		.thumb
 2617              		.thumb_func
 2619              	PWMC_RegisterSampPointSectXCallBack:
 2620              	.LFB1120:
1110:Src/pwm_curr_fdbk.c **** 
1111:Src/pwm_curr_fdbk.c **** /**
1112:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to compute ADC sampling point.
1113:Src/pwm_curr_fdbk.c ****  *
1114:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the sampling point depending on the sector.
1115:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1116:Src/pwm_curr_fdbk.c ****  */
1117:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterSampPointSectXCallBack(PWMC_SetSampPointSectX_Cb_t pCallBack, PWMC_Handle_
1118:Src/pwm_curr_fdbk.c **** {
 2621              		.loc 2 1118 1
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 8
 2624              		@ frame_needed = 1, uses_anonymous_args = 0
 2625              		@ link register save eliminated.
 2626 0000 80B4     		push	{r7}
 2627              	.LCFI170:
 2628              		.cfi_def_cfa_offset 4
 2629              		.cfi_offset 7, -4
 2630 0002 83B0     		sub	sp, sp, #12
 2631              	.LCFI171:
 2632              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 83


 2633 0004 00AF     		add	r7, sp, #0
 2634              	.LCFI172:
 2635              		.cfi_def_cfa_register 7
 2636 0006 7860     		str	r0, [r7, #4]
 2637 0008 3960     		str	r1, [r7]
1119:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1120:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1121:Src/pwm_curr_fdbk.c ****   {
1122:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1123:Src/pwm_curr_fdbk.c ****   }
1124:Src/pwm_curr_fdbk.c ****   else
1125:Src/pwm_curr_fdbk.c ****   {
1126:Src/pwm_curr_fdbk.c **** #endif
1127:Src/pwm_curr_fdbk.c ****     pHandle->pFctSetADCSampPointSectX = pCallBack;
 2638              		.loc 2 1127 39
 2639 000a 3B68     		ldr	r3, [r7]
 2640 000c 7A68     		ldr	r2, [r7, #4]
 2641 000e 5A61     		str	r2, [r3, #20]
1128:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1129:Src/pwm_curr_fdbk.c ****   }
1130:Src/pwm_curr_fdbk.c **** #endif
1131:Src/pwm_curr_fdbk.c **** }
 2642              		.loc 2 1131 1
 2643 0010 00BF     		nop
 2644 0012 0C37     		adds	r7, r7, #12
 2645              	.LCFI173:
 2646              		.cfi_def_cfa_offset 4
 2647 0014 BD46     		mov	sp, r7
 2648              	.LCFI174:
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 0016 5DF8047B 		ldr	r7, [sp], #4
 2652              	.LCFI175:
 2653              		.cfi_restore 7
 2654              		.cfi_def_cfa_offset 0
 2655 001a 7047     		bx	lr
 2656              		.cfi_endproc
 2657              	.LFE1120:
 2659              		.section	.text.PWMC_RegisterOCPSetRefVoltageCallBack,"ax",%progbits
 2660              		.align	1
 2661              		.weak	PWMC_RegisterOCPSetRefVoltageCallBack
 2662              		.syntax unified
 2663              		.thumb
 2664              		.thumb_func
 2666              	PWMC_RegisterOCPSetRefVoltageCallBack:
 2667              	.LFB1121:
1132:Src/pwm_curr_fdbk.c **** 
1133:Src/pwm_curr_fdbk.c **** /**
1134:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the reference
1135:Src/pwm_curr_fdbk.c ****  *        voltage for the overcurrent protection.
1136:Src/pwm_curr_fdbk.c ****  *
1137:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the reference voltage.
1138:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1139:Src/pwm_curr_fdbk.c ****  */
1140:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterOCPSetRefVoltageCallBack(PWMC_SetOcpRefVolt_Cb_t pCallBack, PWMC_Handle_t 
1141:Src/pwm_curr_fdbk.c **** {
 2668              		.loc 2 1141 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 84


 2669              		.cfi_startproc
 2670              		@ args = 0, pretend = 0, frame = 8
 2671              		@ frame_needed = 1, uses_anonymous_args = 0
 2672              		@ link register save eliminated.
 2673 0000 80B4     		push	{r7}
 2674              	.LCFI176:
 2675              		.cfi_def_cfa_offset 4
 2676              		.cfi_offset 7, -4
 2677 0002 83B0     		sub	sp, sp, #12
 2678              	.LCFI177:
 2679              		.cfi_def_cfa_offset 16
 2680 0004 00AF     		add	r7, sp, #0
 2681              	.LCFI178:
 2682              		.cfi_def_cfa_register 7
 2683 0006 7860     		str	r0, [r7, #4]
 2684 0008 3960     		str	r1, [r7]
1142:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1143:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1144:Src/pwm_curr_fdbk.c ****   {
1145:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1146:Src/pwm_curr_fdbk.c ****   }
1147:Src/pwm_curr_fdbk.c ****   else
1148:Src/pwm_curr_fdbk.c ****   {
1149:Src/pwm_curr_fdbk.c **** #endif
1150:Src/pwm_curr_fdbk.c ****     pHandle->pFctOCPSetReferenceVoltage = pCallBack;
 2685              		.loc 2 1150 41
 2686 000a 3B68     		ldr	r3, [r7]
 2687 000c 7A68     		ldr	r2, [r7, #4]
 2688 000e 9A61     		str	r2, [r3, #24]
1151:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1152:Src/pwm_curr_fdbk.c ****   }
1153:Src/pwm_curr_fdbk.c **** #endif
1154:Src/pwm_curr_fdbk.c **** }
 2689              		.loc 2 1154 1
 2690 0010 00BF     		nop
 2691 0012 0C37     		adds	r7, r7, #12
 2692              	.LCFI179:
 2693              		.cfi_def_cfa_offset 4
 2694 0014 BD46     		mov	sp, r7
 2695              	.LCFI180:
 2696              		.cfi_def_cfa_register 13
 2697              		@ sp needed
 2698 0016 5DF8047B 		ldr	r7, [sp], #4
 2699              	.LCFI181:
 2700              		.cfi_restore 7
 2701              		.cfi_def_cfa_offset 0
 2702 001a 7047     		bx	lr
 2703              		.cfi_endproc
 2704              	.LFE1121:
 2706              		.section	.text.PWMC_RegisterRLDetectionModeEnableCallBack,"ax",%progbits
 2707              		.align	1
 2708              		.weak	PWMC_RegisterRLDetectionModeEnableCallBack
 2709              		.syntax unified
 2710              		.thumb
 2711              		.thumb_func
 2713              	PWMC_RegisterRLDetectionModeEnableCallBack:
 2714              	.LFB1122:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 85


1155:Src/pwm_curr_fdbk.c **** 
1156:Src/pwm_curr_fdbk.c **** /**
1157:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to enable the R/L detection mode.
1158:Src/pwm_curr_fdbk.c ****  *
1159:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1160:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1161:Src/pwm_curr_fdbk.c ****  */
1162:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeEnableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t *
1163:Src/pwm_curr_fdbk.c **** {
 2715              		.loc 2 1163 1
 2716              		.cfi_startproc
 2717              		@ args = 0, pretend = 0, frame = 8
 2718              		@ frame_needed = 1, uses_anonymous_args = 0
 2719              		@ link register save eliminated.
 2720 0000 80B4     		push	{r7}
 2721              	.LCFI182:
 2722              		.cfi_def_cfa_offset 4
 2723              		.cfi_offset 7, -4
 2724 0002 83B0     		sub	sp, sp, #12
 2725              	.LCFI183:
 2726              		.cfi_def_cfa_offset 16
 2727 0004 00AF     		add	r7, sp, #0
 2728              	.LCFI184:
 2729              		.cfi_def_cfa_register 7
 2730 0006 7860     		str	r0, [r7, #4]
 2731 0008 3960     		str	r1, [r7]
1164:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1165:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1166:Src/pwm_curr_fdbk.c ****   {
1167:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1168:Src/pwm_curr_fdbk.c ****   }
1169:Src/pwm_curr_fdbk.c ****   else
1170:Src/pwm_curr_fdbk.c ****   {
1171:Src/pwm_curr_fdbk.c **** #endif
1172:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeEnable = pCallBack;
 2732              		.loc 2 1172 40
 2733 000a 3B68     		ldr	r3, [r7]
 2734 000c 7A68     		ldr	r2, [r7, #4]
 2735 000e DA61     		str	r2, [r3, #28]
1173:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1174:Src/pwm_curr_fdbk.c ****   }
1175:Src/pwm_curr_fdbk.c **** #endif
1176:Src/pwm_curr_fdbk.c **** }
 2736              		.loc 2 1176 1
 2737 0010 00BF     		nop
 2738 0012 0C37     		adds	r7, r7, #12
 2739              	.LCFI185:
 2740              		.cfi_def_cfa_offset 4
 2741 0014 BD46     		mov	sp, r7
 2742              	.LCFI186:
 2743              		.cfi_def_cfa_register 13
 2744              		@ sp needed
 2745 0016 5DF8047B 		ldr	r7, [sp], #4
 2746              	.LCFI187:
 2747              		.cfi_restore 7
 2748              		.cfi_def_cfa_offset 0
 2749 001a 7047     		bx	lr
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 86


 2750              		.cfi_endproc
 2751              	.LFE1122:
 2753              		.section	.text.PWMC_RegisterRLDetectionModeDisableCallBack,"ax",%progbits
 2754              		.align	1
 2755              		.weak	PWMC_RegisterRLDetectionModeDisableCallBack
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2760              	PWMC_RegisterRLDetectionModeDisableCallBack:
 2761              	.LFB1123:
1177:Src/pwm_curr_fdbk.c **** 
1178:Src/pwm_curr_fdbk.c **** /**
1179:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to disable the R/L detection mode.
1180:Src/pwm_curr_fdbk.c ****  *
1181:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the generic callback.
1182:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1183:Src/pwm_curr_fdbk.c ****  */
1184:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeDisableCallBack(PWMC_Generic_Cb_t pCallBack, PWMC_Handle_t 
1185:Src/pwm_curr_fdbk.c **** {
 2762              		.loc 2 1185 1
 2763              		.cfi_startproc
 2764              		@ args = 0, pretend = 0, frame = 8
 2765              		@ frame_needed = 1, uses_anonymous_args = 0
 2766              		@ link register save eliminated.
 2767 0000 80B4     		push	{r7}
 2768              	.LCFI188:
 2769              		.cfi_def_cfa_offset 4
 2770              		.cfi_offset 7, -4
 2771 0002 83B0     		sub	sp, sp, #12
 2772              	.LCFI189:
 2773              		.cfi_def_cfa_offset 16
 2774 0004 00AF     		add	r7, sp, #0
 2775              	.LCFI190:
 2776              		.cfi_def_cfa_register 7
 2777 0006 7860     		str	r0, [r7, #4]
 2778 0008 3960     		str	r1, [r7]
1186:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1187:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1188:Src/pwm_curr_fdbk.c ****   {
1189:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1190:Src/pwm_curr_fdbk.c ****   }
1191:Src/pwm_curr_fdbk.c ****   else
1192:Src/pwm_curr_fdbk.c ****   {
1193:Src/pwm_curr_fdbk.c **** #endif
1194:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeDisable = pCallBack;
 2779              		.loc 2 1194 41
 2780 000a 3B68     		ldr	r3, [r7]
 2781 000c 7A68     		ldr	r2, [r7, #4]
 2782 000e 1A62     		str	r2, [r3, #32]
1195:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1196:Src/pwm_curr_fdbk.c ****   }
1197:Src/pwm_curr_fdbk.c **** #endif
1198:Src/pwm_curr_fdbk.c **** }
 2783              		.loc 2 1198 1
 2784 0010 00BF     		nop
 2785 0012 0C37     		adds	r7, r7, #12
 2786              	.LCFI191:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 87


 2787              		.cfi_def_cfa_offset 4
 2788 0014 BD46     		mov	sp, r7
 2789              	.LCFI192:
 2790              		.cfi_def_cfa_register 13
 2791              		@ sp needed
 2792 0016 5DF8047B 		ldr	r7, [sp], #4
 2793              	.LCFI193:
 2794              		.cfi_restore 7
 2795              		.cfi_def_cfa_offset 0
 2796 001a 7047     		bx	lr
 2797              		.cfi_endproc
 2798              	.LFE1123:
 2800              		.section	.text.PWMC_RegisterRLDetectionModeSetDutyCallBack,"ax",%progbits
 2801              		.align	1
 2802              		.weak	PWMC_RegisterRLDetectionModeSetDutyCallBack
 2803              		.syntax unified
 2804              		.thumb
 2805              		.thumb_func
 2807              	PWMC_RegisterRLDetectionModeSetDutyCallBack:
 2808              	.LFB1124:
1199:Src/pwm_curr_fdbk.c **** 
1200:Src/pwm_curr_fdbk.c **** /**
1201:Src/pwm_curr_fdbk.c ****  * @brief Sets the Callback that the PWMC component shall invoke to set the duty cycle
1202:Src/pwm_curr_fdbk.c ****  *        for the R/L detection mode.
1203:Src/pwm_curr_fdbk.c ****  *
1204:Src/pwm_curr_fdbk.c ****  * @param pCallBack: Pointer on the callback which sets the duty cycle.
1205:Src/pwm_curr_fdbk.c ****  * @param pHandle: Handler of the current instance of the PWMC component.
1206:Src/pwm_curr_fdbk.c ****  */
1207:Src/pwm_curr_fdbk.c **** __weak void PWMC_RegisterRLDetectionModeSetDutyCallBack(PWMC_RLDetectSetDuty_Cb_t pCallBack, PWMC_H
1208:Src/pwm_curr_fdbk.c **** {
 2809              		.loc 2 1208 1
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 8
 2812              		@ frame_needed = 1, uses_anonymous_args = 0
 2813              		@ link register save eliminated.
 2814 0000 80B4     		push	{r7}
 2815              	.LCFI194:
 2816              		.cfi_def_cfa_offset 4
 2817              		.cfi_offset 7, -4
 2818 0002 83B0     		sub	sp, sp, #12
 2819              	.LCFI195:
 2820              		.cfi_def_cfa_offset 16
 2821 0004 00AF     		add	r7, sp, #0
 2822              	.LCFI196:
 2823              		.cfi_def_cfa_register 7
 2824 0006 7860     		str	r0, [r7, #4]
 2825 0008 3960     		str	r1, [r7]
1209:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1210:Src/pwm_curr_fdbk.c ****   if (MC_NULL == pHandle)
1211:Src/pwm_curr_fdbk.c ****   {
1212:Src/pwm_curr_fdbk.c ****     /* Nothing to do */
1213:Src/pwm_curr_fdbk.c ****   }
1214:Src/pwm_curr_fdbk.c ****   else
1215:Src/pwm_curr_fdbk.c ****   {
1216:Src/pwm_curr_fdbk.c **** #endif
1217:Src/pwm_curr_fdbk.c ****     pHandle->pFctRLDetectionModeSetDuty = pCallBack;
 2826              		.loc 2 1217 41
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 88


 2827 000a 3B68     		ldr	r3, [r7]
 2828 000c 7A68     		ldr	r2, [r7, #4]
 2829 000e 5A62     		str	r2, [r3, #36]
1218:Src/pwm_curr_fdbk.c **** #ifdef NULL_PTR_CHECK_PWR_CUR_FDB
1219:Src/pwm_curr_fdbk.c ****   }
1220:Src/pwm_curr_fdbk.c **** #endif
1221:Src/pwm_curr_fdbk.c **** }
 2830              		.loc 2 1221 1
 2831 0010 00BF     		nop
 2832 0012 0C37     		adds	r7, r7, #12
 2833              	.LCFI197:
 2834              		.cfi_def_cfa_offset 4
 2835 0014 BD46     		mov	sp, r7
 2836              	.LCFI198:
 2837              		.cfi_def_cfa_register 13
 2838              		@ sp needed
 2839 0016 5DF8047B 		ldr	r7, [sp], #4
 2840              	.LCFI199:
 2841              		.cfi_restore 7
 2842              		.cfi_def_cfa_offset 0
 2843 001a 7047     		bx	lr
 2844              		.cfi_endproc
 2845              	.LFE1124:
 2847              		.text
 2848              	.Letext0:
 2849              		.file 3 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 2850              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 2851              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2852              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_tim.h"
 2853              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_dma.h"
 2854              		.file 8 "Inc/mc_type.h"
 2855              		.file 9 "Inc/pwm_curr_fdbk.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 89


DEFINED SYMBOLS
                            *ABS*:00000000 pwm_curr_fdbk.c
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:20     .rodata.OFFSET_TAB_CCMRx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:23     .rodata.OFFSET_TAB_CCMRx:00000000 OFFSET_TAB_CCMRx
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:26     .rodata.SHIFT_TAB_OCxx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:29     .rodata.SHIFT_TAB_OCxx:00000000 SHIFT_TAB_OCxx
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:32     .rodata.SHIFT_TAB_ICxx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:35     .rodata.SHIFT_TAB_ICxx:00000000 SHIFT_TAB_ICxx
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:38     .rodata.SHIFT_TAB_CCxP:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:41     .rodata.SHIFT_TAB_CCxP:00000000 SHIFT_TAB_CCxP
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:44     .rodata.SHIFT_TAB_OISx:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:47     .rodata.SHIFT_TAB_OISx:00000000 SHIFT_TAB_OISx
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:50     .text.LL_GPIO_ResetOutputPin:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:55     .text.LL_GPIO_ResetOutputPin:00000000 LL_GPIO_ResetOutputPin
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:97     .rodata.CHANNEL_OFFSET_TAB:00000000 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:100    .rodata.CHANNEL_OFFSET_TAB:00000000 CHANNEL_OFFSET_TAB
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:103    .text.PWMC_Clear:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:109    .text.PWMC_Clear:00000000 PWMC_Clear
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:166    .text.PWMC_SetOffsetCalib:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:172    .text.PWMC_SetOffsetCalib:00000000 PWMC_SetOffsetCalib
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:218    .text.PWMC_GetOffsetCalib:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:224    .text.PWMC_GetOffsetCalib:00000000 PWMC_GetOffsetCalib
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:270    .text.PWMC_GetPhaseCurrents:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:276    .text.PWMC_GetPhaseCurrents:00000000 PWMC_GetPhaseCurrents
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:317    .text.PWMC_SetPhaseVoltage:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:323    .text.PWMC_SetPhaseVoltage:00000000 PWMC_SetPhaseVoltage
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1133   .text.PWMC_SwitchOffPWM:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1139   .text.PWMC_SwitchOffPWM:00000000 PWMC_SwitchOffPWM
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1178   .text.PWMC_SwitchOnPWM:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1184   .text.PWMC_SwitchOnPWM:00000000 PWMC_SwitchOnPWM
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1223   .text.PWMC_CurrentReadingCalibr:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1229   .text.PWMC_CurrentReadingCalibr:00000000 PWMC_CurrentReadingCalibr
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1327   .text.PWMC_LowPassFilter:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1332   .text.PWMC_LowPassFilter:00000000 PWMC_LowPassFilter
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1397   .text.PWMC_CalcPhaseCurrentsEst:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1403   .text.PWMC_CalcPhaseCurrentsEst:00000000 PWMC_CalcPhaseCurrentsEst
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1525   .text.PWMC_TurnOnLowSides:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1531   .text.PWMC_TurnOnLowSides:00000000 PWMC_TurnOnLowSides
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1572   .text.PWMC_OCP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1578   .text.PWMC_OCP_Handler:00000000 PWMC_OCP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1666   .text.PWMC_DP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1672   .text.PWMC_DP_Handler:00000000 PWMC_DP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1760   .text.PWMC_OVP_Handler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1766   .text.PWMC_OVP_Handler:00000000 PWMC_OVP_Handler
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1823   .text.PWMC_IsFaultOccurred:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1829   .text.PWMC_IsFaultOccurred:00000000 PWMC_IsFaultOccurred
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1914   .text.PWMC_OCPSetReferenceVoltage:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1920   .text.PWMC_OCPSetReferenceVoltage:00000000 PWMC_OCPSetReferenceVoltage
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1963   .text.PWMC_GetTurnOnLowSidesAction:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:1969   .text.PWMC_GetTurnOnLowSidesAction:00000000 PWMC_GetTurnOnLowSidesAction
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2008   .text.PWMC_DPWM_ModeEnable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2014   .text.PWMC_DPWM_ModeEnable:00000000 PWMC_DPWM_ModeEnable
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2054   .text.PWMC_DPWM_ModeDisable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2060   .text.PWMC_DPWM_ModeDisable:00000000 PWMC_DPWM_ModeDisable
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2100   .text.PWMC_GetDPWM_Mode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2106   .text.PWMC_GetDPWM_Mode:00000000 PWMC_GetDPWM_Mode
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2145   .text.PWMC_RLDetectionModeEnable:00000000 $t
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s 			page 90


C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2151   .text.PWMC_RLDetectionModeEnable:00000000 PWMC_RLDetectionModeEnable
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2190   .text.PWMC_RLDetectionModeDisable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2196   .text.PWMC_RLDetectionModeDisable:00000000 PWMC_RLDetectionModeDisable
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2235   .text.PWMC_RLDetectionModeSetDuty:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2241   .text.PWMC_RLDetectionModeSetDuty:00000000 PWMC_RLDetectionModeSetDuty
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2285   .text.PWMC_RLTurnOnLowSidesAndStart:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2291   .text.PWMC_RLTurnOnLowSidesAndStart:00000000 PWMC_RLTurnOnLowSidesAndStart
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2330   .text.PWMC_SetAlignFlag:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2336   .text.PWMC_SetAlignFlag:00000000 PWMC_SetAlignFlag
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2378   .text.PWMC_RegisterGetPhaseCurrentsCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2384   .text.PWMC_RegisterGetPhaseCurrentsCallBack:00000000 PWMC_RegisterGetPhaseCurrentsCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2425   .text.PWMC_RegisterSwitchOffPwmCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2431   .text.PWMC_RegisterSwitchOffPwmCallBack:00000000 PWMC_RegisterSwitchOffPwmCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2472   .text.PWMC_RegisterSwitchonPwmCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2478   .text.PWMC_RegisterSwitchonPwmCallBack:00000000 PWMC_RegisterSwitchonPwmCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2519   .text.PWMC_RegisterReadingCalibrationCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2525   .text.PWMC_RegisterReadingCalibrationCallBack:00000000 PWMC_RegisterReadingCalibrationCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2566   .text.PWMC_RegisterTurnOnLowSidesCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2572   .text.PWMC_RegisterTurnOnLowSidesCallBack:00000000 PWMC_RegisterTurnOnLowSidesCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2613   .text.PWMC_RegisterSampPointSectXCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2619   .text.PWMC_RegisterSampPointSectXCallBack:00000000 PWMC_RegisterSampPointSectXCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2660   .text.PWMC_RegisterOCPSetRefVoltageCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2666   .text.PWMC_RegisterOCPSetRefVoltageCallBack:00000000 PWMC_RegisterOCPSetRefVoltageCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2707   .text.PWMC_RegisterRLDetectionModeEnableCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2713   .text.PWMC_RegisterRLDetectionModeEnableCallBack:00000000 PWMC_RegisterRLDetectionModeEnableCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2754   .text.PWMC_RegisterRLDetectionModeDisableCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2760   .text.PWMC_RegisterRLDetectionModeDisableCallBack:00000000 PWMC_RegisterRLDetectionModeDisableCallBack
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2801   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccWhwYqh.s:2807   .text.PWMC_RegisterRLDetectionModeSetDutyCallBack:00000000 PWMC_RegisterRLDetectionModeSetDutyCallBack

UNDEFINED SYMBOLS
MCM_Rev_Park
