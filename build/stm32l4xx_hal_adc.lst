ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_adc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LL_ADC_SetCommonClock,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	LL_ADC_SetCommonClock:
  26              	.LFB133:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_SQR1_SQ1" position
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_SQR1_SQ2" position
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Equivalent to bitfield "ADC_SQR1_SQ3" position
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_SQR1_SQ4" position
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_SQR2_SQ5" position
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_SQR2_SQ6" position
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_SQR2_SQ7" position
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Equivalent to bitfield "ADC_SQR2_SQ8" position
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_SQR2_SQ9" position
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Equivalent to bitfield "ADC_SQR3_SQ10" positio
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Equivalent to bitfield "ADC_SQR3_SQ11" positio
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Equivalent to bitfield "ADC_SQR3_SQ12" positio
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Equivalent to bitfield "ADC_SQR3_SQ13" positio
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Equivalent to bitfield "ADC_SQR3_SQ14" positio
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Equivalent to bitfield "ADC_SQR4_SQ15" positio
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Equivalent to bitfield "ADC_SQR4_SQ16" positio
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_JSQR_JSQ1" positio
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Equivalent to bitfield "ADC_JSQR_JSQ2" positio
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_JSQR_JSQ3" positio
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Equivalent to bitfield "ADC_JSQR_JSQ4" positio
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT      (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (d
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  compatibility with some ADC on oth
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  having this setting set by HW defa
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK           (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U * 
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_CFGR_EXTSEL)                            << (4U * 
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK             (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 0
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 1
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 2
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 3
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR_EXTSEL" posit
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR_EXTEN" positi
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                   compatibility with some ADC on ot
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                   having this setting set by HW def
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK           (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U 
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK             (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U * 
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U * 
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Equivalent to bitfield "ADC_JSQR_JEXTSEL" posi
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Equivalent to bitfield "ADC_JSQR_JEXTEN" posit
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    position in register            
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                              of different ADC internal channels map
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                              number on different ADC instances */
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL)           /* Position of bits ADC_SMPRx_REGOFFSET
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                in ADC_CHANNEL_SMPRX_REGOFFSET_MASK 
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Equivalent to bitfield "ADC_CHANNEL_
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                position in register */
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Value shifted are equivalent to bitfield "ADC_SMPRx_SMPy" position         */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 6


 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* in register.                                                               */
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to perform of shift when single mode is selected, shift 
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channels bits range. */
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL) /* Selection of 1 bit to discriminate di
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mask of bit */
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)         /* Selection of 1 bit to discriminate di
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            position of bit */
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_SINGLEDIFF_CALIB_F_BIT_D to perform a shift of 4 ran
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 series)).         */
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 7


 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                threshold high: mask
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                threshold high: posi
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                position to perform 
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset instance configuration */
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Equivalent to bitfield "ADC_CFGR_RES" position
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR_AWD1SGL" posi
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Equivalent to bitfield "ADC_CFGR_AWD1EN" posit
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Equivalent to bitfield "ADC_CFGR_JAWD1EN" posi
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CR_JADSTART | ADC_CR_JADSTP \
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            HW property "rs": Software can read as well as set this 
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Writing '0' has no effect on the bit value. */
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            parameter VREFINT_CAL: VrefInt ADC raw data acquired at 
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 8


 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with which VrefInt has been calibrated in production
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-10 mV) (unit: mV). */
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC), Vref+ = 3.0 V (tolerance: +-10 mV
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Address of parameter TS_
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            temperature sensor ADC raw data acquired at temperature 
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            TEMPSENSOR_CAL2_TEMP (tolerance: +-5 DegC), Vref+ = 3.0 
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Temperature at which tem
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Temperature at which tem
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Temperature at which tem
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            has been calibrated in production for data into TEMPSENS
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance: +-5 DegC) (unit: DegC). */
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with which temperature sensor has been calibrated in pro
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (tolerance +-10 mV) (unit: mV). */
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 9


 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    constraints between ADC clock and AHB clock must
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    Refer to reference manual.
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              (for devices with several ADC instances).
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultimode(). */
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiDMATransfer(). */
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetMultiTwoSamplingDelay(). */
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 series).
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 10


 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    with some ADC on other STM32 series having this 
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    default value).
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetTriggerSource(). */
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 11


 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerLength(). */
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                     enabled (scan length of 2 ranks or more).
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              successively automatically).
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    and discontinuous mode.
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 series. However, the different
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 12


 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              or from external peripheral (timer event, external int
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    set trigger polarity to rising edge (default set
 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    compatibility with some ADC on other STM32 serie
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    setting set by HW default value).
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    @ref LL_ADC_INJ_SetTriggerEdge().
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTriggerSource(). */
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerLength(). */
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    enabled (scan length of 2 ranks or more).
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetSequencerDiscont(). */
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              regular.
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    trigger source is set to an external trigger.
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @ref LL_ADC_INJ_SetTrigAuto(). */
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion */
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversions */
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 13


 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overflow */
 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overrun */
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overrun */
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sampling phase */
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sampling phase */
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    unitary conversion */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    sequence conversions */
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    contexts queue overflow */
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    contexts queue overflow */
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC master */
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    of the ADC slave */
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 14


 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    phase */
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversion */
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    conversions */
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    overflow */
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)      /* ADC group regular conversion data
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (corresponding to register DR) to be used with ADC confi
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode. Without DMA transfer, register accessed by LL func
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadConversionData32() and other
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            functions @ref LL_ADC_REG_ReadConversionDatax() */
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI  (0x00000001UL)      /* ADC group regular conversion data
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (corresponding to register CDR) to be used with ADC conf
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (available on STM32 devices with several ADC instances).
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Without DMA transfer, register accessed by LL function
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            @ref LL_ADC_REG_ReadMultiConversionData32() */
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                    /*!< ADC synchrono
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock without prescaler */
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1)                    /*!< ADC synchrono
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock with prescaler division by 2 */
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0) /*!< ADC synchrono
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            AHB clock with prescaler division by 4 */
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                      /*!< ADC asynchronou
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 15


 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                   /*!< ADC asynchronou
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 2 */
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1)                   /*!< ADC asynchronou
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 4 */
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 6 */
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2)                   /*!< ADC asynchronou
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 8 */
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 10 */
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 12 */
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 \
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 16  */
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                   /*!< ADC asynchronou
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 32 */
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0) /*!< ADC asynchronou
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 64 */
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1) /*!< ADC asynchronou
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 128 */
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 \
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_PRESC_0)                  /*!< ADC asynchrono
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            prescaler division by 256 */
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)       /*!< ADC measurement paths all disa
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)     /*!< ADC measurement path to intern
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)       /*!< ADC measurement path to intern
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                      temperature sensor */
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)     /*!< ADC measurement path to intern
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 16


 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)     /*!< ADC conversion data alignment: r
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (alignment on data register LSB bit 0)*/
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)   /*!< ADC conversion data alignment: l
 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (alignment on data register MSB bit 15)*/
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)     /*!< No ADC low power mode activated 
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)  /*!< ADC low power mode auto delay: D
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode, ADC conversions are performed only when necessary
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (when previous ADC conversion data is read).
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            See description with function @ref LL_ADC_SetLowPowerMod
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset instance
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset instance 1: ADC chann
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset instance 2: ADC chann
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset instance 3: ADC chann
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset instance 4: ADC chann
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to which the offset programmed will be applied (independ
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mapped on ADC group regular or injected) */
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (setting offset instance wise) */
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (setting offset instance wise) */
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL)     /*!< ADC group regular (available on 
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL)     /*!< ADC group injected (not availabl
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 17


 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            devices)*/
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL)     /*!< ADC both groups regular and inje
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP \
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_0_BITFIELD)                       /*!< AD
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP \
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_1_BITFIELD)                       /*!< AD
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP \
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_2_BITFIELD)                       /*!< AD
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP \
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_3_BITFIELD)                       /*!< AD
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP \
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_4_BITFIELD)                       /*!< AD
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP \
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_5_BITFIELD)                       /*!< AD
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP \
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_6_BITFIELD)                       /*!< AD
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP \
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_7_BITFIELD)                       /*!< AD
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP \
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_8_BITFIELD)                       /*!< AD
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP \
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_9_BITFIELD)                       /*!< AD
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP \
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_10_BITFIELD)                      /*!< AD
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP \
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_11_BITFIELD)                      /*!< AD
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP \
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_12_BITFIELD)                      /*!< AD
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP \
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_13_BITFIELD)                      /*!< AD
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP \
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_14_BITFIELD)                      /*!< AD
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP \
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_15_BITFIELD)                      /*!< AD
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | \
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_16_BITFIELD)                        /*!< ADC
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | \
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_17_BITFIELD)                        /*!< ADC
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | \
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_18_BITFIELD)                        /*!< ADC
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to VrefInt: Internal voltage reference.
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instance: 
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to internal temperature sensor.
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instances:
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to Vbat/3: Vbat voltage through a divider ladd
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to have channel voltage always below Vdda.
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            On STM32L4, ADC channel available only on ADC instances:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 18


 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | \
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC1. T
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            shared with ADC internal channel connected to internal t
 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            selection is done using function @ref LL_ADC_SetCommonPa
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | \
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC1. T
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            shared with ADC internal channel connected to Vbat,
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            selection is done using function @ref LL_ADC_SetCommonPa
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | \
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC2 */
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | \
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CHANNEL_ID_INTERNAL_CH_2)                      /*!< 
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC2 */
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 1, channel specific to ADC3 */
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            connected to DAC1 channel 2, channel specific to ADC3 */
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                        /*
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | \
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO. 
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2.
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                       /*
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | \
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO. 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 19


1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO. 
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | \
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO. 
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | \
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 channe
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO. 
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO. 
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)   /*
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO2.
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | \
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    /*
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | \
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_REG_TRIG_EXT_EDGE_DEFAULT)                        /*
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (ADC_CFGR_EXTEN_0)                      /*!< ADC group r
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1)                      /*!< ADC group r
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 20


1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)     /*!< ADC conversions performed in sin
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            one conversion per trigger */
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)    /*!< ADC conversions performed in con
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            after the first trigger, following conversions launched 
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            automatically */
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)     /*!< ADC conversions are not transfer
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (ADC_CFGR_DMAEN)   /*!< ADC conversion data are transfer
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            in limited mode (one shot mode): DMA transfer requests a
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            number of DMA data transfers (number of ADC conversions)
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode non-c
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            transferred by DMA, in unlimited mode: DMA transfer requ
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            whatever number of DMA data transferred (number of ADC c
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            This ADC mode is intended to be used with DMA mode circu
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)      /*!< ADC conversions are not transfe
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG) /*!< ADC conversion data are transfe
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            post processing. The ADC conversion data format must be 
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            right aligned, refer to reference manual.
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            DFSDM transfer cannot be used if DMA transfer is enabled
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            cycles replacing 2.5 ADC clock cycles (this applies to a
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with selection sampling time 2.5 ADC clock cycles, whate
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            on ADC groups regular or injected). */
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 21


1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)     /*!< ADC group regular behavior in ca
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    data preserved */
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)  /*!< ADC group regular behavior in ca
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    data overwritten */
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                 /*!< ADC group regular se
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_SQR1_L_0)                 /*!< ADC group regular se
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_SQR1_L_1)                 /*!< ADC group regular se
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_SQR1_L_1 | ADC_SQR1_L_0)  /*!< ADC group regular se
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_SQR1_L_2)                 /*!< ADC group regular se
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 5 ranks in the sequence */
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_0)  /*!< ADC group regular se
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 6 ranks in the sequence */
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1) /*!< ADC group regular seq
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 7 ranks in the sequence */
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (ADC_SQR1_L_2 | ADC_SQR1_L_1 \
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 8 ranks in the sequence */
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3)                 /*!< ADC group regular se
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 9 ranks in the sequence */
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_0)  /*!< ADC group regular se
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 10 ranks in the sequence */
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1)  /*!< ADC group regular se
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 11 ranks in the sequence */
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_1 \
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 12 ranks in the sequence */
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2)  /*!< ADC group regular se
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 13 ranks in the sequence */
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_0)                /*!< ADC group regular s
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 14 ranks in the sequence */
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_1)                /*!< ADC group regular s
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 15 ranks in the sequence */
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 \
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR1_L_1 | ADC_SQR1_L_0) /*!< ADC group regular s
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                               with 16 ranks in the 
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 22


1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                          /*!< ADC group r
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode disable */
1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR_DISCEN)                       /*!< ADC group r
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group r
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enabled with sequence interruption ev
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCEN)  /*!< ADC group r
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISCNUM_0 \
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCEN)   /*!< ADC group 
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_0 \
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCEN)                       /*!< ADC group
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 \
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_DISCNUM_0 | ADC_CFGR_DISCEN)  /*!< ADC group
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            discontinuous mode enable with sequence interruption eve
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 1 */
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 2 */
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 3 */
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 4 */
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 5 */
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 6 */
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 7 */
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 8 */
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 9 */
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 10 */
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 11 */
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 12 */
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 23


1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 13 */
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 14 */
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 15 */
1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular sequencer rank 16 */
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                        /*
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger internal: SW start. */
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                       /*
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO. 
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 TRGO2.
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM1 channe
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 TRGO. 
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM2 channe
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 TRGO. 
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)  /*
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM3 channe
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | \
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM4 TRGO. 
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 24


1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM6 TRGO. 
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)   /*
1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 channe
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            compare: input capture or output capture). Trigger edge 
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (default setting). */
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | \
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO. 
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | \
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM8 TRGO2.
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | \
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | \
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: TIM15 TRGO.
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            rising edge (default setting). */
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | \
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                        /*
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion trigger from external peripheral: external in
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Trigger edge set to rising edge (default setting). */
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to rising edge */
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to falling edge */
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            trigger polarity set to both rising and falling edges */
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)     /*!< ADC group injected conversion tr
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            Setting mandatory if ADC group injected injected trigger
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            an external trigger. */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)   /*!< ADC group injected conversion tr
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular. Setting compliant only with group injected trig
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            SW start, without any further action on  ADC group injec
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            or stop: in this case, ADC group injected is controlled 
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular. */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 25


1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)   /* Group injected sequence context 
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            the queue maintains the last context active perpetually.
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)   /* Group injected sequence context 
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            and can contain up to 2 contexts. When all contexts have
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            the queue is empty and injected group triggers are disab
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS) /* Group injected sequence context 
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            only 1 sequence can be configured and is active perpetua
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (equivalent to sequencer of 1 rank: ADC conversion on on
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 2 ranks in the sequence */
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 3 ranks in the sequence */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            with 4 ranks in the sequence */
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)     /*!< ADC group injected sequencer dis
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            disable */
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN) /*!< ADC group injected sequencer dis
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            enable with sequence interruption every rank */
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET \
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS) /*!< ADC group inj
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET \
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS) /*!< ADC group inj
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET \
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS) /*!< ADC group inj
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET \
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS) /*!< ADC group inj
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 26


1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)       /*!< Sampling time 2.5 ADC clock cy
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (ADC_SMPR2_SMP10_0)  /*!< Sampling time 6.5 ADC clock cy
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR2_SMP10_1)  /*!< Sampling time 12.5 ADC clock c
1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (ADC_SMPR2_SMP10_1 \
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 24.5 ADC clock 
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2)  /*!< Sampling time 47.5 ADC clock c
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2 \
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 92.5 ADC clock 
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 \
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1) /*!< Sampling time 247.5 ADC clock
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 \
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_1 \
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SMPR2_SMP10_0) /*!< Sampling time 640.5 ADC clock
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to single ended (literal also used to set calibratio
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to differential (literal also used to set calibratio
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            set to both single ended and differential (literal used 
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            calibration factors) */
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK \
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR1_REGOFFSET) /*!< ADC analog watchdog numbe
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK \
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR2_REGOFFSET) /*!< ADC analog watchdog numbe
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK \
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_AWD_CR3_REGOFFSET) /*!< ADC analog watchdog numbe
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                           /*!< ADC analog
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            disabled */
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK \
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN)                       /*!< ADC analo
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by group regular only */
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK \
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN)                      /*!< ADC analo
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by group injected only */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 27


1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK \
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN)    /*!< ADC analo
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of all channels, converted by either group regular or in
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group regular only
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by group injected onl
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN0, converted by either group regul
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group regular only
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by group injected onl
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) \
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN1, converted by either group regul
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group regular only
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by group injected onl
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) \
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN2, converted by either group regul
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group regular only
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by group injected onl
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) \
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN3, converted by either group regul
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group regular only
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by group injected onl
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) \
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN4, converted by either group regul
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group regular only
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 28


1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by group injected onl
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) \
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN5, converted by either group regul
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group regular only
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by group injected onl
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) \
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN6, converted by either group regul
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group regular only
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by group injected onl
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) \
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN7, converted by either group regul
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group regular only
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by group injected onl
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) \
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN8, converted by either group regul
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group regular only
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by group injected onl
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) \
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN9, converted by either group regul
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group regular onl
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) \
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by group injected on
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)\
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN10, converted by either group regu
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 29


1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group regular onl
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by group injected on
1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) \
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN11, converted by either group regu
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group regular onl
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by group injected on
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) \
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN12, converted by either group regu
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group regular onl
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by group injected on
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) \
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN13, converted by either group regu
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group regular onl
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by group only */
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) \
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN14, converted by either group regu
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            monitoring of ADC channel ADCx_IN15, converted by group 
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by group injected on
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) \
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN15, converted by either group
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular or injected */
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group regular onl
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by group injected on
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 30


1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN16, converted by either group regu
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group regular onl
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by group injected on
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) \
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN17, converted by either group regu
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group regular onl
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by group injected on
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) \
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC channel ADCx_IN18, converted by either group
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular or injected */
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by group regular only */
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by group injected only */
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) \
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to VrefInt: Internal
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage reference, converted by either group regular or 
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by group regular only */
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by group injected only */
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) \
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to internal temperatur
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            converted by either group regular or injected */
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda, converted by group regular only */
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 31


1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda, converted by group injected only */
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) \
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL
1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to Vbat/3: Vbat
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            voltage through a divider ladder of factor 1/3 to have c
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            always below Vdda */
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group regular onl
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group injected on
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) \
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by either group regu
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group regular onl
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by group injected on
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC1, converted by either group regu
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group regular onl
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by group injected on
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 32


1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC2, converted by either group regu
1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group regular onl
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group injected on
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 1,
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by either group regu
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)    /*!< ADC analo
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group regular onl
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)   /*!< ADC analo
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by group injected on
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) \
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN \
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR_AWD1SGL)                      /*!< ADC analo
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            of ADC internal channel connected to DAC1 channel 2,
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            channel specific to ADC3, converted by either group regu
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1)      /*!< ADC analog watchdog threshold hi
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_TR1_LT1)      /*!< ADC analog watchdog threshold lo
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 \
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_TR1_LT1)     /*!< ADC analog watchdog both thresh
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            concatenated into the same data */
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                      /*!< ADC oversamplin
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (ADC_CFGR2_ROVSE)                   /*!< ADC oversamplin
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 33


1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            is temporary stopped and continued afterwards. */
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group regular. If group injected interrupts group re
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            when ADC group injected is triggered, the oversampling o
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            is resumed from start (oversampler buffer reset). */
1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (ADC_CFGR2_JOVSE)                   /*!< ADC oversamplin
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            ADC group injected. */
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*!< ADC oversamplin
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            both ADC groups regular and injected. If group injected 
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular: when ADC group injected is triggered, the overs
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular is resumed from start (oversampler buffer reset)
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)     /*!< ADC oversampling discontinuous m
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (all conversions of oversampling ratio are done from 1 trigger) */
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)  /*!< ADC oversampling discontinuous m
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            mode (each conversion of oversampling ratio needs a trig
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                        /*!< ADC oversampl
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (ADC_CFGR2_OVSR_0)                    /*!< ADC oversampl
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (ADC_CFGR2_OVSR_1)                    /*!< ADC oversampl
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2)                    /*!< ADC oversampl
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_0) /*!< ADC oversampl
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1) /*!< ADC oversampl
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 \
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSR_0)                   /*!< ADC oversamp
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of conversions data computed to result as oversampl
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (before potential shift) */
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 34


1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data right shift
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                        /*!< ADC oversampl
1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data is not divided to resul
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            conversion data) */
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (ADC_CFGR2_OVSS_0)                    /*!< ADC oversampl
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (ADC_CFGR2_OVSS_1)                    /*!< ADC oversampl
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (ADC_CFGR2_OVSS_1 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (ADC_CFGR2_OVSS_2)                    /*!< ADC oversampl
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_0) /*!< ADC oversampl
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1) /*!< ADC oversampl
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 \
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CFGR2_OVSS_0)                   /*!< ADC oversamp
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3)                    /*!< ADC oversampl
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            (sum of the ADC conversions data (after OVS ratio) is di
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            to result as oversampling conversion data) */
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                    /*!< ADC dual mode dis
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            independent mode) */
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1) /*!< ADC dual mode ena
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            simultaneous */
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 \
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DUAL_0)                  /*!< ADC dual mode e
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular interleaved */
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (ADC_CCR_DUAL_2 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            simultaneous */
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            alternate trigger. Works only with external triggers (no
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (ADC_CCR_DUAL_0)                  /*!< ADC dual mode ena
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular simultaneous + group injected simultaneous */
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (ADC_CCR_DUAL_1)                  /*!< ADC dual mode ena
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular simultaneous + group injected alternate trigger 
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (ADC_CCR_DUAL_1 | ADC_CCR_DUAL_0) /*!< ADC dual mode ena
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            regular interleaved + group injected simultaneous */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 35


1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                    /*!< ADC multimode g
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA: each ADC uses its 
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              with its individual DMA transfer settings */
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (ADC_CCR_MDMA_1)                  /*!< ADC multimode g
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 12 and 10 
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!< ADC multimode g
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in limited mode (one shot mode): DMA tran
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              are stopped when number of DMA data transfers (number 
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              is reached. This ADC mode is intended to be used with 
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              non-circular. Setting for ADC resolution of 8 and 6 bi
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1) /*!< ADC multimode g
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Setting for ADC resolution of 12 and 10 bits */
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 \
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                               | ADC_CCR_MDMA_0)                 /*!< ADC multimode 
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              conversions are transferred by DMA, one DMA channel fo
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ADC master), in unlimited mode: DMA transfer requests 
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              whatever number of DMA data transferred (number of ADC
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This ADC mode is intended to be used with DMA mode cir
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Setting for ADC resolution of 8 and 6 bits */
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                      /*!< ADC multimode d
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 1 ADC clock cycle */
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (ADC_CCR_DELAY_0)                   /*!< ADC multimode d
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 2 ADC clock cycles */
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (ADC_CCR_DELAY_1)                   /*!< ADC multimode d
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 3 ADC clock cycles */
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (ADC_CCR_DELAY_1 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 4 ADC clock cycles */
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (ADC_CCR_DELAY_2)                   /*!< ADC multimode d
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 5 ADC clock cycles */
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 6 ADC clock cycles */
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1) /*!< ADC multimode d
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 7 ADC clock cycles */
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 36


1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 8 ADC clock cycles */
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3)                   /*!< ADC multimode d
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 9 ADC clock cycles */
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_0) /*!< ADC multimode d
1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 10 ADC clock cycles */
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1) /*!< ADC multimode d
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 11 ADC clock cycles */
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3 | ADC_CCR_DELAY_1 \
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CCR_DELAY_0)                  /*!< ADC multimode 
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            sampling phases: 12 ADC clock cycles */
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (ADC_CDR_RDATA_MST) /*!< In multimode, selection among s
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: ADC master */
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV) /*!< In multimode, selection among s
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: ADC slave */
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV \
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CDR_RDATA_MST) /*!< In multimode, selection among
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                            instances: both ADC master and ADC slave */
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE         (LL_ADC_OVS_SHIFT_NONE)
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1            (LL_ADC_OVS_SHIFT_RIGHT_1)
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2            (LL_ADC_OVS_SHIFT_RIGHT_2)
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3            (LL_ADC_OVS_SHIFT_RIGHT_3)
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4            (LL_ADC_OVS_SHIFT_RIGHT_4)
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5            (LL_ADC_OVS_SHIFT_RIGHT_5)
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6            (LL_ADC_OVS_SHIFT_RIGHT_6)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 37


2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7            (LL_ADC_OVS_SHIFT_RIGHT_7)
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8            (LL_ADC_OVS_SHIFT_RIGHT_8)
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  calibration parameters. This value
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  (to fit on signed word or double w
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  to an inconsistent temperature val
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)           /*!< Delay for ADC stabilization time
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                               regulator start-up time) */
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)        /*!< Delay for internal voltage refer
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 38


2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    time */
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)        /*!< Delay for temperature sensor sta
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)        /*!< Delay for temperature sensor buf
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    time (starting from ADC enable, 
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    @ref LL_ADC_Enable()) */
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)        /*!< Delay required between ADC end o
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                    and ADC enable */
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 39


2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 40


2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 41


2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                              |    
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 42


2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                       connected to a GPIO pin).
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 43


2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 44


2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 45


2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 46


2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 47


2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 48


2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 49


2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 50


2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 51


2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 52


2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 53


2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?       \
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (__ADC_RESOLUTION__),          \
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    LL_ADC_RESOLUTION_12B)         \
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   * (__VREFANALOG_VOLTAGE__))                                     \
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  / TEMPSENSOR_CAL_VREFANALOG)                                     \
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) + TEMPSENSOR_CAL1_TEMP                                                        \
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  )                                                                                \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 54


2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  :                                                                                \
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (unit: uV/DegCelsius).
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (at temperature and Vref+ defined in parameters below) (u
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to datasheet parameter "V30" (correspon
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       (see parameter above) is corresponding (unit: mV)
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 55


3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 56


3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(const ADC_TypeDef *ADCx, uint32_t Register)
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC instances
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 57


3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  28              		.loc 1 3188 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7]
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
  45              		.loc 1 3189 3
  46 000a 7B68     		ldr	r3, [r7, #4]
  47 000c 9B68     		ldr	r3, [r3, #8]
  48 000e 23F47C12 		bic	r2, r3, #4128768
  49 0012 3B68     		ldr	r3, [r7]
  50 0014 1A43     		orrs	r2, r2, r3
  51 0016 7B68     		ldr	r3, [r7, #4]
  52 0018 9A60     		str	r2, [r3, #8]
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
  53              		.loc 1 3190 1
  54 001a 00BF     		nop
  55 001c 0C37     		adds	r7, r7, #12
  56              	.LCFI3:
  57              		.cfi_def_cfa_offset 4
  58 001e BD46     		mov	sp, r7
  59              	.LCFI4:
  60              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 58


  61              		@ sp needed
  62 0020 5DF8047B 		ldr	r7, [sp], #4
  63              	.LCFI5:
  64              		.cfi_restore 7
  65              		.cfi_def_cfa_offset 0
  66 0024 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE133:
  70              		.section	.text.LL_ADC_SetCommonPathInternalCh,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	LL_ADC_SetCommonPathInternalCh:
  77              	.LFB135:
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(const ADC_Common_TypeDef *ADCxy_COMMON)
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 59


3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
  78              		.loc 1 3253 1
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI6:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 83B0     		sub	sp, sp, #12
  88              	.LCFI7:
  89              		.cfi_def_cfa_offset 16
  90 0004 00AF     		add	r7, sp, #0
  91              	.LCFI8:
  92              		.cfi_def_cfa_register 7
  93 0006 7860     		str	r0, [r7, #4]
  94 0008 3960     		str	r1, [r7]
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
  95              		.loc 1 3254 3
  96 000a 7B68     		ldr	r3, [r7, #4]
  97 000c 9B68     		ldr	r3, [r3, #8]
  98 000e 23F0E072 		bic	r2, r3, #29360128
  99 0012 3B68     		ldr	r3, [r7]
 100 0014 1A43     		orrs	r2, r2, r3
 101 0016 7B68     		ldr	r3, [r7, #4]
 102 0018 9A60     		str	r2, [r3, #8]
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 103              		.loc 1 3255 1
 104 001a 00BF     		nop
 105 001c 0C37     		adds	r7, r7, #12
 106              	.LCFI9:
 107              		.cfi_def_cfa_offset 4
 108 001e BD46     		mov	sp, r7
 109              	.LCFI10:
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 60


 112 0020 5DF8047B 		ldr	r7, [sp], #4
 113              	.LCFI11:
 114              		.cfi_restore 7
 115              		.cfi_def_cfa_offset 0
 116 0024 7047     		bx	lr
 117              		.cfi_endproc
 118              	.LFE135:
 120              		.section	.text.LL_ADC_GetCommonPathInternalCh,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 126              	LL_ADC_GetCommonPathInternalCh:
 127              	.LFB138:
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 61


3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(const ADC_Common_TypeDef *ADCxy_COMMON)
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 128              		.loc 1 3335 1
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 8
 131              		@ frame_needed = 1, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 133 0000 80B4     		push	{r7}
 134              	.LCFI12:
 135              		.cfi_def_cfa_offset 4
 136              		.cfi_offset 7, -4
 137 0002 83B0     		sub	sp, sp, #12
 138              	.LCFI13:
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              	.LCFI14:
 142              		.cfi_def_cfa_register 7
 143 0006 7860     		str	r0, [r7, #4]
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
 144              		.loc 1 3336 21
 145 0008 7B68     		ldr	r3, [r7, #4]
 146 000a 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 62


 147              		.loc 1 3336 10
 148 000c 03F0E073 		and	r3, r3, #29360128
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 149              		.loc 1 3337 1
 150 0010 1846     		mov	r0, r3
 151 0012 0C37     		adds	r7, r7, #12
 152              	.LCFI15:
 153              		.cfi_def_cfa_offset 4
 154 0014 BD46     		mov	sp, r7
 155              	.LCFI16:
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0016 5DF8047B 		ldr	r7, [sp], #4
 159              	.LCFI17:
 160              		.cfi_restore 7
 161              		.cfi_def_cfa_offset 0
 162 001a 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE138:
 166              		.section	.text.LL_ADC_SetOffset,"ax",%progbits
 167              		.align	1
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	LL_ADC_SetOffset:
 173              	.LFB147:
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 63


3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK)
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     >> ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4)
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    & ~(SingleDiff & ADC_CALFACT_CALFACT_S)));
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(const ADC_TypeDef *ADCx, uint32_t SingleDiff)
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK))
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >>
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4));
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 64


3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(const ADC_TypeDef *ADCx)
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 65


3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(const ADC_TypeDef *ADCx)
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 66


3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(const ADC_TypeDef *ADCx)
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset instance 1, 2, 3 or 4.
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 67


3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 68


3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 174              		.loc 1 3665 1
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 24
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              	.LCFI18:
 181              		.cfi_def_cfa_offset 4
 182              		.cfi_offset 7, -4
 183 0002 87B0     		sub	sp, sp, #28
 184              	.LCFI19:
 185              		.cfi_def_cfa_offset 32
 186 0004 00AF     		add	r7, sp, #0
 187              	.LCFI20:
 188              		.cfi_def_cfa_register 7
 189 0006 F860     		str	r0, [r7, #12]
 190 0008 B960     		str	r1, [r7, #8]
 191 000a 7A60     		str	r2, [r7, #4]
 192 000c 3B60     		str	r3, [r7]
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 193              		.loc 1 3666 25
 194 000e FB68     		ldr	r3, [r7, #12]
 195 0010 6033     		adds	r3, r3, #96
 196 0012 1A46     		mov	r2, r3
 197 0014 BB68     		ldr	r3, [r7, #8]
 198 0016 9B00     		lsls	r3, r3, #2
 199 0018 1344     		add	r3, r3, r2
 200              		.loc 1 3666 18
 201 001a 7B61     		str	r3, [r7, #20]
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 202              		.loc 1 3668 3
 203 001c 7B69     		ldr	r3, [r7, #20]
 204 001e 1A68     		ldr	r2, [r3]
 205 0020 084B     		ldr	r3, .L6
 206 0022 1340     		ands	r3, r3, r2
 207 0024 7A68     		ldr	r2, [r7, #4]
 208 0026 02F0F841 		and	r1, r2, #2080374784
 209 002a 3A68     		ldr	r2, [r7]
 210 002c 0A43     		orrs	r2, r2, r1
 211 002e 1343     		orrs	r3, r3, r2
 212 0030 43F00042 		orr	r2, r3, #-2147483648
 213 0034 7B69     		ldr	r3, [r7, #20]
 214 0036 1A60     		str	r2, [r3]
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 69


3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 215              		.loc 1 3671 1
 216 0038 00BF     		nop
 217 003a 1C37     		adds	r7, r7, #28
 218              	.LCFI21:
 219              		.cfi_def_cfa_offset 4
 220 003c BD46     		mov	sp, r7
 221              	.LCFI22:
 222              		.cfi_def_cfa_register 13
 223              		@ sp needed
 224 003e 5DF8047B 		ldr	r7, [sp], #4
 225              	.LCFI23:
 226              		.cfi_restore 7
 227              		.cfi_def_cfa_offset 0
 228 0042 7047     		bx	lr
 229              	.L7:
 230              		.align	2
 231              	.L6:
 232 0044 00F0FF03 		.word	67104768
 233              		.cfi_endproc
 234              	.LFE147:
 236              		.section	.text.LL_ADC_GetOffsetChannel,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	LL_ADC_GetOffsetChannel:
 243              	.LFB148:
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 70


3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 244              		.loc 1 3745 1
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 16
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              	.LCFI24:
 251              		.cfi_def_cfa_offset 4
 252              		.cfi_offset 7, -4
 253 0002 85B0     		sub	sp, sp, #20
 254              	.LCFI25:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 71


 255              		.cfi_def_cfa_offset 24
 256 0004 00AF     		add	r7, sp, #0
 257              	.LCFI26:
 258              		.cfi_def_cfa_register 7
 259 0006 7860     		str	r0, [r7, #4]
 260 0008 3960     		str	r1, [r7]
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 261              		.loc 1 3746 31
 262 000a 7B68     		ldr	r3, [r7, #4]
 263 000c 6033     		adds	r3, r3, #96
 264 000e 1A46     		mov	r2, r3
 265 0010 3B68     		ldr	r3, [r7]
 266 0012 9B00     		lsls	r3, r3, #2
 267 0014 1344     		add	r3, r3, r2
 268              		.loc 1 3746 24
 269 0016 FB60     		str	r3, [r7, #12]
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 270              		.loc 1 3748 10
 271 0018 FB68     		ldr	r3, [r7, #12]
 272 001a 1B68     		ldr	r3, [r3]
 273 001c 03F0F843 		and	r3, r3, #2080374784
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 274              		.loc 1 3749 1
 275 0020 1846     		mov	r0, r3
 276 0022 1437     		adds	r7, r7, #20
 277              	.LCFI27:
 278              		.cfi_def_cfa_offset 4
 279 0024 BD46     		mov	sp, r7
 280              	.LCFI28:
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0026 5DF8047B 		ldr	r7, [sp], #4
 284              	.LCFI29:
 285              		.cfi_restore 7
 286              		.cfi_def_cfa_offset 0
 287 002a 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE148:
 291              		.section	.text.LL_ADC_SetOffsetState,"ax",%progbits
 292              		.align	1
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	LL_ADC_SetOffsetState:
 298              	.LFB150:
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 72


3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(const ADC_TypeDef *ADCx, uint32_t Offsety)
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset instance 1, 2, 3 or 4:
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 299              		.loc 1 3804 1
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 24
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              	.LCFI30:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 87B0     		sub	sp, sp, #28
 309              	.LCFI31:
 310              		.cfi_def_cfa_offset 32
 311 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 73


 312              	.LCFI32:
 313              		.cfi_def_cfa_register 7
 314 0006 F860     		str	r0, [r7, #12]
 315 0008 B960     		str	r1, [r7, #8]
 316 000a 7A60     		str	r2, [r7, #4]
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 317              		.loc 1 3805 25
 318 000c FB68     		ldr	r3, [r7, #12]
 319 000e 6033     		adds	r3, r3, #96
 320 0010 1A46     		mov	r2, r3
 321 0012 BB68     		ldr	r3, [r7, #8]
 322 0014 9B00     		lsls	r3, r3, #2
 323 0016 1344     		add	r3, r3, r2
 324              		.loc 1 3805 18
 325 0018 7B61     		str	r3, [r7, #20]
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 326              		.loc 1 3807 3
 327 001a 7B69     		ldr	r3, [r7, #20]
 328 001c 1B68     		ldr	r3, [r3]
 329 001e 23F00042 		bic	r2, r3, #-2147483648
 330 0022 7B68     		ldr	r3, [r7, #4]
 331 0024 1A43     		orrs	r2, r2, r3
 332 0026 7B69     		ldr	r3, [r7, #20]
 333 0028 1A60     		str	r2, [r3]
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 334              		.loc 1 3810 1
 335 002a 00BF     		nop
 336 002c 1C37     		adds	r7, r7, #28
 337              	.LCFI33:
 338              		.cfi_def_cfa_offset 4
 339 002e BD46     		mov	sp, r7
 340              	.LCFI34:
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 0030 5DF8047B 		ldr	r7, [sp], #4
 344              	.LCFI35:
 345              		.cfi_restore 7
 346              		.cfi_def_cfa_offset 0
 347 0034 7047     		bx	lr
 348              		.cfi_endproc
 349              	.LFE150:
 351              		.section	.text.LL_ADC_REG_IsTriggerSourceSWStart,"ax",%progbits
 352              		.align	1
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	LL_ADC_REG_IsTriggerSourceSWStart:
 358              	.LFB154:
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset instance 1, 2, 3 or 4:
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 74


3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(const ADC_TypeDef *ADCx, uint32_t Offsety)
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(const ADC_TypeDef *ADCx)
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 75


3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 76


3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(const ADC_TypeDef *ADCx)
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((trigger_source
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR_EXTSEL)
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR_EXTEN)
3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 359              		.loc 1 3985 1
 360              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 77


 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364 0000 80B4     		push	{r7}
 365              	.LCFI36:
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 0002 83B0     		sub	sp, sp, #12
 369              	.LCFI37:
 370              		.cfi_def_cfa_offset 16
 371 0004 00AF     		add	r7, sp, #0
 372              	.LCFI38:
 373              		.cfi_def_cfa_register 7
 374 0006 7860     		str	r0, [r7, #4]
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
 375              		.loc 1 3986 12
 376 0008 7B68     		ldr	r3, [r7, #4]
 377 000a DB68     		ldr	r3, [r3, #12]
 378 000c 03F44063 		and	r3, r3, #3072
 379              		.loc 1 3986 103
 380 0010 002B     		cmp	r3, #0
 381 0012 01D1     		bne	.L12
 382              		.loc 1 3986 103 is_stmt 0 discriminator 1
 383 0014 0123     		movs	r3, #1
 384 0016 00E0     		b	.L14
 385              	.L12:
 386              		.loc 1 3986 103 discriminator 2
 387 0018 0023     		movs	r3, #0
 388              	.L14:
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 389              		.loc 1 3987 1 is_stmt 1 discriminator 5
 390 001a 1846     		mov	r0, r3
 391 001c 0C37     		adds	r7, r7, #12
 392              	.LCFI39:
 393              		.cfi_def_cfa_offset 4
 394 001e BD46     		mov	sp, r7
 395              	.LCFI40:
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0020 5DF8047B 		ldr	r7, [sp], #4
 399              	.LCFI41:
 400              		.cfi_restore 7
 401              		.cfi_def_cfa_offset 0
 402 0024 7047     		bx	lr
 403              		.cfi_endproc
 404              	.LFE154:
 406              		.section	.text.LL_ADC_REG_SetSequencerRanks,"ax",%progbits
 407              		.align	1
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	LL_ADC_REG_SetSequencerRanks:
 413              	.LFB161:
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 78


3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(const ADC_TypeDef *ADCx)
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 79


4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 80


4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(const ADC_TypeDef *ADCx)
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 81


4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 82


4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 83


4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 414              		.loc 1 4287 1
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 24
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 80B4     		push	{r7}
 420              	.LCFI42:
 421              		.cfi_def_cfa_offset 4
 422              		.cfi_offset 7, -4
 423 0002 87B0     		sub	sp, sp, #28
 424              	.LCFI43:
 425              		.cfi_def_cfa_offset 32
 426 0004 00AF     		add	r7, sp, #0
 427              	.LCFI44:
 428              		.cfi_def_cfa_register 7
 429 0006 F860     		str	r0, [r7, #12]
 430 0008 B960     		str	r1, [r7, #8]
 431 000a 7A60     		str	r2, [r7, #4]
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
 432              		.loc 1 4292 25
 433 000c FB68     		ldr	r3, [r7, #12]
 434 000e 3033     		adds	r3, r3, #48
 435 0010 1A46     		mov	r2, r3
 436 0012 BB68     		ldr	r3, [r7, #8]
 437 0014 1B0A     		lsrs	r3, r3, #8
 438 0016 9B00     		lsls	r3, r3, #2
 439 0018 03F00C03 		and	r3, r3, #12
 440 001c 1344     		add	r3, r3, r2
 441              		.loc 1 4292 18
 442 001e 7B61     		str	r3, [r7, #20]
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGO
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 443              		.loc 1 4295 3
 444 0020 7B69     		ldr	r3, [r7, #20]
 445 0022 1A68     		ldr	r2, [r3]
 446 0024 BB68     		ldr	r3, [r7, #8]
 447 0026 03F01F03 		and	r3, r3, #31
 448 002a 1F21     		movs	r1, #31
 449 002c 01FA03F3 		lsl	r3, r1, r3
 450 0030 DB43     		mvns	r3, r3
 451 0032 1A40     		ands	r2, r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 84


 452 0034 7B68     		ldr	r3, [r7, #4]
 453 0036 9B0E     		lsrs	r3, r3, #26
 454 0038 03F01F01 		and	r1, r3, #31
 455 003c BB68     		ldr	r3, [r7, #8]
 456 003e 03F01F03 		and	r3, r3, #31
 457 0042 01FA03F3 		lsl	r3, r1, r3
 458 0046 1A43     		orrs	r2, r2, r3
 459 0048 7B69     		ldr	r3, [r7, #20]
 460 004a 1A60     		str	r2, [r3]
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 461              		.loc 1 4299 1
 462 004c 00BF     		nop
 463 004e 1C37     		adds	r7, r7, #28
 464              	.LCFI45:
 465              		.cfi_def_cfa_offset 4
 466 0050 BD46     		mov	sp, r7
 467              	.LCFI46:
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 0052 5DF8047B 		ldr	r7, [sp], #4
 471              	.LCFI47:
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0056 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE161:
 478              		.section	.text.LL_ADC_INJ_IsTriggerSourceSWStart,"ax",%progbits
 479              		.align	1
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 484              	LL_ADC_INJ_IsTriggerSourceSWStart:
 485              	.LFB171:
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 85


4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 86


4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1,
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQR
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 87


4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(const ADC_TypeDef *ADCx)
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 88


4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(const ADC_TypeDef *ADCx)
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 89


4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(const ADC_TypeDef *ADCx)
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(const ADC_TypeDef *ADCx)
4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 90


4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 series having this setting set by HW default value).
4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 91


4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(const ADC_TypeDef *ADCx)
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t shift_jexten = ((trigger_source & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS 
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((trigger_source
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> shift_jexten) & ADC_JSQR_JEXTSEL)
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> shift_jexten) & ADC_JSQR_JEXTEN)
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(const ADC_TypeDef *ADCx)
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 486              		.loc 1 4715 1
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 92


 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              	.LCFI48:
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 83B0     		sub	sp, sp, #12
 496              	.LCFI49:
 497              		.cfi_def_cfa_offset 16
 498 0004 00AF     		add	r7, sp, #0
 499              	.LCFI50:
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
 502              		.loc 1 4716 12
 503 0008 7B68     		ldr	r3, [r7, #4]
 504 000a DB6C     		ldr	r3, [r3, #76]
 505 000c 03F0C003 		and	r3, r3, #192
 506              		.loc 1 4716 105
 507 0010 002B     		cmp	r3, #0
 508 0012 01D1     		bne	.L17
 509              		.loc 1 4716 105 is_stmt 0 discriminator 1
 510 0014 0123     		movs	r3, #1
 511 0016 00E0     		b	.L19
 512              	.L17:
 513              		.loc 1 4716 105 discriminator 2
 514 0018 0023     		movs	r3, #0
 515              	.L19:
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 516              		.loc 1 4717 1 is_stmt 1 discriminator 5
 517 001a 1846     		mov	r0, r3
 518 001c 0C37     		adds	r7, r7, #12
 519              	.LCFI51:
 520              		.cfi_def_cfa_offset 4
 521 001e BD46     		mov	sp, r7
 522              	.LCFI52:
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0020 5DF8047B 		ldr	r7, [sp], #4
 526              	.LCFI53:
 527              		.cfi_restore 7
 528              		.cfi_def_cfa_offset 0
 529 0024 7047     		bx	lr
 530              		.cfi_endproc
 531              	.LFE171:
 533              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
 534              		.align	1
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 539              	LL_ADC_SetChannelSamplingTime:
 540              	.LFB185:
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 93


4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(const ADC_TypeDef *ADCx)
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 94


4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(const ADC_TypeDef *ADCx)
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(const ADC_TypeDef *ADCx)
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 95


4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 96


4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK),
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              << (Rank & ADC_INJ_RANK_ID_JSQR_MASK));
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 97


4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             4.21 Ms/s)).\n
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(const ADC_TypeDef *ADCx, uint32_t Rank)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               << (Rank & ADC_INJ_RANK_ID_JSQR_MASK))
4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 98


5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(const ADC_TypeDef *ADCx)
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 99


5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(const ADC_TypeDef *ADCx)
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 100


5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 101


5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 102


5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 103


5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_4 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_3 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_2 & ADC_INJ_RANK_ID_JSQR_MASK)) |
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 104


5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               << (LL_ADC_INJ_RANK_1 & ADC_INJ_RANK_ID_JSQR_MASK)) |
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 105


5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 106


5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 541              		.loc 1 5465 1
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 24
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 546 0000 80B4     		push	{r7}
 547              	.LCFI54:
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 87B0     		sub	sp, sp, #28
 551              	.LCFI55:
 552              		.cfi_def_cfa_offset 32
 553 0004 00AF     		add	r7, sp, #0
 554              	.LCFI56:
 555              		.cfi_def_cfa_register 7
 556 0006 F860     		str	r0, [r7, #12]
 557 0008 B960     		str	r1, [r7, #8]
 558 000a 7A60     		str	r2, [r7, #4]
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1,
 559              		.loc 1 5470 25
 560 000c FB68     		ldr	r3, [r7, #12]
 561 000e 1433     		adds	r3, r3, #20
 562 0010 1A46     		mov	r2, r3
 563 0012 BB68     		ldr	r3, [r7, #8]
 564 0014 5B0E     		lsrs	r3, r3, #25
 565 0016 9B00     		lsls	r3, r3, #2
 566 0018 03F00403 		and	r3, r3, #4
 567 001c 1344     		add	r3, r3, r2
 568              		.loc 1 5470 18
 569 001e 7B61     		str	r3, [r7, #20]
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_S
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 570              		.loc 1 5473 3
 571 0020 7B69     		ldr	r3, [r7, #20]
 572 0022 1A68     		ldr	r2, [r3]
 573 0024 BB68     		ldr	r3, [r7, #8]
 574 0026 1B0D     		lsrs	r3, r3, #20
 575 0028 03F01F03 		and	r3, r3, #31
 576 002c 0721     		movs	r1, #7
 577 002e 01FA03F3 		lsl	r3, r1, r3
 578 0032 DB43     		mvns	r3, r3
 579 0034 1A40     		ands	r2, r2, r3
 580 0036 BB68     		ldr	r3, [r7, #8]
 581 0038 1B0D     		lsrs	r3, r3, #20
 582 003a 03F01F03 		and	r3, r3, #31
 583 003e 7968     		ldr	r1, [r7, #4]
 584 0040 01FA03F3 		lsl	r3, r1, r3
 585 0044 1A43     		orrs	r2, r2, r3
 586 0046 7B69     		ldr	r3, [r7, #20]
 587 0048 1A60     		str	r2, [r3]
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 107


5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 588              		.loc 1 5476 1
 589 004a 00BF     		nop
 590 004c 1C37     		adds	r7, r7, #28
 591              	.LCFI57:
 592              		.cfi_def_cfa_offset 4
 593 004e BD46     		mov	sp, r7
 594              	.LCFI58:
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 0050 5DF8047B 		ldr	r7, [sp], #4
 598              	.LCFI59:
 599              		.cfi_restore 7
 600              		.cfi_def_cfa_offset 0
 601 0054 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE185:
 605              		.section	.text.LL_ADC_SetChannelSingleDiff,"ax",%progbits
 606              		.align	1
 607              		.syntax unified
 608              		.thumb
 609              		.thumb_func
 611              	LL_ADC_SetChannelSingleDiff:
 612              	.LFB187:
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 108


5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(const ADC_TypeDef *ADCx, uint32_t Channel)
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                  >> ADC_SMPRX_REGOFFSET_POS));
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 109


5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BI
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 110


 613              		.loc 1 5622 1
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 16
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              	.LCFI60:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 85B0     		sub	sp, sp, #20
 623              	.LCFI61:
 624              		.cfi_def_cfa_offset 24
 625 0004 00AF     		add	r7, sp, #0
 626              	.LCFI62:
 627              		.cfi_def_cfa_register 7
 628 0006 F860     		str	r0, [r7, #12]
 629 0008 B960     		str	r1, [r7, #8]
 630 000a 7A60     		str	r2, [r7, #4]
5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
 631              		.loc 1 5626 3
 632 000c FB68     		ldr	r3, [r7, #12]
 633 000e D3F8B020 		ldr	r2, [r3, #176]
 634 0012 BB68     		ldr	r3, [r7, #8]
 635 0014 C3F31203 		ubfx	r3, r3, #0, #19
 636 0018 DB43     		mvns	r3, r3
 637 001a 1A40     		ands	r2, r2, r3
 638 001c 7B68     		ldr	r3, [r7, #4]
 639 001e 03F01803 		and	r3, r3, #24
 640 0022 0849     		ldr	r1, .L22
 641 0024 D940     		lsrs	r1, r1, r3
 642 0026 BB68     		ldr	r3, [r7, #8]
 643 0028 0B40     		ands	r3, r3, r1
 644 002a C3F31203 		ubfx	r3, r3, #0, #19
 645 002e 1A43     		orrs	r2, r2, r3
 646 0030 FB68     		ldr	r3, [r7, #12]
 647 0032 C3F8B020 		str	r2, [r3, #176]
5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK)));
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 648              		.loc 1 5630 1
 649 0036 00BF     		nop
 650 0038 1437     		adds	r7, r7, #20
 651              	.LCFI63:
 652              		.cfi_def_cfa_offset 4
 653 003a BD46     		mov	sp, r7
 654              	.LCFI64:
 655              		.cfi_def_cfa_register 13
 656              		@ sp needed
 657 003c 5DF8047B 		ldr	r7, [sp], #4
 658              	.LCFI65:
 659              		.cfi_restore 7
 660              		.cfi_def_cfa_offset 0
 661 0040 7047     		bx	lr
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 111


 662              	.L23:
 663 0042 00BF     		.align	2
 664              	.L22:
 665 0044 FFFF0700 		.word	524287
 666              		.cfi_endproc
 667              	.LFE187:
 669              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
 670              		.align	1
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 675              	LL_ADC_SetAnalogWDMonitChannels:
 676              	.LFB189:
5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(const ADC_TypeDef *ADCx, uint32_t Channel)
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 112


5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 113


5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 114


5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 677              		.loc 1 5830 1
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 24
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              	.LCFI66:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 87B0     		sub	sp, sp, #28
 687              	.LCFI67:
 688              		.cfi_def_cfa_offset 32
 689 0004 00AF     		add	r7, sp, #0
 690              	.LCFI68:
 691              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 115


 692 0006 F860     		str	r0, [r7, #12]
 693 0008 B960     		str	r1, [r7, #8]
 694 000a 7A60     		str	r2, [r7, #4]
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
 695              		.loc 1 5835 25
 696 000c FB68     		ldr	r3, [r7, #12]
 697 000e 0C33     		adds	r3, r3, #12
 698 0010 1846     		mov	r0, r3
 699 0012 BB68     		ldr	r3, [r7, #8]
 700 0014 1B0D     		lsrs	r3, r3, #20
 701 0016 03F00301 		and	r1, r3, #3
 702 001a BB68     		ldr	r3, [r7, #8]
 703 001c 03F00102 		and	r2, r3, #1
 704 0020 1346     		mov	r3, r2
 705 0022 DB00     		lsls	r3, r3, #3
 706 0024 1344     		add	r3, r3, r2
 707 0026 9B00     		lsls	r3, r3, #2
 708 0028 0B44     		add	r3, r3, r1
 709 002a 9B00     		lsls	r3, r3, #2
 710 002c 0344     		add	r3, r3, r0
 711              		.loc 1 5835 18
 712 002e 7B61     		str	r3, [r7, #20]
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 713              		.loc 1 5840 3
 714 0030 7B69     		ldr	r3, [r7, #20]
 715 0032 1A68     		ldr	r2, [r3]
 716 0034 BB68     		ldr	r3, [r7, #8]
 717 0036 23F00243 		bic	r3, r3, #-2113929216
 718 003a 23F46013 		bic	r3, r3, #3670016
 719 003e DB43     		mvns	r3, r3
 720 0040 1A40     		ands	r2, r2, r3
 721 0042 7968     		ldr	r1, [r7, #4]
 722 0044 BB68     		ldr	r3, [r7, #8]
 723 0046 0B40     		ands	r3, r3, r1
 724 0048 1A43     		orrs	r2, r2, r3
 725 004a 7B69     		ldr	r3, [r7, #20]
 726 004c 1A60     		str	r2, [r3]
5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 727              		.loc 1 5843 1
 728 004e 00BF     		nop
 729 0050 1C37     		adds	r7, r7, #28
 730              	.LCFI69:
 731              		.cfi_def_cfa_offset 4
 732 0052 BD46     		mov	sp, r7
 733              	.LCFI70:
 734              		.cfi_def_cfa_register 13
 735              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 116


 736 0054 5DF8047B 		ldr	r7, [sp], #4
 737              	.LCFI71:
 738              		.cfi_restore 7
 739              		.cfi_def_cfa_offset 0
 740 0058 7047     		bx	lr
 741              		.cfi_endproc
 742              	.LFE189:
 744              		.section	.text.LL_ADC_ConfigAnalogWDThresholds,"ax",%progbits
 745              		.align	1
 746              		.syntax unified
 747              		.thumb
 748              		.thumb_func
 750              	LL_ADC_ConfigAnalogWDThresholds:
 751              	.LFB191:
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 117


5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 118


5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(const ADC_TypeDef *ADCx, uint32_t AWDy)
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR,
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       * ADC_AWD_CR12_REGOFFSETGAP_VAL));
5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR_AWD1SGL) == 0UL)
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     )
5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     & (~(ADC_CFGR_AWD1CH))
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 119


6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                    );
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return analog_wd_monit_channels;
6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 120


6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Examples:
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 752              		.loc 1 6089 1
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 24
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 80B4     		push	{r7}
 758              	.LCFI72:
 759              		.cfi_def_cfa_offset 4
 760              		.cfi_offset 7, -4
 761 0002 87B0     		sub	sp, sp, #28
 762              	.LCFI73:
 763              		.cfi_def_cfa_offset 32
 764 0004 00AF     		add	r7, sp, #0
 765              	.LCFI74:
 766              		.cfi_def_cfa_register 7
 767 0006 F860     		str	r0, [r7, #12]
 768 0008 B960     		str	r1, [r7, #8]
 769 000a 7A60     		str	r2, [r7, #4]
 770 000c 3B60     		str	r3, [r7]
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 121


 771              		.loc 1 6095 25
 772 000e FB68     		ldr	r3, [r7, #12]
 773 0010 2033     		adds	r3, r3, #32
 774 0012 1A46     		mov	r2, r3
 775 0014 BB68     		ldr	r3, [r7, #8]
 776 0016 1B0D     		lsrs	r3, r3, #20
 777 0018 9B00     		lsls	r3, r3, #2
 778 001a 03F00C03 		and	r3, r3, #12
 779 001e 1344     		add	r3, r3, r2
 780              		.loc 1 6095 18
 781 0020 7B61     		str	r3, [r7, #20]
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
 782              		.loc 1 6098 3
 783 0022 7B69     		ldr	r3, [r7, #20]
 784 0024 1B68     		ldr	r3, [r3]
 785 0026 03F0F022 		and	r2, r3, #-268374016
 786 002a 7B68     		ldr	r3, [r7, #4]
 787 002c 1904     		lsls	r1, r3, #16
 788 002e 3B68     		ldr	r3, [r7]
 789 0030 0B43     		orrs	r3, r3, r1
 790 0032 1A43     		orrs	r2, r2, r3
 791 0034 7B69     		ldr	r3, [r7, #20]
 792 0036 1A60     		str	r2, [r3]
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 793              		.loc 1 6101 1
 794 0038 00BF     		nop
 795 003a 1C37     		adds	r7, r7, #28
 796              	.LCFI75:
 797              		.cfi_def_cfa_offset 4
 798 003c BD46     		mov	sp, r7
 799              	.LCFI76:
 800              		.cfi_def_cfa_register 13
 801              		@ sp needed
 802 003e 5DF8047B 		ldr	r7, [sp], #4
 803              	.LCFI77:
 804              		.cfi_restore 7
 805              		.cfi_def_cfa_offset 0
 806 0042 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE191:
 810              		.section	.text.LL_ADC_GetMultimode,"ax",%progbits
 811              		.align	1
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	LL_ADC_GetMultimode:
 817              	.LFB202:
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 122


6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Examples:
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 123


6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(const ADC_TypeDef *ADCx,
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       uint32_t AWDy, uint32_t AWDThresholdsHighLow)
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 124


6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 series).
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 125


6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(const ADC_TypeDef *ADCx)
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(const ADC_TypeDef *ADCx)
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 126


6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
6369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
6377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(const ADC_TypeDef *ADCx)
6387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
6389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 127


6393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(const ADC_TypeDef *ADCx)
6408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
6427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
6432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 128


6450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
6457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
6458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(const ADC_Common_TypeDef *ADCxy_COMMON)
6472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 818              		.loc 1 6472 1
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI78:
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI79:
 829              		.cfi_def_cfa_offset 16
 830 0004 00AF     		add	r7, sp, #0
 831              	.LCFI80:
 832              		.cfi_def_cfa_register 7
 833 0006 7860     		str	r0, [r7, #4]
6473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
 834              		.loc 1 6473 21
 835 0008 7B68     		ldr	r3, [r7, #4]
 836 000a 9B68     		ldr	r3, [r3, #8]
 837              		.loc 1 6473 10
 838 000c 03F01F03 		and	r3, r3, #31
6474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 839              		.loc 1 6474 1
 840 0010 1846     		mov	r0, r3
 841 0012 0C37     		adds	r7, r7, #12
 842              	.LCFI81:
 843              		.cfi_def_cfa_offset 4
 844 0014 BD46     		mov	sp, r7
 845              	.LCFI82:
 846              		.cfi_def_cfa_register 13
 847              		@ sp needed
 848 0016 5DF8047B 		ldr	r7, [sp], #4
 849              	.LCFI83:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 129


 850              		.cfi_restore 7
 851              		.cfi_def_cfa_offset 0
 852 001a 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE202:
 856              		.section	.text.LL_ADC_GetMultiDMATransfer,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	LL_ADC_GetMultiDMATransfer:
 863              	.LFB204:
6475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
6479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
6482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
6488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
6492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
6495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
6511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
6512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 130


6520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
6525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
6530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
6533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
6539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
6543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
6546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
6558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
6559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
6564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
6565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
6566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
6567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(const ADC_Common_TypeDef *ADCxy_COMMON)
6569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 864              		.loc 1 6569 1
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI84:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 131


 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 83B0     		sub	sp, sp, #12
 874              	.LCFI85:
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              	.LCFI86:
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
6570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
 880              		.loc 1 6570 21
 881 0008 7B68     		ldr	r3, [r7, #4]
 882 000a 9B68     		ldr	r3, [r3, #8]
 883              		.loc 1 6570 10
 884 000c 03F46043 		and	r3, r3, #57344
6571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 885              		.loc 1 6571 1
 886 0010 1846     		mov	r0, r3
 887 0012 0C37     		adds	r7, r7, #12
 888              	.LCFI87:
 889              		.cfi_def_cfa_offset 4
 890 0014 BD46     		mov	sp, r7
 891              	.LCFI88:
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 0016 5DF8047B 		ldr	r7, [sp], #4
 895              	.LCFI89:
 896              		.cfi_restore 7
 897              		.cfi_def_cfa_offset 0
 898 001a 7047     		bx	lr
 899              		.cfi_endproc
 900              	.LFE204:
 902              		.section	.text.LL_ADC_DisableDeepPowerDown,"ax",%progbits
 903              		.align	1
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	LL_ADC_DisableDeepPowerDown:
 909              	.LFB210:
6572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 132


6590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
6603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
6620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
6621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
6622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
6623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
6624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
6625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
6626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
6627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
6628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
6629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
6630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
6631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
6632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
6633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
6634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
6635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(const ADC_Common_TypeDef *ADCxy_COMMON)
6637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
6646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 133


6647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
6649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
6650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
6651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
6653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
6655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
6657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 134


6704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 910              		.loc 1 6704 1
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              	.LCFI90:
 917              		.cfi_def_cfa_offset 4
 918              		.cfi_offset 7, -4
 919 0002 83B0     		sub	sp, sp, #12
 920              	.LCFI91:
 921              		.cfi_def_cfa_offset 16
 922 0004 00AF     		add	r7, sp, #0
 923              	.LCFI92:
 924              		.cfi_def_cfa_register 7
 925 0006 7860     		str	r0, [r7, #4]
6705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 926              		.loc 1 6708 3
 927 0008 7B68     		ldr	r3, [r7, #4]
 928 000a 9B68     		ldr	r3, [r3, #8]
 929 000c 23F02043 		bic	r3, r3, #-1610612736
 930 0010 23F03F03 		bic	r3, r3, #63
 931 0014 7A68     		ldr	r2, [r7, #4]
 932 0016 9360     		str	r3, [r2, #8]
6709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 933              		.loc 1 6709 1
 934 0018 00BF     		nop
 935 001a 0C37     		adds	r7, r7, #12
 936              	.LCFI93:
 937              		.cfi_def_cfa_offset 4
 938 001c BD46     		mov	sp, r7
 939              	.LCFI94:
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 001e 5DF8047B 		ldr	r7, [sp], #4
 943              	.LCFI95:
 944              		.cfi_restore 7
 945              		.cfi_def_cfa_offset 0
 946 0022 7047     		bx	lr
 947              		.cfi_endproc
 948              	.LFE210:
 950              		.section	.text.LL_ADC_IsDeepPowerDownEnabled,"ax",%progbits
 951              		.align	1
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 956              	LL_ADC_IsDeepPowerDownEnabled:
 957              	.LFB211:
6710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 135


6715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(const ADC_TypeDef *ADCx)
6718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 958              		.loc 1 6718 1
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 8
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              	.LCFI96:
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 83B0     		sub	sp, sp, #12
 968              	.LCFI97:
 969              		.cfi_def_cfa_offset 16
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI98:
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
6719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 974              		.loc 1 6719 12
 975 0008 7B68     		ldr	r3, [r7, #4]
 976 000a 9B68     		ldr	r3, [r3, #8]
 977 000c 03F00053 		and	r3, r3, #536870912
 978              		.loc 1 6719 74
 979 0010 B3F1005F 		cmp	r3, #536870912
 980 0014 01D1     		bne	.L32
 981              		.loc 1 6719 74 is_stmt 0 discriminator 1
 982 0016 0123     		movs	r3, #1
 983 0018 00E0     		b	.L34
 984              	.L32:
 985              		.loc 1 6719 74 discriminator 2
 986 001a 0023     		movs	r3, #0
 987              	.L34:
6720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 988              		.loc 1 6720 1 is_stmt 1 discriminator 5
 989 001c 1846     		mov	r0, r3
 990 001e 0C37     		adds	r7, r7, #12
 991              	.LCFI99:
 992              		.cfi_def_cfa_offset 4
 993 0020 BD46     		mov	sp, r7
 994              	.LCFI100:
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 0022 5DF8047B 		ldr	r7, [sp], #4
 998              	.LCFI101:
 999              		.cfi_restore 7
 1000              		.cfi_def_cfa_offset 0
 1001 0026 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE211:
 1005              		.section	.text.LL_ADC_EnableInternalRegulator,"ax",%progbits
 1006              		.align	1
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 136


 1011              	LL_ADC_EnableInternalRegulator:
 1012              	.LFB212:
6721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1013              		.loc 1 6737 1
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018 0000 80B4     		push	{r7}
 1019              	.LCFI102:
 1020              		.cfi_def_cfa_offset 4
 1021              		.cfi_offset 7, -4
 1022 0002 83B0     		sub	sp, sp, #12
 1023              	.LCFI103:
 1024              		.cfi_def_cfa_offset 16
 1025 0004 00AF     		add	r7, sp, #0
 1026              	.LCFI104:
 1027              		.cfi_def_cfa_register 7
 1028 0006 7860     		str	r0, [r7, #4]
6738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1029              		.loc 1 6741 3
 1030 0008 7B68     		ldr	r3, [r7, #4]
 1031 000a 9B68     		ldr	r3, [r3, #8]
 1032 000c 23F01043 		bic	r3, r3, #-1879048192
 1033 0010 23F03F03 		bic	r3, r3, #63
 1034 0014 43F08052 		orr	r2, r3, #268435456
 1035 0018 7B68     		ldr	r3, [r7, #4]
 1036 001a 9A60     		str	r2, [r3, #8]
6742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1037              		.loc 1 6744 1
 1038 001c 00BF     		nop
 1039 001e 0C37     		adds	r7, r7, #12
 1040              	.LCFI105:
 1041              		.cfi_def_cfa_offset 4
 1042 0020 BD46     		mov	sp, r7
 1043              	.LCFI106:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 137


 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 0022 5DF8047B 		ldr	r7, [sp], #4
 1047              	.LCFI107:
 1048              		.cfi_restore 7
 1049              		.cfi_def_cfa_offset 0
 1050 0026 7047     		bx	lr
 1051              		.cfi_endproc
 1052              	.LFE212:
 1054              		.section	.text.LL_ADC_IsInternalRegulatorEnabled,"ax",%progbits
 1055              		.align	1
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1060              	LL_ADC_IsInternalRegulatorEnabled:
 1061              	.LFB214:
6745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(const ADC_TypeDef *ADCx)
6767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1062              		.loc 1 6767 1
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 8
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 1067 0000 80B4     		push	{r7}
 1068              	.LCFI108:
 1069              		.cfi_def_cfa_offset 4
 1070              		.cfi_offset 7, -4
 1071 0002 83B0     		sub	sp, sp, #12
 1072              	.LCFI109:
 1073              		.cfi_def_cfa_offset 16
 1074 0004 00AF     		add	r7, sp, #0
 1075              	.LCFI110:
 1076              		.cfi_def_cfa_register 7
 1077 0006 7860     		str	r0, [r7, #4]
6768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 1078              		.loc 1 6768 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 138


 1079 0008 7B68     		ldr	r3, [r7, #4]
 1080 000a 9B68     		ldr	r3, [r3, #8]
 1081 000c 03F08053 		and	r3, r3, #268435456
 1082              		.loc 1 6768 76
 1083 0010 B3F1805F 		cmp	r3, #268435456
 1084 0014 01D1     		bne	.L37
 1085              		.loc 1 6768 76 is_stmt 0 discriminator 1
 1086 0016 0123     		movs	r3, #1
 1087 0018 00E0     		b	.L39
 1088              	.L37:
 1089              		.loc 1 6768 76 discriminator 2
 1090 001a 0023     		movs	r3, #0
 1091              	.L39:
6769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1092              		.loc 1 6769 1 is_stmt 1 discriminator 5
 1093 001c 1846     		mov	r0, r3
 1094 001e 0C37     		adds	r7, r7, #12
 1095              	.LCFI111:
 1096              		.cfi_def_cfa_offset 4
 1097 0020 BD46     		mov	sp, r7
 1098              	.LCFI112:
 1099              		.cfi_def_cfa_register 13
 1100              		@ sp needed
 1101 0022 5DF8047B 		ldr	r7, [sp], #4
 1102              	.LCFI113:
 1103              		.cfi_restore 7
 1104              		.cfi_def_cfa_offset 0
 1105 0026 7047     		bx	lr
 1106              		.cfi_endproc
 1107              	.LFE214:
 1109              		.section	.text.LL_ADC_Enable,"ax",%progbits
 1110              		.align	1
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1115              	LL_ADC_Enable:
 1116              	.LFB215:
6770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
6776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1117              		.loc 1 6788 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 139


 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 8
 1120              		@ frame_needed = 1, uses_anonymous_args = 0
 1121              		@ link register save eliminated.
 1122 0000 80B4     		push	{r7}
 1123              	.LCFI114:
 1124              		.cfi_def_cfa_offset 4
 1125              		.cfi_offset 7, -4
 1126 0002 83B0     		sub	sp, sp, #12
 1127              	.LCFI115:
 1128              		.cfi_def_cfa_offset 16
 1129 0004 00AF     		add	r7, sp, #0
 1130              	.LCFI116:
 1131              		.cfi_def_cfa_register 7
 1132 0006 7860     		str	r0, [r7, #4]
6789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1133              		.loc 1 6792 3
 1134 0008 7B68     		ldr	r3, [r7, #4]
 1135 000a 9B68     		ldr	r3, [r3, #8]
 1136 000c 23F00043 		bic	r3, r3, #-2147483648
 1137 0010 23F03F03 		bic	r3, r3, #63
 1138 0014 43F00102 		orr	r2, r3, #1
 1139 0018 7B68     		ldr	r3, [r7, #4]
 1140 001a 9A60     		str	r2, [r3, #8]
6793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1141              		.loc 1 6795 1
 1142 001c 00BF     		nop
 1143 001e 0C37     		adds	r7, r7, #12
 1144              	.LCFI117:
 1145              		.cfi_def_cfa_offset 4
 1146 0020 BD46     		mov	sp, r7
 1147              	.LCFI118:
 1148              		.cfi_def_cfa_register 13
 1149              		@ sp needed
 1150 0022 5DF8047B 		ldr	r7, [sp], #4
 1151              	.LCFI119:
 1152              		.cfi_restore 7
 1153              		.cfi_def_cfa_offset 0
 1154 0026 7047     		bx	lr
 1155              		.cfi_endproc
 1156              	.LFE215:
 1158              		.section	.text.LL_ADC_Disable,"ax",%progbits
 1159              		.align	1
 1160              		.syntax unified
 1161              		.thumb
 1162              		.thumb_func
 1164              	LL_ADC_Disable:
 1165              	.LFB216:
6796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 140


6800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1166              		.loc 1 6808 1
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 8
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 0000 80B4     		push	{r7}
 1172              	.LCFI120:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 83B0     		sub	sp, sp, #12
 1176              	.LCFI121:
 1177              		.cfi_def_cfa_offset 16
 1178 0004 00AF     		add	r7, sp, #0
 1179              	.LCFI122:
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
6809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1182              		.loc 1 6812 3
 1183 0008 7B68     		ldr	r3, [r7, #4]
 1184 000a 9B68     		ldr	r3, [r3, #8]
 1185 000c 23F00043 		bic	r3, r3, #-2147483648
 1186 0010 23F03F03 		bic	r3, r3, #63
 1187 0014 43F00202 		orr	r2, r3, #2
 1188 0018 7B68     		ldr	r3, [r7, #4]
 1189 001a 9A60     		str	r2, [r3, #8]
6813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1190              		.loc 1 6815 1
 1191 001c 00BF     		nop
 1192 001e 0C37     		adds	r7, r7, #12
 1193              	.LCFI123:
 1194              		.cfi_def_cfa_offset 4
 1195 0020 BD46     		mov	sp, r7
 1196              	.LCFI124:
 1197              		.cfi_def_cfa_register 13
 1198              		@ sp needed
 1199 0022 5DF8047B 		ldr	r7, [sp], #4
 1200              	.LCFI125:
 1201              		.cfi_restore 7
 1202              		.cfi_def_cfa_offset 0
 1203 0026 7047     		bx	lr
 1204              		.cfi_endproc
 1205              	.LFE216:
 1207              		.section	.text.LL_ADC_IsEnabled,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 141


 1208              		.align	1
 1209              		.syntax unified
 1210              		.thumb
 1211              		.thumb_func
 1213              	LL_ADC_IsEnabled:
 1214              	.LFB217:
6816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(const ADC_TypeDef *ADCx)
6827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1215              		.loc 1 6827 1
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219              		@ link register save eliminated.
 1220 0000 80B4     		push	{r7}
 1221              	.LCFI126:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 7, -4
 1224 0002 83B0     		sub	sp, sp, #12
 1225              	.LCFI127:
 1226              		.cfi_def_cfa_offset 16
 1227 0004 00AF     		add	r7, sp, #0
 1228              	.LCFI128:
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 1231              		.loc 1 6828 12
 1232 0008 7B68     		ldr	r3, [r7, #4]
 1233 000a 9B68     		ldr	r3, [r3, #8]
 1234 000c 03F00103 		and	r3, r3, #1
 1235              		.loc 1 6828 68
 1236 0010 012B     		cmp	r3, #1
 1237 0012 01D1     		bne	.L43
 1238              		.loc 1 6828 68 is_stmt 0 discriminator 1
 1239 0014 0123     		movs	r3, #1
 1240 0016 00E0     		b	.L45
 1241              	.L43:
 1242              		.loc 1 6828 68 discriminator 2
 1243 0018 0023     		movs	r3, #0
 1244              	.L45:
6829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1245              		.loc 1 6829 1 is_stmt 1 discriminator 5
 1246 001a 1846     		mov	r0, r3
 1247 001c 0C37     		adds	r7, r7, #12
 1248              	.LCFI129:
 1249              		.cfi_def_cfa_offset 4
 1250 001e BD46     		mov	sp, r7
 1251              	.LCFI130:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 142


 1252              		.cfi_def_cfa_register 13
 1253              		@ sp needed
 1254 0020 5DF8047B 		ldr	r7, [sp], #4
 1255              	.LCFI131:
 1256              		.cfi_restore 7
 1257              		.cfi_def_cfa_offset 0
 1258 0024 7047     		bx	lr
 1259              		.cfi_endproc
 1260              	.LFE217:
 1262              		.section	.text.LL_ADC_IsDisableOngoing,"ax",%progbits
 1263              		.align	1
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1268              	LL_ADC_IsDisableOngoing:
 1269              	.LFB218:
6830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(const ADC_TypeDef *ADCx)
6838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1270              		.loc 1 6838 1
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 8
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275 0000 80B4     		push	{r7}
 1276              	.LCFI132:
 1277              		.cfi_def_cfa_offset 4
 1278              		.cfi_offset 7, -4
 1279 0002 83B0     		sub	sp, sp, #12
 1280              	.LCFI133:
 1281              		.cfi_def_cfa_offset 16
 1282 0004 00AF     		add	r7, sp, #0
 1283              	.LCFI134:
 1284              		.cfi_def_cfa_register 7
 1285 0006 7860     		str	r0, [r7, #4]
6839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
 1286              		.loc 1 6839 12
 1287 0008 7B68     		ldr	r3, [r7, #4]
 1288 000a 9B68     		ldr	r3, [r3, #8]
 1289 000c 03F00203 		and	r3, r3, #2
 1290              		.loc 1 6839 70
 1291 0010 022B     		cmp	r3, #2
 1292 0012 01D1     		bne	.L47
 1293              		.loc 1 6839 70 is_stmt 0 discriminator 1
 1294 0014 0123     		movs	r3, #1
 1295 0016 00E0     		b	.L49
 1296              	.L47:
 1297              		.loc 1 6839 70 discriminator 2
 1298 0018 0023     		movs	r3, #0
 1299              	.L49:
6840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 143


 1300              		.loc 1 6840 1 is_stmt 1 discriminator 5
 1301 001a 1846     		mov	r0, r3
 1302 001c 0C37     		adds	r7, r7, #12
 1303              	.LCFI135:
 1304              		.cfi_def_cfa_offset 4
 1305 001e BD46     		mov	sp, r7
 1306              	.LCFI136:
 1307              		.cfi_def_cfa_register 13
 1308              		@ sp needed
 1309 0020 5DF8047B 		ldr	r7, [sp], #4
 1310              	.LCFI137:
 1311              		.cfi_restore 7
 1312              		.cfi_def_cfa_offset 0
 1313 0024 7047     		bx	lr
 1314              		.cfi_endproc
 1315              	.LFE218:
 1317              		.section	.text.LL_ADC_REG_StartConversion,"ax",%progbits
 1318              		.align	1
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1323              	LL_ADC_REG_StartConversion:
 1324              	.LFB221:
6841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 144


6875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(const ADC_TypeDef *ADCx)
6882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1325              		.loc 1 6913 1
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 8
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI138:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 83B0     		sub	sp, sp, #12
 1335              	.LCFI139:
 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              	.LCFI140:
 1339              		.cfi_def_cfa_register 7
 1340 0006 7860     		str	r0, [r7, #4]
6914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 145


6916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1341              		.loc 1 6917 3
 1342 0008 7B68     		ldr	r3, [r7, #4]
 1343 000a 9B68     		ldr	r3, [r3, #8]
 1344 000c 23F00043 		bic	r3, r3, #-2147483648
 1345 0010 23F03F03 		bic	r3, r3, #63
 1346 0014 43F00402 		orr	r2, r3, #4
 1347 0018 7B68     		ldr	r3, [r7, #4]
 1348 001a 9A60     		str	r2, [r3, #8]
6918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1349              		.loc 1 6920 1
 1350 001c 00BF     		nop
 1351 001e 0C37     		adds	r7, r7, #12
 1352              	.LCFI141:
 1353              		.cfi_def_cfa_offset 4
 1354 0020 BD46     		mov	sp, r7
 1355              	.LCFI142:
 1356              		.cfi_def_cfa_register 13
 1357              		@ sp needed
 1358 0022 5DF8047B 		ldr	r7, [sp], #4
 1359              	.LCFI143:
 1360              		.cfi_restore 7
 1361              		.cfi_def_cfa_offset 0
 1362 0026 7047     		bx	lr
 1363              		.cfi_endproc
 1364              	.LFE221:
 1366              		.section	.text.LL_ADC_REG_StopConversion,"ax",%progbits
 1367              		.align	1
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1372              	LL_ADC_REG_StopConversion:
 1373              	.LFB222:
6921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1374              		.loc 1 6933 1
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 8
 1377              		@ frame_needed = 1, uses_anonymous_args = 0
 1378              		@ link register save eliminated.
 1379 0000 80B4     		push	{r7}
 1380              	.LCFI144:
 1381              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 146


 1382              		.cfi_offset 7, -4
 1383 0002 83B0     		sub	sp, sp, #12
 1384              	.LCFI145:
 1385              		.cfi_def_cfa_offset 16
 1386 0004 00AF     		add	r7, sp, #0
 1387              	.LCFI146:
 1388              		.cfi_def_cfa_register 7
 1389 0006 7860     		str	r0, [r7, #4]
6934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1390              		.loc 1 6937 3
 1391 0008 7B68     		ldr	r3, [r7, #4]
 1392 000a 9B68     		ldr	r3, [r3, #8]
 1393 000c 23F00043 		bic	r3, r3, #-2147483648
 1394 0010 23F03F03 		bic	r3, r3, #63
 1395 0014 43F01002 		orr	r2, r3, #16
 1396 0018 7B68     		ldr	r3, [r7, #4]
 1397 001a 9A60     		str	r2, [r3, #8]
6938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1398              		.loc 1 6940 1
 1399 001c 00BF     		nop
 1400 001e 0C37     		adds	r7, r7, #12
 1401              	.LCFI147:
 1402              		.cfi_def_cfa_offset 4
 1403 0020 BD46     		mov	sp, r7
 1404              	.LCFI148:
 1405              		.cfi_def_cfa_register 13
 1406              		@ sp needed
 1407 0022 5DF8047B 		ldr	r7, [sp], #4
 1408              	.LCFI149:
 1409              		.cfi_restore 7
 1410              		.cfi_def_cfa_offset 0
 1411 0026 7047     		bx	lr
 1412              		.cfi_endproc
 1413              	.LFE222:
 1415              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
 1416              		.align	1
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1421              	LL_ADC_REG_IsConversionOngoing:
 1422              	.LFB223:
6941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(const ADC_TypeDef *ADCx)
6949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1423              		.loc 1 6949 1
 1424              		.cfi_startproc
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 147


 1425              		@ args = 0, pretend = 0, frame = 8
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428 0000 80B4     		push	{r7}
 1429              	.LCFI150:
 1430              		.cfi_def_cfa_offset 4
 1431              		.cfi_offset 7, -4
 1432 0002 83B0     		sub	sp, sp, #12
 1433              	.LCFI151:
 1434              		.cfi_def_cfa_offset 16
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI152:
 1437              		.cfi_def_cfa_register 7
 1438 0006 7860     		str	r0, [r7, #4]
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 1439              		.loc 1 6950 12
 1440 0008 7B68     		ldr	r3, [r7, #4]
 1441 000a 9B68     		ldr	r3, [r3, #8]
 1442 000c 03F00403 		and	r3, r3, #4
 1443              		.loc 1 6950 74
 1444 0010 042B     		cmp	r3, #4
 1445 0012 01D1     		bne	.L53
 1446              		.loc 1 6950 74 is_stmt 0 discriminator 1
 1447 0014 0123     		movs	r3, #1
 1448 0016 00E0     		b	.L55
 1449              	.L53:
 1450              		.loc 1 6950 74 discriminator 2
 1451 0018 0023     		movs	r3, #0
 1452              	.L55:
6951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1453              		.loc 1 6951 1 is_stmt 1 discriminator 5
 1454 001a 1846     		mov	r0, r3
 1455 001c 0C37     		adds	r7, r7, #12
 1456              	.LCFI153:
 1457              		.cfi_def_cfa_offset 4
 1458 001e BD46     		mov	sp, r7
 1459              	.LCFI154:
 1460              		.cfi_def_cfa_register 13
 1461              		@ sp needed
 1462 0020 5DF8047B 		ldr	r7, [sp], #4
 1463              	.LCFI155:
 1464              		.cfi_restore 7
 1465              		.cfi_def_cfa_offset 0
 1466 0024 7047     		bx	lr
 1467              		.cfi_endproc
 1468              	.LFE223:
 1470              		.section	.text.LL_ADC_INJ_StopConversion,"ax",%progbits
 1471              		.align	1
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1476              	LL_ADC_INJ_StopConversion:
 1477              	.LFB232:
6952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 148


6956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
6960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(const ADC_TypeDef *ADCx)
6974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(const ADC_TypeDef *ADCx)
6989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(const ADC_TypeDef *ADCx)
7004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 149


7013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(const ADC_TypeDef *ADCx)
7019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
7030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(const ADC_TypeDef *ADCx)
7034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
7050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(const ADC_Common_TypeDef *ADCxy_COMMO
7061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                               uint32_t ConversionData)
7062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
7065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
7067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 150


7070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
7084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
7087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
7089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
7092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
7110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
7112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1478              		.loc 1 7117 1
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 8
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482              		@ link register save eliminated.
 1483 0000 80B4     		push	{r7}
 1484              	.LCFI156:
 1485              		.cfi_def_cfa_offset 4
 1486              		.cfi_offset 7, -4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 151


 1487 0002 83B0     		sub	sp, sp, #12
 1488              	.LCFI157:
 1489              		.cfi_def_cfa_offset 16
 1490 0004 00AF     		add	r7, sp, #0
 1491              	.LCFI158:
 1492              		.cfi_def_cfa_register 7
 1493 0006 7860     		str	r0, [r7, #4]
7118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 1494              		.loc 1 7121 3
 1495 0008 7B68     		ldr	r3, [r7, #4]
 1496 000a 9B68     		ldr	r3, [r3, #8]
 1497 000c 23F00043 		bic	r3, r3, #-2147483648
 1498 0010 23F03F03 		bic	r3, r3, #63
 1499 0014 43F02002 		orr	r2, r3, #32
 1500 0018 7B68     		ldr	r3, [r7, #4]
 1501 001a 9A60     		str	r2, [r3, #8]
7122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
7124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1502              		.loc 1 7124 1
 1503 001c 00BF     		nop
 1504 001e 0C37     		adds	r7, r7, #12
 1505              	.LCFI159:
 1506              		.cfi_def_cfa_offset 4
 1507 0020 BD46     		mov	sp, r7
 1508              	.LCFI160:
 1509              		.cfi_def_cfa_register 13
 1510              		@ sp needed
 1511 0022 5DF8047B 		ldr	r7, [sp], #4
 1512              	.LCFI161:
 1513              		.cfi_restore 7
 1514              		.cfi_def_cfa_offset 0
 1515 0026 7047     		bx	lr
 1516              		.cfi_endproc
 1517              	.LFE232:
 1519              		.section	.text.LL_ADC_INJ_IsConversionOngoing,"ax",%progbits
 1520              		.align	1
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1525              	LL_ADC_INJ_IsConversionOngoing:
 1526              	.LFB233:
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(const ADC_TypeDef *ADCx)
7133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1527              		.loc 1 7133 1
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 152


 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 1532 0000 80B4     		push	{r7}
 1533              	.LCFI162:
 1534              		.cfi_def_cfa_offset 4
 1535              		.cfi_offset 7, -4
 1536 0002 83B0     		sub	sp, sp, #12
 1537              	.LCFI163:
 1538              		.cfi_def_cfa_offset 16
 1539 0004 00AF     		add	r7, sp, #0
 1540              	.LCFI164:
 1541              		.cfi_def_cfa_register 7
 1542 0006 7860     		str	r0, [r7, #4]
7134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 1543              		.loc 1 7134 12
 1544 0008 7B68     		ldr	r3, [r7, #4]
 1545 000a 9B68     		ldr	r3, [r3, #8]
 1546 000c 03F00803 		and	r3, r3, #8
 1547              		.loc 1 7134 76
 1548 0010 082B     		cmp	r3, #8
 1549 0012 01D1     		bne	.L58
 1550              		.loc 1 7134 76 is_stmt 0 discriminator 1
 1551 0014 0123     		movs	r3, #1
 1552 0016 00E0     		b	.L60
 1553              	.L58:
 1554              		.loc 1 7134 76 discriminator 2
 1555 0018 0023     		movs	r3, #0
 1556              	.L60:
7135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1557              		.loc 1 7135 1 is_stmt 1 discriminator 5
 1558 001a 1846     		mov	r0, r3
 1559 001c 0C37     		adds	r7, r7, #12
 1560              	.LCFI165:
 1561              		.cfi_def_cfa_offset 4
 1562 001e BD46     		mov	sp, r7
 1563              	.LCFI166:
 1564              		.cfi_def_cfa_register 13
 1565              		@ sp needed
 1566 0020 5DF8047B 		ldr	r7, [sp], #4
 1567              	.LCFI167:
 1568              		.cfi_restore 7
 1569              		.cfi_def_cfa_offset 0
 1570 0024 7047     		bx	lr
 1571              		.cfi_endproc
 1572              	.LFE233:
 1574              		.section	.text.LL_ADC_ClearFlag_AWD1,"ax",%progbits
 1575              		.align	1
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1580              	LL_ADC_ClearFlag_AWD1:
 1581              	.LFB259:
7136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 153


7141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(const ADC_TypeDef *ADCx)
7144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
7146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
7153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(const ADC_TypeDef *ADCx, uint32_t Rank)
7166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
7173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
7178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(const ADC_TypeDef *ADCx, uint32_t Rank)
7194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 154


7198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
7201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
7206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(const ADC_TypeDef *ADCx, uint32_t Rank)
7222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
7229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
7234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(const ADC_TypeDef *ADCx, uint32_t Rank)
7250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 155


7255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
7257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
7262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
7264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
7266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
7267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
7268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
7269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
7276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(const ADC_TypeDef *ADCx, uint32_t Rank)
7278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1,
7280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK) >> ADC_JDR
7281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
7285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(const ADC_TypeDef *ADCx)
7305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 156


7312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(const ADC_TypeDef *ADCx)
7316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(const ADC_TypeDef *ADCx)
7327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(const ADC_TypeDef *ADCx)
7338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(const ADC_TypeDef *ADCx)
7349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(const ADC_TypeDef *ADCx)
7360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 157


7369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(const ADC_TypeDef *ADCx)
7371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(const ADC_TypeDef *ADCx)
7382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(const ADC_TypeDef *ADCx)
7393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(const ADC_TypeDef *ADCx)
7404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(const ADC_TypeDef *ADCx)
7415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 158


7426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 159


7483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
7517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1582              		.loc 1 7517 1
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 8
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586              		@ link register save eliminated.
 1587 0000 80B4     		push	{r7}
 1588              	.LCFI168:
 1589              		.cfi_def_cfa_offset 4
 1590              		.cfi_offset 7, -4
 1591 0002 83B0     		sub	sp, sp, #12
 1592              	.LCFI169:
 1593              		.cfi_def_cfa_offset 16
 1594 0004 00AF     		add	r7, sp, #0
 1595              	.LCFI170:
 1596              		.cfi_def_cfa_register 7
 1597 0006 7860     		str	r0, [r7, #4]
7518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 1598              		.loc 1 7518 3
 1599 0008 7B68     		ldr	r3, [r7, #4]
 1600 000a 8022     		movs	r2, #128
 1601 000c 1A60     		str	r2, [r3]
7519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 160


 1602              		.loc 1 7519 1
 1603 000e 00BF     		nop
 1604 0010 0C37     		adds	r7, r7, #12
 1605              	.LCFI171:
 1606              		.cfi_def_cfa_offset 4
 1607 0012 BD46     		mov	sp, r7
 1608              	.LCFI172:
 1609              		.cfi_def_cfa_register 13
 1610              		@ sp needed
 1611 0014 5DF8047B 		ldr	r7, [sp], #4
 1612              	.LCFI173:
 1613              		.cfi_restore 7
 1614              		.cfi_def_cfa_offset 0
 1615 0018 7047     		bx	lr
 1616              		.cfi_endproc
 1617              	.LFE259:
 1619              		.section	.text.LL_ADC_ClearFlag_AWD2,"ax",%progbits
 1620              		.align	1
 1621              		.syntax unified
 1622              		.thumb
 1623              		.thumb_func
 1625              	LL_ADC_ClearFlag_AWD2:
 1626              	.LFB260:
7520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1627              		.loc 1 7528 1
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 8
 1630              		@ frame_needed = 1, uses_anonymous_args = 0
 1631              		@ link register save eliminated.
 1632 0000 80B4     		push	{r7}
 1633              	.LCFI174:
 1634              		.cfi_def_cfa_offset 4
 1635              		.cfi_offset 7, -4
 1636 0002 83B0     		sub	sp, sp, #12
 1637              	.LCFI175:
 1638              		.cfi_def_cfa_offset 16
 1639 0004 00AF     		add	r7, sp, #0
 1640              	.LCFI176:
 1641              		.cfi_def_cfa_register 7
 1642 0006 7860     		str	r0, [r7, #4]
7529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
 1643              		.loc 1 7529 3
 1644 0008 7B68     		ldr	r3, [r7, #4]
 1645 000a 4FF48072 		mov	r2, #256
 1646 000e 1A60     		str	r2, [r3]
7530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1647              		.loc 1 7530 1
 1648 0010 00BF     		nop
 1649 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 161


 1650              	.LCFI177:
 1651              		.cfi_def_cfa_offset 4
 1652 0014 BD46     		mov	sp, r7
 1653              	.LCFI178:
 1654              		.cfi_def_cfa_register 13
 1655              		@ sp needed
 1656 0016 5DF8047B 		ldr	r7, [sp], #4
 1657              	.LCFI179:
 1658              		.cfi_restore 7
 1659              		.cfi_def_cfa_offset 0
 1660 001a 7047     		bx	lr
 1661              		.cfi_endproc
 1662              	.LFE260:
 1664              		.section	.text.LL_ADC_ClearFlag_AWD3,"ax",%progbits
 1665              		.align	1
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1670              	LL_ADC_ClearFlag_AWD3:
 1671              	.LFB261:
7531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1672              		.loc 1 7539 1
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
 1677 0000 80B4     		push	{r7}
 1678              	.LCFI180:
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 83B0     		sub	sp, sp, #12
 1682              	.LCFI181:
 1683              		.cfi_def_cfa_offset 16
 1684 0004 00AF     		add	r7, sp, #0
 1685              	.LCFI182:
 1686              		.cfi_def_cfa_register 7
 1687 0006 7860     		str	r0, [r7, #4]
7540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
 1688              		.loc 1 7540 3
 1689 0008 7B68     		ldr	r3, [r7, #4]
 1690 000a 4FF40072 		mov	r2, #512
 1691 000e 1A60     		str	r2, [r3]
7541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1692              		.loc 1 7541 1
 1693 0010 00BF     		nop
 1694 0012 0C37     		adds	r7, r7, #12
 1695              	.LCFI183:
 1696              		.cfi_def_cfa_offset 4
 1697 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 162


 1698              	.LCFI184:
 1699              		.cfi_def_cfa_register 13
 1700              		@ sp needed
 1701 0016 5DF8047B 		ldr	r7, [sp], #4
 1702              	.LCFI185:
 1703              		.cfi_restore 7
 1704              		.cfi_def_cfa_offset 0
 1705 001a 7047     		bx	lr
 1706              		.cfi_endproc
 1707              	.LFE261:
 1709              		.section	.text.LL_ADC_EnableIT_AWD1,"ax",%progbits
 1710              		.align	1
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1715              	LL_ADC_EnableIT_AWD1:
 1716              	.LFB292:
7542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
7544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
7552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(const ADC_Common_TypeDef *ADCxy_COMMON)
7564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 163


7582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
7624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(const ADC_Common_TypeDef *ADCxy_COMMON)
7636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 164


7639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
7648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(const ADC_Common_TypeDef *ADCxy_COMMON)
7660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(const ADC_Common_TypeDef *ADCxy_COMMON)
7684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 165


7696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(const ADC_Common_TypeDef *ADCxy_COMMON)
7708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
7720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
7726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(const ADC_Common_TypeDef *ADCxy_COMMON)
7732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
7744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 166


7753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(const ADC_Common_TypeDef *ADCxy_COMMON)
7756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
7768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(const ADC_Common_TypeDef *ADCxy_COMMON)
7780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
7792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(const ADC_Common_TypeDef *ADCxy_COMMON)
7804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
7808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 167


7810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
7811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
7815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC ready.
7819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
7841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 168


7867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1717              		.loc 1 7912 1
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 8
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722 0000 80B4     		push	{r7}
 1723              	.LCFI186:
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0002 83B0     		sub	sp, sp, #12
 1727              	.LCFI187:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 169


 1728              		.cfi_def_cfa_offset 16
 1729 0004 00AF     		add	r7, sp, #0
 1730              	.LCFI188:
 1731              		.cfi_def_cfa_register 7
 1732 0006 7860     		str	r0, [r7, #4]
7913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 1733              		.loc 1 7913 3
 1734 0008 7B68     		ldr	r3, [r7, #4]
 1735 000a 5B68     		ldr	r3, [r3, #4]
 1736 000c 43F08002 		orr	r2, r3, #128
 1737 0010 7B68     		ldr	r3, [r7, #4]
 1738 0012 5A60     		str	r2, [r3, #4]
7914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1739              		.loc 1 7914 1
 1740 0014 00BF     		nop
 1741 0016 0C37     		adds	r7, r7, #12
 1742              	.LCFI189:
 1743              		.cfi_def_cfa_offset 4
 1744 0018 BD46     		mov	sp, r7
 1745              	.LCFI190:
 1746              		.cfi_def_cfa_register 13
 1747              		@ sp needed
 1748 001a 5DF8047B 		ldr	r7, [sp], #4
 1749              	.LCFI191:
 1750              		.cfi_restore 7
 1751              		.cfi_def_cfa_offset 0
 1752 001e 7047     		bx	lr
 1753              		.cfi_endproc
 1754              	.LFE292:
 1756              		.section	.text.LL_ADC_EnableIT_AWD2,"ax",%progbits
 1757              		.align	1
 1758              		.syntax unified
 1759              		.thumb
 1760              		.thumb_func
 1762              	LL_ADC_EnableIT_AWD2:
 1763              	.LFB293:
7915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1764              		.loc 1 7923 1
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 8
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769 0000 80B4     		push	{r7}
 1770              	.LCFI192:
 1771              		.cfi_def_cfa_offset 4
 1772              		.cfi_offset 7, -4
 1773 0002 83B0     		sub	sp, sp, #12
 1774              	.LCFI193:
 1775              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 170


 1776 0004 00AF     		add	r7, sp, #0
 1777              	.LCFI194:
 1778              		.cfi_def_cfa_register 7
 1779 0006 7860     		str	r0, [r7, #4]
7924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
 1780              		.loc 1 7924 3
 1781 0008 7B68     		ldr	r3, [r7, #4]
 1782 000a 5B68     		ldr	r3, [r3, #4]
 1783 000c 43F48072 		orr	r2, r3, #256
 1784 0010 7B68     		ldr	r3, [r7, #4]
 1785 0012 5A60     		str	r2, [r3, #4]
7925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1786              		.loc 1 7925 1
 1787 0014 00BF     		nop
 1788 0016 0C37     		adds	r7, r7, #12
 1789              	.LCFI195:
 1790              		.cfi_def_cfa_offset 4
 1791 0018 BD46     		mov	sp, r7
 1792              	.LCFI196:
 1793              		.cfi_def_cfa_register 13
 1794              		@ sp needed
 1795 001a 5DF8047B 		ldr	r7, [sp], #4
 1796              	.LCFI197:
 1797              		.cfi_restore 7
 1798              		.cfi_def_cfa_offset 0
 1799 001e 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE293:
 1803              		.section	.text.LL_ADC_EnableIT_AWD3,"ax",%progbits
 1804              		.align	1
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1809              	LL_ADC_EnableIT_AWD3:
 1810              	.LFB294:
7926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1811              		.loc 1 7934 1
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 8
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815              		@ link register save eliminated.
 1816 0000 80B4     		push	{r7}
 1817              	.LCFI198:
 1818              		.cfi_def_cfa_offset 4
 1819              		.cfi_offset 7, -4
 1820 0002 83B0     		sub	sp, sp, #12
 1821              	.LCFI199:
 1822              		.cfi_def_cfa_offset 16
 1823 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 171


 1824              	.LCFI200:
 1825              		.cfi_def_cfa_register 7
 1826 0006 7860     		str	r0, [r7, #4]
7935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 1827              		.loc 1 7935 3
 1828 0008 7B68     		ldr	r3, [r7, #4]
 1829 000a 5B68     		ldr	r3, [r3, #4]
 1830 000c 43F40072 		orr	r2, r3, #512
 1831 0010 7B68     		ldr	r3, [r7, #4]
 1832 0012 5A60     		str	r2, [r3, #4]
7936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1833              		.loc 1 7936 1
 1834 0014 00BF     		nop
 1835 0016 0C37     		adds	r7, r7, #12
 1836              	.LCFI201:
 1837              		.cfi_def_cfa_offset 4
 1838 0018 BD46     		mov	sp, r7
 1839              	.LCFI202:
 1840              		.cfi_def_cfa_register 13
 1841              		@ sp needed
 1842 001a 5DF8047B 		ldr	r7, [sp], #4
 1843              	.LCFI203:
 1844              		.cfi_restore 7
 1845              		.cfi_def_cfa_offset 0
 1846 001e 7047     		bx	lr
 1847              		.cfi_endproc
 1848              	.LFE294:
 1850              		.section	.text.LL_ADC_DisableIT_AWD1,"ax",%progbits
 1851              		.align	1
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1856              	LL_ADC_DisableIT_AWD1:
 1857              	.LFB303:
7937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 172


7960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
8000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
8001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
8002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
8003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
8004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
8005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
8006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
8007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
8008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
8009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
8010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
8011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
8012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
8013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
8014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
8015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
8016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 173


8017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
8018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
8019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
8020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
8021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
8022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
8023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
8024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
8025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
8026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
8027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
8028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
8029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
8030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
8031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
8032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
8033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1858              		.loc 1 8033 1
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 8
 1861              		@ frame_needed = 1, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
 1863 0000 80B4     		push	{r7}
 1864              	.LCFI204:
 1865              		.cfi_def_cfa_offset 4
 1866              		.cfi_offset 7, -4
 1867 0002 83B0     		sub	sp, sp, #12
 1868              	.LCFI205:
 1869              		.cfi_def_cfa_offset 16
 1870 0004 00AF     		add	r7, sp, #0
 1871              	.LCFI206:
 1872              		.cfi_def_cfa_register 7
 1873 0006 7860     		str	r0, [r7, #4]
8034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 1874              		.loc 1 8034 3
 1875 0008 7B68     		ldr	r3, [r7, #4]
 1876 000a 5B68     		ldr	r3, [r3, #4]
 1877 000c 23F08002 		bic	r2, r3, #128
 1878 0010 7B68     		ldr	r3, [r7, #4]
 1879 0012 5A60     		str	r2, [r3, #4]
8035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1880              		.loc 1 8035 1
 1881 0014 00BF     		nop
 1882 0016 0C37     		adds	r7, r7, #12
 1883              	.LCFI207:
 1884              		.cfi_def_cfa_offset 4
 1885 0018 BD46     		mov	sp, r7
 1886              	.LCFI208:
 1887              		.cfi_def_cfa_register 13
 1888              		@ sp needed
 1889 001a 5DF8047B 		ldr	r7, [sp], #4
 1890              	.LCFI209:
 1891              		.cfi_restore 7
 1892              		.cfi_def_cfa_offset 0
 1893 001e 7047     		bx	lr
 1894              		.cfi_endproc
 1895              	.LFE303:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 174


 1897              		.section	.text.LL_ADC_DisableIT_AWD2,"ax",%progbits
 1898              		.align	1
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1903              	LL_ADC_DisableIT_AWD2:
 1904              	.LFB304:
8036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
8037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
8038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
8039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
8040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
8041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
8042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
8043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
8044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1905              		.loc 1 8044 1
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 8
 1908              		@ frame_needed = 1, uses_anonymous_args = 0
 1909              		@ link register save eliminated.
 1910 0000 80B4     		push	{r7}
 1911              	.LCFI210:
 1912              		.cfi_def_cfa_offset 4
 1913              		.cfi_offset 7, -4
 1914 0002 83B0     		sub	sp, sp, #12
 1915              	.LCFI211:
 1916              		.cfi_def_cfa_offset 16
 1917 0004 00AF     		add	r7, sp, #0
 1918              	.LCFI212:
 1919              		.cfi_def_cfa_register 7
 1920 0006 7860     		str	r0, [r7, #4]
8045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
 1921              		.loc 1 8045 3
 1922 0008 7B68     		ldr	r3, [r7, #4]
 1923 000a 5B68     		ldr	r3, [r3, #4]
 1924 000c 23F48072 		bic	r2, r3, #256
 1925 0010 7B68     		ldr	r3, [r7, #4]
 1926 0012 5A60     		str	r2, [r3, #4]
8046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1927              		.loc 1 8046 1
 1928 0014 00BF     		nop
 1929 0016 0C37     		adds	r7, r7, #12
 1930              	.LCFI213:
 1931              		.cfi_def_cfa_offset 4
 1932 0018 BD46     		mov	sp, r7
 1933              	.LCFI214:
 1934              		.cfi_def_cfa_register 13
 1935              		@ sp needed
 1936 001a 5DF8047B 		ldr	r7, [sp], #4
 1937              	.LCFI215:
 1938              		.cfi_restore 7
 1939              		.cfi_def_cfa_offset 0
 1940 001e 7047     		bx	lr
 1941              		.cfi_endproc
 1942              	.LFE304:
 1944              		.section	.text.LL_ADC_DisableIT_AWD3,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 175


 1945              		.align	1
 1946              		.syntax unified
 1947              		.thumb
 1948              		.thumb_func
 1950              	LL_ADC_DisableIT_AWD3:
 1951              	.LFB305:
8047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
8048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
8049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
8050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
8051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
8052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
8053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
8054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
8055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1952              		.loc 1 8055 1
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 8
 1955              		@ frame_needed = 1, uses_anonymous_args = 0
 1956              		@ link register save eliminated.
 1957 0000 80B4     		push	{r7}
 1958              	.LCFI216:
 1959              		.cfi_def_cfa_offset 4
 1960              		.cfi_offset 7, -4
 1961 0002 83B0     		sub	sp, sp, #12
 1962              	.LCFI217:
 1963              		.cfi_def_cfa_offset 16
 1964 0004 00AF     		add	r7, sp, #0
 1965              	.LCFI218:
 1966              		.cfi_def_cfa_register 7
 1967 0006 7860     		str	r0, [r7, #4]
8056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 1968              		.loc 1 8056 3
 1969 0008 7B68     		ldr	r3, [r7, #4]
 1970 000a 5B68     		ldr	r3, [r3, #4]
 1971 000c 23F40072 		bic	r2, r3, #512
 1972 0010 7B68     		ldr	r3, [r7, #4]
 1973 0012 5A60     		str	r2, [r3, #4]
8057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1974              		.loc 1 8057 1
 1975 0014 00BF     		nop
 1976 0016 0C37     		adds	r7, r7, #12
 1977              	.LCFI219:
 1978              		.cfi_def_cfa_offset 4
 1979 0018 BD46     		mov	sp, r7
 1980              	.LCFI220:
 1981              		.cfi_def_cfa_register 13
 1982              		@ sp needed
 1983 001a 5DF8047B 		ldr	r7, [sp], #4
 1984              	.LCFI221:
 1985              		.cfi_restore 7
 1986              		.cfi_def_cfa_offset 0
 1987 001e 7047     		bx	lr
 1988              		.cfi_endproc
 1989              	.LFE305:
 1991              		.section	.text.HAL_ADC_Init,"ax",%progbits
 1992              		.align	1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 176


 1993              		.global	HAL_ADC_Init
 1994              		.syntax unified
 1995              		.thumb
 1996              		.thumb_func
 1998              	HAL_ADC_Init:
 1999              	.LFB317:
 2000              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @attention
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @verbatim
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   [..]
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 177


  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 178


 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ================================================================
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ====================================
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         conversion accuracy
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         transfer by DMA.
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 179


 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 destination variable address.
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     *** Callback registration ***
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     =============================================
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 180


 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      to register an interrupt callback.
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and a pointer to the user callback function.
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      weak function.
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and the Callback ID.
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function allows to reset following callbacks:
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 181


 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      are set to the corresponding weak functions.
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @endverbatim
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1 (ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                            ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                            ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                            ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL)              /*!< ADC_CFGR fields of 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           be updated when no regular conversion is on-going */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 182


 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in header of this file).
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 183


 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2001              		.loc 2 395 1
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 32
 2004              		@ frame_needed = 1, uses_anonymous_args = 0
 2005 0000 90B5     		push	{r4, r7, lr}
 2006              	.LCFI222:
 2007              		.cfi_def_cfa_offset 12
 2008              		.cfi_offset 4, -12
 2009              		.cfi_offset 7, -8
 2010              		.cfi_offset 14, -4
 2011 0002 89B0     		sub	sp, sp, #36
 2012              	.LCFI223:
 2013              		.cfi_def_cfa_offset 48
 2014 0004 00AF     		add	r7, sp, #0
 2015              	.LCFI224:
 2016              		.cfi_def_cfa_register 7
 2017 0006 7860     		str	r0, [r7, #4]
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2018              		.loc 2 396 21
 2019 0008 0023     		movs	r3, #0
 2020 000a FB77     		strb	r3, [r7, #31]
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2021              		.loc 2 400 17
 2022 000c 0023     		movs	r3, #0
 2023 000e FB60     		str	r3, [r7, #12]
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 2024              		.loc 2 403 6
 2025 0010 7B68     		ldr	r3, [r7, #4]
 2026 0012 002B     		cmp	r3, #0
 2027 0014 01D1     		bne	.L71
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 2028              		.loc 2 405 12
 2029 0016 0123     		movs	r3, #1
 2030 0018 30E1     		b	.L72
 2031              	.L71:
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* DFSDM */
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 184


 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 2032              		.loc 2 426 17
 2033 001a 7B68     		ldr	r3, [r7, #4]
 2034 001c 1B69     		ldr	r3, [r3, #16]
 2035              		.loc 2 426 6
 2036 001e 002B     		cmp	r3, #0
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 2037              		.loc 2 442 11
 2038 0020 7B68     		ldr	r3, [r7, #4]
 2039 0022 5B6D     		ldr	r3, [r3, #84]
 2040              		.loc 2 442 6
 2041 0024 002B     		cmp	r3, #0
 2042 0026 09D1     		bne	.L74
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 185


 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 2043              		.loc 2 465 5
 2044 0028 7868     		ldr	r0, [r7, #4]
 2045 002a FFF7FEFF 		bl	HAL_ADC_MspInit
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 2046              		.loc 2 469 5
 2047 002e 7B68     		ldr	r3, [r7, #4]
 2048 0030 0022     		movs	r2, #0
 2049 0032 9A65     		str	r2, [r3, #88]
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 2050              		.loc 2 472 16
 2051 0034 7B68     		ldr	r3, [r7, #4]
 2052 0036 0022     		movs	r2, #0
 2053 0038 83F85020 		strb	r2, [r3, #80]
 2054              	.L74:
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 2055              		.loc 2 476 41
 2056 003c 7B68     		ldr	r3, [r7, #4]
 2057 003e 1B68     		ldr	r3, [r3]
 2058              		.loc 2 476 7
 2059 0040 1846     		mov	r0, r3
 2060 0042 FFF7FEFF 		bl	LL_ADC_IsDeepPowerDownEnabled
 2061 0046 0346     		mov	r3, r0
 2062              		.loc 2 476 6
 2063 0048 002B     		cmp	r3, #0
 2064 004a 04D0     		beq	.L75
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 2065              		.loc 2 479 5
 2066 004c 7B68     		ldr	r3, [r7, #4]
 2067 004e 1B68     		ldr	r3, [r3]
 2068 0050 1846     		mov	r0, r3
 2069 0052 FFF7FEFF 		bl	LL_ADC_DisableDeepPowerDown
 2070              	.L75:
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 2071              		.loc 2 486 45
 2072 0056 7B68     		ldr	r3, [r7, #4]
 2073 0058 1B68     		ldr	r3, [r3]
 2074              		.loc 2 486 7
 2075 005a 1846     		mov	r0, r3
 2076 005c FFF7FEFF 		bl	LL_ADC_IsInternalRegulatorEnabled
 2077 0060 0346     		mov	r3, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 186


 2078              		.loc 2 486 6
 2079 0062 002B     		cmp	r3, #0
 2080 0064 15D1     		bne	.L76
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 2081              		.loc 2 489 5
 2082 0066 7B68     		ldr	r3, [r7, #4]
 2083 0068 1B68     		ldr	r3, [r3]
 2084 006a 1846     		mov	r0, r3
 2085 006c FFF7FEFF 		bl	LL_ADC_EnableInternalRegulator
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 2086              		.loc 2 494 89
 2087 0070 844B     		ldr	r3, .L89
 2088 0072 1B68     		ldr	r3, [r3]
 2089 0074 9B09     		lsrs	r3, r3, #6
 2090 0076 844A     		ldr	r2, .L89+4
 2091 0078 A2FB0323 		umull	r2, r3, r2, r3
 2092 007c 9B09     		lsrs	r3, r3, #6
 2093              		.loc 2 494 109
 2094 007e 0133     		adds	r3, r3, #1
 2095              		.loc 2 494 69
 2096 0080 5B00     		lsls	r3, r3, #1
 2097              		.loc 2 494 21
 2098 0082 FB60     		str	r3, [r7, #12]
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 2099              		.loc 2 495 11
 2100 0084 02E0     		b	.L77
 2101              	.L78:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 2102              		.loc 2 497 22
 2103 0086 FB68     		ldr	r3, [r7, #12]
 2104 0088 013B     		subs	r3, r3, #1
 2105 008a FB60     		str	r3, [r7, #12]
 2106              	.L77:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 2107              		.loc 2 495 28
 2108 008c FB68     		ldr	r3, [r7, #12]
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 2109              		.loc 2 495 11
 2110 008e 002B     		cmp	r3, #0
 2111 0090 F9D1     		bne	.L78
 2112              	.L76:
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 2113              		.loc 2 504 45
 2114 0092 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 187


 2115 0094 1B68     		ldr	r3, [r3]
 2116              		.loc 2 504 7
 2117 0096 1846     		mov	r0, r3
 2118 0098 FFF7FEFF 		bl	LL_ADC_IsInternalRegulatorEnabled
 2119 009c 0346     		mov	r3, r0
 2120              		.loc 2 504 6
 2121 009e 002B     		cmp	r3, #0
 2122 00a0 0DD1     		bne	.L79
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 2123              		.loc 2 507 5
 2124 00a2 7B68     		ldr	r3, [r7, #4]
 2125 00a4 5B6D     		ldr	r3, [r3, #84]
 2126 00a6 43F01002 		orr	r2, r3, #16
 2127 00aa 7B68     		ldr	r3, [r7, #4]
 2128 00ac 5A65     		str	r2, [r3, #84]
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 2129              		.loc 2 510 5
 2130 00ae 7B68     		ldr	r3, [r7, #4]
 2131 00b0 9B6D     		ldr	r3, [r3, #88]
 2132 00b2 43F00102 		orr	r2, r3, #1
 2133 00b6 7B68     		ldr	r3, [r7, #4]
 2134 00b8 9A65     		str	r2, [r3, #88]
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 2135              		.loc 2 512 20
 2136 00ba 0123     		movs	r3, #1
 2137 00bc FB77     		strb	r3, [r7, #31]
 2138              	.L79:
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2139              		.loc 2 519 79
 2140 00be 7B68     		ldr	r3, [r7, #4]
 2141 00c0 1B68     		ldr	r3, [r3]
 2142              		.loc 2 519 44
 2143 00c2 1846     		mov	r0, r3
 2144 00c4 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2145 00c8 7861     		str	r0, [r7, #20]
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 2146              		.loc 2 521 13
 2147 00ca 7B68     		ldr	r3, [r7, #4]
 2148 00cc 5B6D     		ldr	r3, [r3, #84]
 2149              		.loc 2 521 21
 2150 00ce 03F01003 		and	r3, r3, #16
 2151              		.loc 2 521 6
 2152 00d2 002B     		cmp	r3, #0
 2153 00d4 40F0C980 		bne	.L80
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 188


 2154              		.loc 2 522 7
 2155 00d8 7B69     		ldr	r3, [r7, #20]
 2156 00da 002B     		cmp	r3, #0
 2157 00dc 40F0C580 		bne	.L80
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 2158              		.loc 2 526 5
 2159 00e0 7B68     		ldr	r3, [r7, #4]
 2160 00e2 5B6D     		ldr	r3, [r3, #84]
 2161 00e4 23F48173 		bic	r3, r3, #258
 2162 00e8 43F00202 		orr	r2, r3, #2
 2163 00ec 7B68     		ldr	r3, [r7, #4]
 2164 00ee 5A65     		str	r2, [r3, #84]
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2165              		.loc 2 535 30
 2166 00f0 7B68     		ldr	r3, [r7, #4]
 2167 00f2 1B68     		ldr	r3, [r3]
 2168              		.loc 2 535 9
 2169 00f4 1846     		mov	r0, r3
 2170 00f6 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2171 00fa 0346     		mov	r3, r0
 2172              		.loc 2 535 8
 2173 00fc 002B     		cmp	r3, #0
 2174 00fe 15D1     		bne	.L81
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 2175              		.loc 2 537 11
 2176 0100 6248     		ldr	r0, .L89+8
 2177 0102 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2178 0106 0446     		mov	r4, r0
 2179 0108 6148     		ldr	r0, .L89+12
 2180 010a FFF7FEFF 		bl	LL_ADC_IsEnabled
 2181 010e 0346     		mov	r3, r0
 2182 0110 1C43     		orrs	r4, r4, r3
 2183 0112 6048     		ldr	r0, .L89+16
 2184 0114 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2185 0118 0346     		mov	r3, r0
 2186 011a 2343     		orrs	r3, r3, r4
 2187              		.loc 2 537 10
 2188 011c 002B     		cmp	r3, #0
 2189 011e 05D1     		bne	.L81
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 189


 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* parameters):                                                         */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 2190              		.loc 2 556 9
 2191 0120 7B68     		ldr	r3, [r7, #4]
 2192 0122 5B68     		ldr	r3, [r3, #4]
 2193 0124 1946     		mov	r1, r3
 2194 0126 5C48     		ldr	r0, .L89+20
 2195 0128 FFF7FEFF 		bl	LL_ADC_SetCommonClock
 2196              	.L81:
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 2197              		.loc 2 569 18
 2198 012c 7B68     		ldr	r3, [r7, #4]
 2199 012e 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 2200 0130 5A03     		lsls	r2, r3, #13
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 2201              		.loc 2 570 28
 2202 0132 7B68     		ldr	r3, [r7, #4]
 2203 0134 5B6B     		ldr	r3, [r3, #52]
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 2204              		.loc 2 569 89
 2205 0136 1A43     		orrs	r2, r2, r3
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.DataAlign                                                   |
 2206              		.loc 2 571 28
 2207 0138 7B68     		ldr	r3, [r7, #4]
 2208 013a DB68     		ldr	r3, [r3, #12]
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 2209              		.loc 2 570 89
 2210 013c 1A43     		orrs	r2, r2, r3
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.Resolution                                                  |
 2211              		.loc 2 572 28
 2212 013e 7B68     		ldr	r3, [r7, #4]
 2213 0140 9B68     		ldr	r3, [r3, #8]
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.DataAlign                                                   |
 2214              		.loc 2 571 89
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 190


 2215 0142 1A43     		orrs	r2, r2, r3
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 2216              		.loc 2 573 18
 2217 0144 7B68     		ldr	r3, [r7, #4]
 2218 0146 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2219 014a 1B04     		lsls	r3, r3, #16
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  hadc->Init.Overrun                                                     |
 2220              		.loc 2 569 15
 2221 014c 1343     		orrs	r3, r3, r2
 2222 014e BB61     		str	r3, [r7, #24]
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 2223              		.loc 2 575 19
 2224 0150 7B68     		ldr	r3, [r7, #4]
 2225 0152 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2226              		.loc 2 575 8
 2227 0156 012B     		cmp	r3, #1
 2228 0158 06D1     		bne	.L82
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 2229              		.loc 2 577 19
 2230 015a 7B68     		ldr	r3, [r7, #4]
 2231 015c 5B6A     		ldr	r3, [r3, #36]
 2232 015e 013B     		subs	r3, r3, #1
 2233 0160 5B04     		lsls	r3, r3, #17
 2234              		.loc 2 577 16
 2235 0162 BA69     		ldr	r2, [r7, #24]
 2236 0164 1343     		orrs	r3, r3, r2
 2237 0166 BB61     		str	r3, [r7, #24]
 2238              	.L82:
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       software start.                                                  */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 2239              		.loc 2 585 19
 2240 0168 7B68     		ldr	r3, [r7, #4]
 2241 016a 9B6A     		ldr	r3, [r3, #40]
 2242              		.loc 2 585 8
 2243 016c 002B     		cmp	r3, #0
 2244 016e 09D0     		beq	.L83
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 2245              		.loc 2 587 31
 2246 0170 7B68     		ldr	r3, [r7, #4]
 2247 0172 9B6A     		ldr	r3, [r3, #40]
 2248              		.loc 2 587 49
 2249 0174 03F47072 		and	r2, r3, #960
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 2250              		.loc 2 588 32
 2251 0178 7B68     		ldr	r3, [r7, #4]
 2252 017a DB6A     		ldr	r3, [r3, #44]
 2253              		.loc 2 588 20
 2254 017c 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 191


 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    | hadc->Init.ExternalTrigConvEdge
 2255              		.loc 2 587 16
 2256 017e BA69     		ldr	r2, [r7, #24]
 2257 0180 1343     		orrs	r3, r3, r2
 2258 0182 BB61     		str	r3, [r7, #24]
 2259              	.L83:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   );
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmp_cfgr);
 2260              		.loc 2 593 5
 2261 0184 7B68     		ldr	r3, [r7, #4]
 2262 0186 1B68     		ldr	r3, [r3]
 2263 0188 DA68     		ldr	r2, [r3, #12]
 2264 018a 444B     		ldr	r3, .L89+24
 2265 018c 1340     		ands	r3, r3, r2
 2266 018e 7A68     		ldr	r2, [r7, #4]
 2267 0190 1268     		ldr	r2, [r2]
 2268 0192 B969     		ldr	r1, [r7, #24]
 2269 0194 0B43     		orrs	r3, r3, r1
 2270 0196 D360     		str	r3, [r2, #12]
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2271              		.loc 2 601 82
 2272 0198 7B68     		ldr	r3, [r7, #4]
 2273 019a 1B68     		ldr	r3, [r3]
 2274              		.loc 2 601 47
 2275 019c 1846     		mov	r0, r3
 2276 019e FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 2277 01a2 3861     		str	r0, [r7, #16]
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2278              		.loc 2 602 8
 2279 01a4 7B69     		ldr	r3, [r7, #20]
 2280 01a6 002B     		cmp	r3, #0
 2281 01a8 3DD1     		bne	.L84
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 2282              		.loc 2 603 9
 2283 01aa 3B69     		ldr	r3, [r7, #16]
 2284 01ac 002B     		cmp	r3, #0
 2285 01ae 3AD1     		bne	.L84
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = (ADC_CFGR_DFSDM(hadc)                                            |
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2286              		.loc 2 607 20
 2287 01b0 7B68     		ldr	r3, [r7, #4]
 2288 01b2 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2289              		.loc 2 606 83
 2290 01b4 9A03     		lsls	r2, r3, #14
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 192


 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 2291              		.loc 2 608 20
 2292 01b6 7B68     		ldr	r3, [r7, #4]
 2293 01b8 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 2294 01bc 5B00     		lsls	r3, r3, #1
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 2295              		.loc 2 606 16
 2296 01be 1343     		orrs	r3, r3, r2
 2297 01c0 BB61     		str	r3, [r7, #24]
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmp_cfgr);
 2298              		.loc 2 610 7
 2299 01c2 7B68     		ldr	r3, [r7, #4]
 2300 01c4 1B68     		ldr	r3, [r3]
 2301 01c6 DB68     		ldr	r3, [r3, #12]
 2302 01c8 23F48043 		bic	r3, r3, #16384
 2303 01cc 23F00203 		bic	r3, r3, #2
 2304 01d0 7A68     		ldr	r2, [r7, #4]
 2305 01d2 1268     		ldr	r2, [r2]
 2306 01d4 B969     		ldr	r1, [r7, #24]
 2307 01d6 0B43     		orrs	r3, r3, r1
 2308 01d8 D360     		str	r3, [r2, #12]
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 2309              		.loc 2 612 21
 2310 01da 7B68     		ldr	r3, [r7, #4]
 2311 01dc 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 2312              		.loc 2 612 10
 2313 01e0 012B     		cmp	r3, #1
 2314 01e2 18D1     		bne	.L85
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 2315              		.loc 2 624 9
 2316 01e4 7B68     		ldr	r3, [r7, #4]
 2317 01e6 1B68     		ldr	r3, [r3]
 2318 01e8 1B69     		ldr	r3, [r3, #16]
 2319 01ea 23F4FF63 		bic	r3, r3, #2040
 2320 01ee 23F00403 		bic	r3, r3, #4
 2321 01f2 7A68     		ldr	r2, [r7, #4]
 2322 01f4 D16B     		ldr	r1, [r2, #60]
 2323 01f6 7A68     		ldr	r2, [r7, #4]
 2324 01f8 126C     		ldr	r2, [r2, #64]
 2325 01fa 1143     		orrs	r1, r1, r2
 2326 01fc 7A68     		ldr	r2, [r7, #4]
 2327 01fe 526C     		ldr	r2, [r2, #68]
 2328 0200 1143     		orrs	r1, r1, r2
 2329 0202 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 193


 2330 0204 926C     		ldr	r2, [r2, #72]
 2331 0206 0A43     		orrs	r2, r2, r1
 2332 0208 1A43     		orrs	r2, r2, r3
 2333 020a 7B68     		ldr	r3, [r7, #4]
 2334 020c 1B68     		ldr	r3, [r3]
 2335 020e 42F00102 		orr	r2, r2, #1
 2336 0212 1A61     		str	r2, [r3, #16]
 2337 0214 07E0     		b	.L84
 2338              	.L85:
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   );
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 2339              		.loc 2 639 9
 2340 0216 7B68     		ldr	r3, [r7, #4]
 2341 0218 1B68     		ldr	r3, [r3]
 2342 021a 1A69     		ldr	r2, [r3, #16]
 2343 021c 7B68     		ldr	r3, [r7, #4]
 2344 021e 1B68     		ldr	r3, [r3]
 2345 0220 22F00102 		bic	r2, r2, #1
 2346 0224 1A61     		str	r2, [r3, #16]
 2347              	.L84:
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 2348              		.loc 2 653 19
 2349 0226 7B68     		ldr	r3, [r7, #4]
 2350 0228 1B69     		ldr	r3, [r3, #16]
 2351              		.loc 2 653 8
 2352 022a 012B     		cmp	r3, #1
 2353 022c 0CD1     		bne	.L86
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 2354              		.loc 2 656 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 194


 2355 022e 7B68     		ldr	r3, [r7, #4]
 2356 0230 1B68     		ldr	r3, [r3]
 2357 0232 1B6B     		ldr	r3, [r3, #48]
 2358 0234 23F00F01 		bic	r1, r3, #15
 2359 0238 7B68     		ldr	r3, [r7, #4]
 2360 023a DB69     		ldr	r3, [r3, #28]
 2361 023c 5A1E     		subs	r2, r3, #1
 2362 023e 7B68     		ldr	r3, [r7, #4]
 2363 0240 1B68     		ldr	r3, [r3]
 2364 0242 0A43     		orrs	r2, r2, r1
 2365 0244 1A63     		str	r2, [r3, #48]
 2366 0246 07E0     		b	.L87
 2367              	.L86:
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 2368              		.loc 2 660 7
 2369 0248 7B68     		ldr	r3, [r7, #4]
 2370 024a 1B68     		ldr	r3, [r3]
 2371 024c 1A6B     		ldr	r2, [r3, #48]
 2372 024e 7B68     		ldr	r3, [r7, #4]
 2373 0250 1B68     		ldr	r3, [r3]
 2374 0252 22F00F02 		bic	r2, r2, #15
 2375 0256 1A63     		str	r2, [r3, #48]
 2376              	.L87:
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 2377              		.loc 2 665 5
 2378 0258 7B68     		ldr	r3, [r7, #4]
 2379 025a 5B6D     		ldr	r3, [r3, #84]
 2380 025c 23F00303 		bic	r3, r3, #3
 2381 0260 43F00102 		orr	r2, r3, #1
 2382 0264 7B68     		ldr	r3, [r7, #4]
 2383 0266 5A65     		str	r2, [r3, #84]
 2384 0268 07E0     		b	.L88
 2385              	.L80:
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 2386              		.loc 2 670 5
 2387 026a 7B68     		ldr	r3, [r7, #4]
 2388 026c 5B6D     		ldr	r3, [r3, #84]
 2389 026e 43F01002 		orr	r2, r3, #16
 2390 0272 7B68     		ldr	r3, [r7, #4]
 2391 0274 5A65     		str	r2, [r3, #84]
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 2392              		.loc 2 672 20
 2393 0276 0123     		movs	r3, #1
 2394 0278 FB77     		strb	r3, [r7, #31]
 2395              	.L88:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 195


 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2396              		.loc 2 676 10
 2397 027a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2398              	.L72:
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2399              		.loc 2 677 1
 2400 027c 1846     		mov	r0, r3
 2401 027e 2437     		adds	r7, r7, #36
 2402              	.LCFI225:
 2403              		.cfi_def_cfa_offset 12
 2404 0280 BD46     		mov	sp, r7
 2405              	.LCFI226:
 2406              		.cfi_def_cfa_register 13
 2407              		@ sp needed
 2408 0282 90BD     		pop	{r4, r7, pc}
 2409              	.L90:
 2410              		.align	2
 2411              	.L89:
 2412 0284 00000000 		.word	SystemCoreClock
 2413 0288 632D3E05 		.word	87960931
 2414 028c 00000450 		.word	1342439424
 2415 0290 00010450 		.word	1342439680
 2416 0294 00020450 		.word	1342439936
 2417 0298 00030450 		.word	1342440192
 2418 029c 07C0F0FF 		.word	-999417
 2419              		.cfi_endproc
 2420              	.LFE317:
 2422              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 2423              		.align	1
 2424              		.global	HAL_ADC_DeInit
 2425              		.syntax unified
 2426              		.thumb
 2427              		.thumb_func
 2429              	HAL_ADC_DeInit:
 2430              	.LFB318:
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         common group is still running.
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 196


 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2431              		.loc 2 698 1
 2432              		.cfi_startproc
 2433              		@ args = 0, pretend = 0, frame = 16
 2434              		@ frame_needed = 1, uses_anonymous_args = 0
 2435 0000 90B5     		push	{r4, r7, lr}
 2436              	.LCFI227:
 2437              		.cfi_def_cfa_offset 12
 2438              		.cfi_offset 4, -12
 2439              		.cfi_offset 7, -8
 2440              		.cfi_offset 14, -4
 2441 0002 85B0     		sub	sp, sp, #20
 2442              	.LCFI228:
 2443              		.cfi_def_cfa_offset 32
 2444 0004 00AF     		add	r7, sp, #0
 2445              	.LCFI229:
 2446              		.cfi_def_cfa_register 7
 2447 0006 7860     		str	r0, [r7, #4]
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 2448              		.loc 2 702 6
 2449 0008 7B68     		ldr	r3, [r7, #4]
 2450 000a 002B     		cmp	r3, #0
 2451 000c 01D1     		bne	.L92
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 2452              		.loc 2 704 12
 2453 000e 0123     		movs	r3, #1
 2454 0010 16E1     		b	.L93
 2455              	.L92:
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 2456              		.loc 2 711 3
 2457 0012 7B68     		ldr	r3, [r7, #4]
 2458 0014 5B6D     		ldr	r3, [r3, #84]
 2459 0016 43F00202 		orr	r2, r3, #2
 2460 001a 7B68     		ldr	r3, [r7, #4]
 2461 001c 5A65     		str	r2, [r3, #84]
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going */
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 2462              		.loc 2 714 20
 2463 001e 0321     		movs	r1, #3
 2464 0020 7868     		ldr	r0, [r7, #4]
 2465 0022 FFF7FEFF 		bl	ADC_ConversionStop
 2466 0026 0346     		mov	r3, r0
 2467 0028 FB73     		strb	r3, [r7, #15]
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 197


 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 2468              		.loc 2 722 3
 2469 002a 7B68     		ldr	r3, [r7, #4]
 2470 002c 1B68     		ldr	r3, [r3]
 2471 002e DA68     		ldr	r2, [r3, #12]
 2472 0030 7B68     		ldr	r3, [r7, #4]
 2473 0032 1B68     		ldr	r3, [r3]
 2474 0034 42F40012 		orr	r2, r2, #2097152
 2475 0038 DA60     		str	r2, [r3, #12]
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 2476              		.loc 2 725 6
 2477 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2478 003c 002B     		cmp	r3, #0
 2479 003e 0AD1     		bne	.L94
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 2480              		.loc 2 728 22
 2481 0040 7868     		ldr	r0, [r7, #4]
 2482 0042 FFF7FEFF 		bl	ADC_Disable
 2483 0046 0346     		mov	r3, r0
 2484 0048 FB73     		strb	r3, [r7, #15]
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 2485              		.loc 2 731 8
 2486 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2487 004c 002B     		cmp	r3, #0
 2488 004e 02D1     		bne	.L94
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state */
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 2489              		.loc 2 734 19
 2490 0050 7B68     		ldr	r3, [r7, #4]
 2491 0052 0122     		movs	r2, #1
 2492 0054 5A65     		str	r2, [r3, #84]
 2493              	.L94:
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 2494              		.loc 2 746 3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 198


 2495 0056 7B68     		ldr	r3, [r7, #4]
 2496 0058 1B68     		ldr	r3, [r3]
 2497 005a 5B68     		ldr	r3, [r3, #4]
 2498 005c 7A68     		ldr	r2, [r7, #4]
 2499 005e 1268     		ldr	r2, [r2]
 2500 0060 23F4FF63 		bic	r3, r3, #2040
 2501 0064 23F00703 		bic	r3, r3, #7
 2502 0068 5360     		str	r3, [r2, #4]
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 2503              		.loc 2 753 3
 2504 006a 7B68     		ldr	r3, [r7, #4]
 2505 006c 1B68     		ldr	r3, [r3]
 2506 006e 40F2FF72 		movw	r2, #2047
 2507 0072 1A60     		str	r2, [r3]
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      no direct reset applicable.
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 2508              		.loc 2 764 3
 2509 0074 7B68     		ldr	r3, [r7, #4]
 2510 0076 1B68     		ldr	r3, [r3]
 2511 0078 9A68     		ldr	r2, [r3, #8]
 2512 007a 7B68     		ldr	r3, [r7, #4]
 2513 007c 1B68     		ldr	r3, [r3]
 2514 007e 22F0A042 		bic	r2, r2, #1342177280
 2515 0082 9A60     		str	r2, [r3, #8]
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 2516              		.loc 2 765 3
 2517 0084 7B68     		ldr	r3, [r7, #4]
 2518 0086 1B68     		ldr	r3, [r3]
 2519 0088 9A68     		ldr	r2, [r3, #8]
 2520 008a 7B68     		ldr	r3, [r7, #4]
 2521 008c 1B68     		ldr	r3, [r3]
 2522 008e 42F00052 		orr	r2, r2, #536870912
 2523 0092 9A60     		str	r2, [r3, #8]
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 2524              		.loc 2 768 3
 2525 0094 7B68     		ldr	r3, [r7, #4]
 2526 0096 1B68     		ldr	r3, [r3]
 2527 0098 D968     		ldr	r1, [r3, #12]
 2528 009a 7B68     		ldr	r3, [r7, #4]
 2529 009c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 199


 2530 009e 6A4B     		ldr	r3, .L96
 2531 00a0 0B40     		ands	r3, r3, r1
 2532 00a2 D360     		str	r3, [r2, #12]
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 2533              		.loc 2 769 3
 2534 00a4 7B68     		ldr	r3, [r7, #4]
 2535 00a6 1B68     		ldr	r3, [r3]
 2536 00a8 DA68     		ldr	r2, [r3, #12]
 2537 00aa 7B68     		ldr	r3, [r7, #4]
 2538 00ac 1B68     		ldr	r3, [r3]
 2539 00ae 42F00042 		orr	r2, r2, #-2147483648
 2540 00b2 DA60     		str	r2, [r3, #12]
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 2541              		.loc 2 772 3
 2542 00b4 7B68     		ldr	r3, [r7, #4]
 2543 00b6 1B68     		ldr	r3, [r3]
 2544 00b8 1B69     		ldr	r3, [r3, #16]
 2545 00ba 7A68     		ldr	r2, [r7, #4]
 2546 00bc 1268     		ldr	r2, [r2]
 2547 00be 23F4FF63 		bic	r3, r3, #2040
 2548 00c2 23F00703 		bic	r3, r3, #7
 2549 00c6 1361     		str	r3, [r2, #16]
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 2550              		.loc 2 776 3
 2551 00c8 7B68     		ldr	r3, [r7, #4]
 2552 00ca 1B68     		ldr	r3, [r3]
 2553 00cc 5A69     		ldr	r2, [r3, #20]
 2554 00ce 7B68     		ldr	r3, [r7, #4]
 2555 00d0 1B68     		ldr	r3, [r3]
 2556 00d2 02F04042 		and	r2, r2, #-1073741824
 2557 00d6 5A61     		str	r2, [r3, #20]
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 2558              		.loc 2 779 3
 2559 00d8 7B68     		ldr	r3, [r7, #4]
 2560 00da 1B68     		ldr	r3, [r3]
 2561 00dc 9A69     		ldr	r2, [r3, #24]
 2562 00de 7B68     		ldr	r3, [r7, #4]
 2563 00e0 1B68     		ldr	r3, [r3]
 2564 00e2 02F07842 		and	r2, r2, #-134217728
 2565 00e6 9A61     		str	r2, [r3, #24]
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 2566              		.loc 2 784 3
 2567 00e8 7B68     		ldr	r3, [r7, #4]
 2568 00ea 1B68     		ldr	r3, [r3]
 2569 00ec 1A6A     		ldr	r2, [r3, #32]
 2570 00ee 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 200


 2571 00f0 1B68     		ldr	r3, [r3]
 2572 00f2 02F0F022 		and	r2, r2, #-268374016
 2573 00f6 1A62     		str	r2, [r3, #32]
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 2574              		.loc 2 787 3
 2575 00f8 7B68     		ldr	r3, [r7, #4]
 2576 00fa 1B68     		ldr	r3, [r3]
 2577 00fc 5A6A     		ldr	r2, [r3, #36]
 2578 00fe 7B68     		ldr	r3, [r7, #4]
 2579 0100 1B68     		ldr	r3, [r3]
 2580 0102 02F0FF22 		and	r2, r2, #-16711936
 2581 0106 5A62     		str	r2, [r3, #36]
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 2582              		.loc 2 790 3
 2583 0108 7B68     		ldr	r3, [r7, #4]
 2584 010a 1B68     		ldr	r3, [r3]
 2585 010c 9A6A     		ldr	r2, [r3, #40]
 2586 010e 7B68     		ldr	r3, [r7, #4]
 2587 0110 1B68     		ldr	r3, [r3]
 2588 0112 02F0FF22 		and	r2, r2, #-16711936
 2589 0116 9A62     		str	r2, [r3, #40]
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 2590              		.loc 2 793 3
 2591 0118 7B68     		ldr	r3, [r7, #4]
 2592 011a 1B68     		ldr	r3, [r3]
 2593 011c 196B     		ldr	r1, [r3, #48]
 2594 011e 7B68     		ldr	r3, [r7, #4]
 2595 0120 1A68     		ldr	r2, [r3]
 2596 0122 4A4B     		ldr	r3, .L96+4
 2597 0124 0B40     		ands	r3, r3, r1
 2598 0126 1363     		str	r3, [r2, #48]
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 2599              		.loc 2 797 3
 2600 0128 7B68     		ldr	r3, [r7, #4]
 2601 012a 1B68     		ldr	r3, [r3]
 2602 012c 596B     		ldr	r1, [r3, #52]
 2603 012e 7B68     		ldr	r3, [r7, #4]
 2604 0130 1A68     		ldr	r2, [r3]
 2605 0132 474B     		ldr	r3, .L96+8
 2606 0134 0B40     		ands	r3, r3, r1
 2607 0136 5363     		str	r3, [r2, #52]
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 2608              		.loc 2 801 3
 2609 0138 7B68     		ldr	r3, [r7, #4]
 2610 013a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 201


 2611 013c 996B     		ldr	r1, [r3, #56]
 2612 013e 7B68     		ldr	r3, [r7, #4]
 2613 0140 1A68     		ldr	r2, [r3]
 2614 0142 434B     		ldr	r3, .L96+8
 2615 0144 0B40     		ands	r3, r3, r1
 2616 0146 9363     		str	r3, [r2, #56]
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 2617              		.loc 2 805 3
 2618 0148 7B68     		ldr	r3, [r7, #4]
 2619 014a 1B68     		ldr	r3, [r3]
 2620 014c DB6B     		ldr	r3, [r3, #60]
 2621 014e 7A68     		ldr	r2, [r7, #4]
 2622 0150 1268     		ldr	r2, [r2]
 2623 0152 23F4FB63 		bic	r3, r3, #2008
 2624 0156 23F00703 		bic	r3, r3, #7
 2625 015a D363     		str	r3, [r2, #60]
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 2626              		.loc 2 813 3
 2627 015c 7B68     		ldr	r3, [r7, #4]
 2628 015e 1B68     		ldr	r3, [r3]
 2629 0160 196E     		ldr	r1, [r3, #96]
 2630 0162 7B68     		ldr	r3, [r7, #4]
 2631 0164 1A68     		ldr	r2, [r3]
 2632 0166 3B4B     		ldr	r3, .L96+12
 2633 0168 0B40     		ands	r3, r3, r1
 2634 016a 1366     		str	r3, [r2, #96]
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 2635              		.loc 2 815 3
 2636 016c 7B68     		ldr	r3, [r7, #4]
 2637 016e 1B68     		ldr	r3, [r3]
 2638 0170 596E     		ldr	r1, [r3, #100]
 2639 0172 7B68     		ldr	r3, [r7, #4]
 2640 0174 1A68     		ldr	r2, [r3]
 2641 0176 374B     		ldr	r3, .L96+12
 2642 0178 0B40     		ands	r3, r3, r1
 2643 017a 5366     		str	r3, [r2, #100]
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 2644              		.loc 2 817 3
 2645 017c 7B68     		ldr	r3, [r7, #4]
 2646 017e 1B68     		ldr	r3, [r3]
 2647 0180 996E     		ldr	r1, [r3, #104]
 2648 0182 7B68     		ldr	r3, [r7, #4]
 2649 0184 1A68     		ldr	r2, [r3]
 2650 0186 334B     		ldr	r3, .L96+12
 2651 0188 0B40     		ands	r3, r3, r1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 202


 2652 018a 9366     		str	r3, [r2, #104]
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 2653              		.loc 2 819 3
 2654 018c 7B68     		ldr	r3, [r7, #4]
 2655 018e 1B68     		ldr	r3, [r3]
 2656 0190 D96E     		ldr	r1, [r3, #108]
 2657 0192 7B68     		ldr	r3, [r7, #4]
 2658 0194 1A68     		ldr	r2, [r3]
 2659 0196 2F4B     		ldr	r3, .L96+12
 2660 0198 0B40     		ands	r3, r3, r1
 2661 019a D366     		str	r3, [r2, #108]
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 2662              		.loc 2 825 3
 2663 019c 7B68     		ldr	r3, [r7, #4]
 2664 019e 1B68     		ldr	r3, [r3]
 2665 01a0 D3F8A030 		ldr	r3, [r3, #160]
 2666 01a4 7A68     		ldr	r2, [r7, #4]
 2667 01a6 1268     		ldr	r2, [r2]
 2668 01a8 DB0C     		lsrs	r3, r3, #19
 2669 01aa DB04     		lsls	r3, r3, #19
 2670 01ac C2F8A030 		str	r3, [r2, #160]
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 2671              		.loc 2 828 3
 2672 01b0 7B68     		ldr	r3, [r7, #4]
 2673 01b2 1B68     		ldr	r3, [r3]
 2674 01b4 D3F8A430 		ldr	r3, [r3, #164]
 2675 01b8 7A68     		ldr	r2, [r7, #4]
 2676 01ba 1268     		ldr	r2, [r2]
 2677 01bc DB0C     		lsrs	r3, r3, #19
 2678 01be DB04     		lsls	r3, r3, #19
 2679 01c0 C2F8A430 		str	r3, [r2, #164]
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 2680              		.loc 2 831 3
 2681 01c4 7B68     		ldr	r3, [r7, #4]
 2682 01c6 1B68     		ldr	r3, [r3]
 2683 01c8 D3F8B030 		ldr	r3, [r3, #176]
 2684 01cc 7A68     		ldr	r2, [r7, #4]
 2685 01ce 1268     		ldr	r2, [r2]
 2686 01d0 DB0C     		lsrs	r3, r3, #19
 2687 01d2 DB04     		lsls	r3, r3, #19
 2688 01d4 C2F8B030 		str	r3, [r2, #176]
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 2689              		.loc 2 834 3
 2690 01d8 7B68     		ldr	r3, [r7, #4]
 2691 01da 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 203


 2692 01dc D3F8B420 		ldr	r2, [r3, #180]
 2693 01e0 7B68     		ldr	r3, [r7, #4]
 2694 01e2 1B68     		ldr	r3, [r3]
 2695 01e4 22F07F12 		bic	r2, r2, #8323199
 2696 01e8 C3F8B420 		str	r2, [r3, #180]
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 2697              		.loc 2 841 7
 2698 01ec 1A48     		ldr	r0, .L96+16
 2699 01ee FFF7FEFF 		bl	LL_ADC_IsEnabled
 2700 01f2 0446     		mov	r4, r0
 2701 01f4 1948     		ldr	r0, .L96+20
 2702 01f6 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2703 01fa 0346     		mov	r3, r0
 2704 01fc 1C43     		orrs	r4, r4, r3
 2705 01fe 1848     		ldr	r0, .L96+24
 2706 0200 FFF7FEFF 		bl	LL_ADC_IsEnabled
 2707 0204 0346     		mov	r3, r0
 2708 0206 2343     		orrs	r3, r3, r4
 2709              		.loc 2 841 6
 2710 0208 002B     		cmp	r3, #0
 2711 020a 08D1     		bne	.L95
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     */
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 2712              		.loc 2 850 5
 2713 020c 154B     		ldr	r3, .L96+28
 2714 020e 9A68     		ldr	r2, [r3, #8]
 2715 0210 1449     		ldr	r1, .L96+28
 2716 0212 154B     		ldr	r3, .L96+32
 2717 0214 1340     		ands	r3, r3, r2
 2718 0216 8B60     		str	r3, [r1, #8]
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (for example, using macro                                              */
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 204


 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* DeInit the low level hardware */
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
 2719              		.loc 2 870 5
 2720 0218 7868     		ldr	r0, [r7, #4]
 2721 021a FFF7FEFF 		bl	HAL_ADC_MspDeInit
 2722              	.L95:
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 2723              		.loc 2 875 3
 2724 021e 7B68     		ldr	r3, [r7, #4]
 2725 0220 0022     		movs	r2, #0
 2726 0222 9A65     		str	r2, [r3, #88]
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 2727              		.loc 2 878 38
 2728 0224 7B68     		ldr	r3, [r7, #4]
 2729 0226 0022     		movs	r2, #0
 2730 0228 DA65     		str	r2, [r3, #92]
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 2731              		.loc 2 879 38
 2732 022a 7B68     		ldr	r3, [r7, #4]
 2733 022c 0022     		movs	r2, #0
 2734 022e 1A66     		str	r2, [r3, #96]
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 2735              		.loc 2 882 15
 2736 0230 7B68     		ldr	r3, [r7, #4]
 2737 0232 0022     		movs	r2, #0
 2738 0234 5A65     		str	r2, [r3, #84]
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 2739              		.loc 2 885 3
 2740 0236 7B68     		ldr	r3, [r7, #4]
 2741 0238 0022     		movs	r2, #0
 2742 023a 83F85020 		strb	r2, [r3, #80]
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 2743              		.loc 2 888 10
 2744 023e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2745              	.L93:
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2746              		.loc 2 889 1
 2747 0240 1846     		mov	r0, r3
 2748 0242 1437     		adds	r7, r7, #20
 2749              	.LCFI230:
 2750              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 205


 2751 0244 BD46     		mov	sp, r7
 2752              	.LCFI231:
 2753              		.cfi_def_cfa_register 13
 2754              		@ sp needed
 2755 0246 90BD     		pop	{r4, r7, pc}
 2756              	.L97:
 2757              		.align	2
 2758              	.L96:
 2759 0248 04800080 		.word	-2147450876
 2760 024c 300882E0 		.word	-528349136
 2761 0250 200882E0 		.word	-528349152
 2762 0254 00F0FF03 		.word	67104768
 2763 0258 00000450 		.word	1342439424
 2764 025c 00010450 		.word	1342439680
 2765 0260 00020450 		.word	1342439936
 2766 0264 00030450 		.word	1342440192
 2767 0268 E01000FE 		.word	-33550112
 2768              		.cfi_endproc
 2769              	.LFE318:
 2771              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 2772              		.align	1
 2773              		.weak	HAL_ADC_MspInit
 2774              		.syntax unified
 2775              		.thumb
 2776              		.thumb_func
 2778              	HAL_ADC_MspInit:
 2779              	.LFB319:
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2780              		.loc 2 897 1
 2781              		.cfi_startproc
 2782              		@ args = 0, pretend = 0, frame = 8
 2783              		@ frame_needed = 1, uses_anonymous_args = 0
 2784              		@ link register save eliminated.
 2785 0000 80B4     		push	{r7}
 2786              	.LCFI232:
 2787              		.cfi_def_cfa_offset 4
 2788              		.cfi_offset 7, -4
 2789 0002 83B0     		sub	sp, sp, #12
 2790              	.LCFI233:
 2791              		.cfi_def_cfa_offset 16
 2792 0004 00AF     		add	r7, sp, #0
 2793              	.LCFI234:
 2794              		.cfi_def_cfa_register 7
 2795 0006 7860     		str	r0, [r7, #4]
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 206


 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2796              		.loc 2 904 1
 2797 0008 00BF     		nop
 2798 000a 0C37     		adds	r7, r7, #12
 2799              	.LCFI235:
 2800              		.cfi_def_cfa_offset 4
 2801 000c BD46     		mov	sp, r7
 2802              	.LCFI236:
 2803              		.cfi_def_cfa_register 13
 2804              		@ sp needed
 2805 000e 5DF8047B 		ldr	r7, [sp], #4
 2806              	.LCFI237:
 2807              		.cfi_restore 7
 2808              		.cfi_def_cfa_offset 0
 2809 0012 7047     		bx	lr
 2810              		.cfi_endproc
 2811              	.LFE319:
 2813              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 2814              		.align	1
 2815              		.weak	HAL_ADC_MspDeInit
 2816              		.syntax unified
 2817              		.thumb
 2818              		.thumb_func
 2820              	HAL_ADC_MspDeInit:
 2821              	.LFB320:
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2822              		.loc 2 914 1
 2823              		.cfi_startproc
 2824              		@ args = 0, pretend = 0, frame = 8
 2825              		@ frame_needed = 1, uses_anonymous_args = 0
 2826              		@ link register save eliminated.
 2827 0000 80B4     		push	{r7}
 2828              	.LCFI238:
 2829              		.cfi_def_cfa_offset 4
 2830              		.cfi_offset 7, -4
 2831 0002 83B0     		sub	sp, sp, #12
 2832              	.LCFI239:
 2833              		.cfi_def_cfa_offset 16
 2834 0004 00AF     		add	r7, sp, #0
 2835              	.LCFI240:
 2836              		.cfi_def_cfa_register 7
 2837 0006 7860     		str	r0, [r7, #4]
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 207


 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 2838              		.loc 2 921 1
 2839 0008 00BF     		nop
 2840 000a 0C37     		adds	r7, r7, #12
 2841              	.LCFI241:
 2842              		.cfi_def_cfa_offset 4
 2843 000c BD46     		mov	sp, r7
 2844              	.LCFI242:
 2845              		.cfi_def_cfa_register 13
 2846              		@ sp needed
 2847 000e 5DF8047B 		ldr	r7, [sp], #4
 2848              	.LCFI243:
 2849              		.cfi_restore 7
 2850              		.cfi_def_cfa_offset 0
 2851 0012 7047     		bx	lr
 2852              		.cfi_endproc
 2853              	.LFE320:
 2855              		.section	.text.HAL_ADC_Start,"ax",%progbits
 2856              		.align	1
 2857              		.global	HAL_ADC_Start
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2862              	HAL_ADC_Start:
 2863              	.LFB321:
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (pCallback == NULL)
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 208


 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 209


1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 210


1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 211


1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 212


1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2864              		.loc 2 1204 1
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 24
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 80B5     		push	{r7, lr}
 2869              	.LCFI244:
 2870              		.cfi_def_cfa_offset 8
 2871              		.cfi_offset 7, -8
 2872              		.cfi_offset 14, -4
 2873 0002 86B0     		sub	sp, sp, #24
 2874              	.LCFI245:
 2875              		.cfi_def_cfa_offset 32
 2876 0004 00AF     		add	r7, sp, #0
 2877              	.LCFI246:
 2878              		.cfi_def_cfa_register 7
 2879 0006 7860     		str	r0, [r7, #4]
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 2880              		.loc 2 1208 35
 2881 0008 5748     		ldr	r0, .L120
 2882 000a FFF7FEFF 		bl	LL_ADC_GetMultimode
 2883 000e 3861     		str	r0, [r7, #16]
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 2884              		.loc 2 1215 42
 2885 0010 7B68     		ldr	r3, [r7, #4]
 2886 0012 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 213


 2887              		.loc 2 1215 7
 2888 0014 1846     		mov	r0, r3
 2889 0016 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2890 001a 0346     		mov	r3, r0
 2891              		.loc 2 1215 6
 2892 001c 002B     		cmp	r3, #0
 2893 001e 40F09C80 		bne	.L101
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 2894              		.loc 2 1218 5
 2895 0022 7B68     		ldr	r3, [r7, #4]
 2896 0024 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2897 0028 012B     		cmp	r3, #1
 2898 002a 01D1     		bne	.L102
 2899              		.loc 2 1218 5 is_stmt 0 discriminator 1
 2900 002c 0223     		movs	r3, #2
 2901 002e 97E0     		b	.L103
 2902              	.L102:
 2903              		.loc 2 1218 5 discriminator 2
 2904 0030 7B68     		ldr	r3, [r7, #4]
 2905 0032 0122     		movs	r2, #1
 2906 0034 83F85020 		strb	r2, [r3, #80]
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 2907              		.loc 2 1221 22 is_stmt 1 discriminator 2
 2908 0038 7868     		ldr	r0, [r7, #4]
 2909 003a FFF7FEFF 		bl	ADC_Enable
 2910 003e 0346     		mov	r3, r0
 2911 0040 FB75     		strb	r3, [r7, #23]
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 2912              		.loc 2 1224 8 discriminator 2
 2913 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2914 0044 002B     		cmp	r3, #0
 2915 0046 40F08380 		bne	.L104
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 2916              		.loc 2 1229 7
 2917 004a 7B68     		ldr	r3, [r7, #4]
 2918 004c 5B6D     		ldr	r3, [r3, #84]
 2919 004e 23F47063 		bic	r3, r3, #3840
 2920 0052 23F00103 		bic	r3, r3, #1
 2921 0056 43F48072 		orr	r2, r3, #256
 2922 005a 7B68     		ldr	r3, [r7, #4]
 2923 005c 5A65     		str	r2, [r3, #84]
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 214


1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 2924              		.loc 2 1237 12
 2925 005e 7B68     		ldr	r3, [r7, #4]
 2926 0060 1B68     		ldr	r3, [r3]
 2927 0062 424A     		ldr	r2, .L120+4
 2928 0064 9342     		cmp	r3, r2
 2929 0066 02D0     		beq	.L105
 2930              		.loc 2 1237 12 is_stmt 0 discriminator 1
 2931 0068 7B68     		ldr	r3, [r7, #4]
 2932 006a 1B68     		ldr	r3, [r3]
 2933 006c 00E0     		b	.L106
 2934              	.L105:
 2935              		.loc 2 1237 12 discriminator 2
 2936 006e 404B     		ldr	r3, .L120+8
 2937              	.L106:
 2938              		.loc 2 1237 66 is_stmt 1 discriminator 4
 2939 0070 7A68     		ldr	r2, [r7, #4]
 2940 0072 1268     		ldr	r2, [r2]
 2941              		.loc 2 1237 10 discriminator 4
 2942 0074 9342     		cmp	r3, r2
 2943 0076 02D0     		beq	.L107
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2944              		.loc 2 1238 11
 2945 0078 3B69     		ldr	r3, [r7, #16]
 2946 007a 002B     		cmp	r3, #0
 2947 007c 05D1     		bne	.L108
 2948              	.L107:
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 2949              		.loc 2 1241 9
 2950 007e 7B68     		ldr	r3, [r7, #4]
 2951 0080 5B6D     		ldr	r3, [r3, #84]
 2952 0082 23F48012 		bic	r2, r3, #1048576
 2953 0086 7B68     		ldr	r3, [r7, #4]
 2954 0088 5A65     		str	r2, [r3, #84]
 2955              	.L108:
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2956              		.loc 2 1247 11
 2957 008a 7B68     		ldr	r3, [r7, #4]
 2958 008c 5B6D     		ldr	r3, [r3, #84]
 2959 008e 03F48053 		and	r3, r3, #4096
 2960              		.loc 2 1247 10
 2961 0092 B3F5805F 		cmp	r3, #4096
 2962 0096 06D1     		bne	.L109
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 2963              		.loc 2 1250 9
 2964 0098 7B68     		ldr	r3, [r7, #4]
 2965 009a 9B6D     		ldr	r3, [r3, #88]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 215


 2966 009c 23F00602 		bic	r2, r3, #6
 2967 00a0 7B68     		ldr	r3, [r7, #4]
 2968 00a2 9A65     		str	r2, [r3, #88]
 2969 00a4 02E0     		b	.L110
 2970              	.L109:
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 2971              		.loc 2 1255 9
 2972 00a6 7B68     		ldr	r3, [r7, #4]
 2973 00a8 0022     		movs	r2, #0
 2974 00aa 9A65     		str	r2, [r3, #88]
 2975              	.L110:
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 2976              		.loc 2 1260 7
 2977 00ac 7B68     		ldr	r3, [r7, #4]
 2978 00ae 1B68     		ldr	r3, [r3]
 2979 00b0 1C22     		movs	r2, #28
 2980 00b2 1A60     		str	r2, [r3]
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 2981              		.loc 2 1265 7
 2982 00b4 7B68     		ldr	r3, [r7, #4]
 2983 00b6 0022     		movs	r2, #0
 2984 00b8 83F85020 		strb	r2, [r3, #80]
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 2985              		.loc 2 1276 12
 2986 00bc 7B68     		ldr	r3, [r7, #4]
 2987 00be 1B68     		ldr	r3, [r3]
 2988 00c0 2A4A     		ldr	r2, .L120+4
 2989 00c2 9342     		cmp	r3, r2
 2990 00c4 02D0     		beq	.L111
 2991              		.loc 2 1276 12 is_stmt 0 discriminator 1
 2992 00c6 7B68     		ldr	r3, [r7, #4]
 2993 00c8 1B68     		ldr	r3, [r3]
 2994 00ca 00E0     		b	.L112
 2995              	.L111:
 2996              		.loc 2 1276 12 discriminator 2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 216


 2997 00cc 284B     		ldr	r3, .L120+8
 2998              	.L112:
 2999              		.loc 2 1276 66 is_stmt 1 discriminator 4
 3000 00ce 7A68     		ldr	r2, [r7, #4]
 3001 00d0 1268     		ldr	r2, [r2]
 3002              		.loc 2 1276 10 discriminator 4
 3003 00d2 9342     		cmp	r3, r2
 3004 00d4 08D0     		beq	.L113
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3005              		.loc 2 1277 11
 3006 00d6 3B69     		ldr	r3, [r7, #16]
 3007 00d8 002B     		cmp	r3, #0
 3008 00da 05D0     		beq	.L113
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3009              		.loc 2 1278 11
 3010 00dc 3B69     		ldr	r3, [r7, #16]
 3011 00de 052B     		cmp	r3, #5
 3012 00e0 02D0     		beq	.L113
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3013              		.loc 2 1279 11
 3014 00e2 3B69     		ldr	r3, [r7, #16]
 3015 00e4 092B     		cmp	r3, #9
 3016 00e6 14D1     		bne	.L114
 3017              	.L113:
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
 3018              		.loc 2 1283 13
 3019 00e8 7B68     		ldr	r3, [r7, #4]
 3020 00ea 1B68     		ldr	r3, [r3]
 3021 00ec DB68     		ldr	r3, [r3, #12]
 3022 00ee 03F00073 		and	r3, r3, #33554432
 3023              		.loc 2 1283 12
 3024 00f2 002B     		cmp	r3, #0
 3025 00f4 07D0     		beq	.L115
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 3026              		.loc 2 1285 11
 3027 00f6 7B68     		ldr	r3, [r7, #4]
 3028 00f8 5B6D     		ldr	r3, [r3, #84]
 3029 00fa 23F44053 		bic	r3, r3, #12288
 3030 00fe 43F48052 		orr	r2, r3, #4096
 3031 0102 7B68     		ldr	r3, [r7, #4]
 3032 0104 5A65     		str	r2, [r3, #84]
 3033              	.L115:
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 3034              		.loc 2 1289 9
 3035 0106 7B68     		ldr	r3, [r7, #4]
 3036 0108 1B68     		ldr	r3, [r3]
 3037 010a 1846     		mov	r0, r3
 3038 010c FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 3039 0110 25E0     		b	.L119
 3040              	.L114:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 217


1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3041              		.loc 2 1294 9
 3042 0112 7B68     		ldr	r3, [r7, #4]
 3043 0114 5B6D     		ldr	r3, [r3, #84]
 3044 0116 43F48012 		orr	r2, r3, #1048576
 3045 011a 7B68     		ldr	r3, [r7, #4]
 3046 011c 5A65     		str	r2, [r3, #84]
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 3047              		.loc 2 1297 25
 3048 011e 7B68     		ldr	r3, [r7, #4]
 3049 0120 1B68     		ldr	r3, [r3]
 3050 0122 124A     		ldr	r2, .L120+4
 3051 0124 9342     		cmp	r3, r2
 3052 0126 02D0     		beq	.L117
 3053              		.loc 2 1297 25 is_stmt 0 discriminator 1
 3054 0128 7B68     		ldr	r3, [r7, #4]
 3055 012a 1B68     		ldr	r3, [r3]
 3056 012c 00E0     		b	.L118
 3057              	.L117:
 3058              		.loc 2 1297 25 discriminator 2
 3059 012e 104B     		ldr	r3, .L120+8
 3060              	.L118:
 3061              		.loc 2 1297 23 is_stmt 1 discriminator 4
 3062 0130 FB60     		str	r3, [r7, #12]
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 3063              		.loc 2 1298 13 discriminator 4
 3064 0132 FB68     		ldr	r3, [r7, #12]
 3065 0134 DB68     		ldr	r3, [r3, #12]
 3066 0136 03F00073 		and	r3, r3, #33554432
 3067              		.loc 2 1298 12 discriminator 4
 3068 013a 002B     		cmp	r3, #0
 3069 013c 0FD0     		beq	.L119
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 3070              		.loc 2 1300 11
 3071 013e 7B68     		ldr	r3, [r7, #4]
 3072 0140 5B6D     		ldr	r3, [r3, #84]
 3073 0142 23F44053 		bic	r3, r3, #12288
 3074 0146 43F48052 		orr	r2, r3, #4096
 3075 014a 7B68     		ldr	r3, [r7, #4]
 3076 014c 5A65     		str	r2, [r3, #84]
 3077 014e 06E0     		b	.L119
 3078              	.L104:
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 218


1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 3079              		.loc 2 1317 7
 3080 0150 7B68     		ldr	r3, [r7, #4]
 3081 0152 0022     		movs	r2, #0
 3082 0154 83F85020 		strb	r2, [r3, #80]
 3083 0158 01E0     		b	.L119
 3084              	.L101:
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 3085              		.loc 2 1322 20
 3086 015a 0223     		movs	r3, #2
 3087 015c FB75     		strb	r3, [r7, #23]
 3088              	.L119:
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 3089              		.loc 2 1326 10
 3090 015e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3091              	.L103:
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3092              		.loc 2 1327 1
 3093 0160 1846     		mov	r0, r3
 3094 0162 1837     		adds	r7, r7, #24
 3095              	.LCFI247:
 3096              		.cfi_def_cfa_offset 8
 3097 0164 BD46     		mov	sp, r7
 3098              	.LCFI248:
 3099              		.cfi_def_cfa_register 13
 3100              		@ sp needed
 3101 0166 80BD     		pop	{r7, pc}
 3102              	.L121:
 3103              		.align	2
 3104              	.L120:
 3105 0168 00030450 		.word	1342440192
 3106 016c 00010450 		.word	1342439680
 3107 0170 00000450 		.word	1342439424
 3108              		.cfi_endproc
 3109              	.LFE321:
 3111              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 3112              		.align	1
 3113              		.global	HAL_ADC_Stop
 3114              		.syntax unified
 3115              		.thumb
 3116              		.thumb_func
 3118              	HAL_ADC_Stop:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 219


 3119              	.LFB322:
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3120              		.loc 2 1339 1
 3121              		.cfi_startproc
 3122              		@ args = 0, pretend = 0, frame = 16
 3123              		@ frame_needed = 1, uses_anonymous_args = 0
 3124 0000 80B5     		push	{r7, lr}
 3125              	.LCFI249:
 3126              		.cfi_def_cfa_offset 8
 3127              		.cfi_offset 7, -8
 3128              		.cfi_offset 14, -4
 3129 0002 84B0     		sub	sp, sp, #16
 3130              	.LCFI250:
 3131              		.cfi_def_cfa_offset 24
 3132 0004 00AF     		add	r7, sp, #0
 3133              	.LCFI251:
 3134              		.cfi_def_cfa_register 7
 3135 0006 7860     		str	r0, [r7, #4]
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 3136              		.loc 2 1346 3
 3137 0008 7B68     		ldr	r3, [r7, #4]
 3138 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3139 000e 012B     		cmp	r3, #1
 3140 0010 01D1     		bne	.L123
 3141              		.loc 2 1346 3 is_stmt 0 discriminator 1
 3142 0012 0223     		movs	r3, #2
 3143 0014 23E0     		b	.L124
 3144              	.L123:
 3145              		.loc 2 1346 3 discriminator 2
 3146 0016 7B68     		ldr	r3, [r7, #4]
 3147 0018 0122     		movs	r2, #1
 3148 001a 83F85020 		strb	r2, [r3, #80]
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 3149              		.loc 2 1349 20 is_stmt 1 discriminator 2
 3150 001e 0321     		movs	r1, #3
 3151 0020 7868     		ldr	r0, [r7, #4]
 3152 0022 FFF7FEFF 		bl	ADC_ConversionStop
 3153 0026 0346     		mov	r3, r0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 220


 3154 0028 FB73     		strb	r3, [r7, #15]
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 3155              		.loc 2 1352 6 discriminator 2
 3156 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3157 002c 002B     		cmp	r3, #0
 3158 002e 11D1     		bne	.L125
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 3159              		.loc 2 1355 22
 3160 0030 7868     		ldr	r0, [r7, #4]
 3161 0032 FFF7FEFF 		bl	ADC_Disable
 3162 0036 0346     		mov	r3, r0
 3163 0038 FB73     		strb	r3, [r7, #15]
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 3164              		.loc 2 1358 8
 3165 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3166 003c 002B     		cmp	r3, #0
 3167 003e 09D1     		bne	.L125
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 3168              		.loc 2 1361 7
 3169 0040 7B68     		ldr	r3, [r7, #4]
 3170 0042 5B6D     		ldr	r3, [r3, #84]
 3171 0044 23F48853 		bic	r3, r3, #4352
 3172 0048 23F00103 		bic	r3, r3, #1
 3173 004c 43F00102 		orr	r2, r3, #1
 3174 0050 7B68     		ldr	r3, [r7, #4]
 3175 0052 5A65     		str	r2, [r3, #84]
 3176              	.L125:
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 3177              		.loc 2 1368 3
 3178 0054 7B68     		ldr	r3, [r7, #4]
 3179 0056 0022     		movs	r2, #0
 3180 0058 83F85020 		strb	r2, [r3, #80]
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 3181              		.loc 2 1371 10
 3182 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3183              	.L124:
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3184              		.loc 2 1372 1
 3185 005e 1846     		mov	r0, r3
 3186 0060 1037     		adds	r7, r7, #16
 3187              	.LCFI252:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 221


 3188              		.cfi_def_cfa_offset 8
 3189 0062 BD46     		mov	sp, r7
 3190              	.LCFI253:
 3191              		.cfi_def_cfa_register 13
 3192              		@ sp needed
 3193 0064 80BD     		pop	{r7, pc}
 3194              		.cfi_endproc
 3195              	.LFE322:
 3197              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 3198              		.align	1
 3199              		.global	HAL_ADC_PollForConversion
 3200              		.syntax unified
 3201              		.thumb
 3202              		.thumb_func
 3204              	HAL_ADC_PollForConversion:
 3205              	.LFB323:
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3206              		.loc 2 1393 1
 3207              		.cfi_startproc
 3208              		@ args = 0, pretend = 0, frame = 32
 3209              		@ frame_needed = 1, uses_anonymous_args = 0
 3210 0000 80B5     		push	{r7, lr}
 3211              	.LCFI254:
 3212              		.cfi_def_cfa_offset 8
 3213              		.cfi_offset 7, -8
 3214              		.cfi_offset 14, -4
 3215 0002 88B0     		sub	sp, sp, #32
 3216              	.LCFI255:
 3217              		.cfi_def_cfa_offset 40
 3218 0004 00AF     		add	r7, sp, #0
 3219              	.LCFI256:
 3220              		.cfi_def_cfa_register 7
 3221 0006 7860     		str	r0, [r7, #4]
 3222 0008 3960     		str	r1, [r7]
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 222


1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 3223              		.loc 2 1399 35
 3224 000a 6648     		ldr	r0, .L147
 3225 000c FFF7FEFF 		bl	LL_ADC_GetMultimode
 3226 0010 7861     		str	r0, [r7, #20]
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 3227              		.loc 2 1406 17
 3228 0012 7B68     		ldr	r3, [r7, #4]
 3229 0014 5B69     		ldr	r3, [r3, #20]
 3230              		.loc 2 1406 6
 3231 0016 082B     		cmp	r3, #8
 3232 0018 02D1     		bne	.L127
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
 3233              		.loc 2 1408 18
 3234 001a 0823     		movs	r3, #8
 3235 001c FB61     		str	r3, [r7, #28]
 3236 001e 2AE0     		b	.L128
 3237              	.L127:
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3238              		.loc 2 1420 8
 3239 0020 7B69     		ldr	r3, [r7, #20]
 3240 0022 002B     		cmp	r3, #0
 3241 0024 05D0     		beq	.L129
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3242              		.loc 2 1421 9
 3243 0026 7B69     		ldr	r3, [r7, #20]
 3244 0028 052B     		cmp	r3, #5
 3245 002a 02D0     		beq	.L129
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3246              		.loc 2 1422 9
 3247 002c 7B69     		ldr	r3, [r7, #20]
 3248 002e 092B     		cmp	r3, #9
 3249 0030 11D1     		bne	.L130
 3250              	.L129:
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 223


1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 3251              		.loc 2 1426 11
 3252 0032 7B68     		ldr	r3, [r7, #4]
 3253 0034 1B68     		ldr	r3, [r3]
 3254 0036 DB68     		ldr	r3, [r3, #12]
 3255 0038 03F00103 		and	r3, r3, #1
 3256              		.loc 2 1426 10
 3257 003c 002B     		cmp	r3, #0
 3258 003e 07D0     		beq	.L131
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3259              		.loc 2 1428 9
 3260 0040 7B68     		ldr	r3, [r7, #4]
 3261 0042 5B6D     		ldr	r3, [r3, #84]
 3262 0044 43F02002 		orr	r2, r3, #32
 3263 0048 7B68     		ldr	r3, [r7, #4]
 3264 004a 5A65     		str	r2, [r3, #84]
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 3265              		.loc 2 1429 16
 3266 004c 0123     		movs	r3, #1
 3267 004e A4E0     		b	.L132
 3268              	.L131:
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 3269              		.loc 2 1433 22
 3270 0050 0423     		movs	r3, #4
 3271 0052 FB61     		str	r3, [r7, #28]
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3272              		.loc 2 1426 10
 3273 0054 0FE0     		b	.L128
 3274              	.L130:
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
 3275              		.loc 2 1439 11
 3276 0056 5348     		ldr	r0, .L147
 3277 0058 FFF7FEFF 		bl	LL_ADC_GetMultiDMATransfer
 3278 005c 0346     		mov	r3, r0
 3279              		.loc 2 1439 10
 3280 005e 002B     		cmp	r3, #0
 3281 0060 07D0     		beq	.L133
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3282              		.loc 2 1441 9
 3283 0062 7B68     		ldr	r3, [r7, #4]
 3284 0064 5B6D     		ldr	r3, [r3, #84]
 3285 0066 43F02002 		orr	r2, r3, #32
 3286 006a 7B68     		ldr	r3, [r7, #4]
 3287 006c 5A65     		str	r2, [r3, #84]
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
 3288              		.loc 2 1442 16
 3289 006e 0123     		movs	r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 224


 3290 0070 93E0     		b	.L132
 3291              	.L133:
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 3292              		.loc 2 1446 22
 3293 0072 0423     		movs	r3, #4
 3294 0074 FB61     		str	r3, [r7, #28]
 3295              	.L128:
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check ADC DMA mode */
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 3296              		.loc 2 1464 15
 3297 0076 FFF7FEFF 		bl	HAL_GetTick
 3298 007a 3861     		str	r0, [r7, #16]
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 3299              		.loc 2 1467 9
 3300 007c 21E0     		b	.L134
 3301              	.L136:
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 3302              		.loc 2 1470 8
 3303 007e 3B68     		ldr	r3, [r7]
 3304 0080 B3F1FF3F 		cmp	r3, #-1
 3305 0084 1DD0     		beq	.L134
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 3306              		.loc 2 1472 13
 3307 0086 FFF7FEFF 		bl	HAL_GetTick
 3308 008a 0246     		mov	r2, r0
 3309              		.loc 2 1472 27
 3310 008c 3B69     		ldr	r3, [r7, #16]
 3311 008e D31A     		subs	r3, r2, r3
 3312              		.loc 2 1472 10
 3313 0090 3A68     		ldr	r2, [r7]
 3314 0092 9A42     		cmp	r2, r3
 3315 0094 02D3     		bcc	.L135
 3316              		.loc 2 1472 51 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 225


 3317 0096 3B68     		ldr	r3, [r7]
 3318 0098 002B     		cmp	r3, #0
 3319 009a 12D1     		bne	.L134
 3320              	.L135:
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 3321              		.loc 2 1475 18
 3322 009c 7B68     		ldr	r3, [r7, #4]
 3323 009e 1B68     		ldr	r3, [r3]
 3324              		.loc 2 1475 28
 3325 00a0 1A68     		ldr	r2, [r3]
 3326              		.loc 2 1475 34
 3327 00a2 FB69     		ldr	r3, [r7, #28]
 3328 00a4 1340     		ands	r3, r3, r2
 3329              		.loc 2 1475 12
 3330 00a6 002B     		cmp	r3, #0
 3331 00a8 0BD1     		bne	.L134
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 3332              		.loc 2 1478 11
 3333 00aa 7B68     		ldr	r3, [r7, #4]
 3334 00ac 5B6D     		ldr	r3, [r3, #84]
 3335 00ae 43F00402 		orr	r2, r3, #4
 3336 00b2 7B68     		ldr	r3, [r7, #4]
 3337 00b4 5A65     		str	r2, [r3, #84]
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Process unlocked */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 3338              		.loc 2 1481 11
 3339 00b6 7B68     		ldr	r3, [r7, #4]
 3340 00b8 0022     		movs	r2, #0
 3341 00ba 83F85020 		strb	r2, [r3, #80]
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 3342              		.loc 2 1483 18
 3343 00be 0323     		movs	r3, #3
 3344 00c0 6BE0     		b	.L132
 3345              	.L134:
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3346              		.loc 2 1467 15
 3347 00c2 7B68     		ldr	r3, [r7, #4]
 3348 00c4 1B68     		ldr	r3, [r3]
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3349              		.loc 2 1467 25
 3350 00c6 1A68     		ldr	r2, [r3]
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3351              		.loc 2 1467 31
 3352 00c8 FB69     		ldr	r3, [r7, #28]
 3353 00ca 1340     		ands	r3, r3, r2
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3354              		.loc 2 1467 9
 3355 00cc 002B     		cmp	r3, #0
 3356 00ce D6D0     		beq	.L136
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 226


1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 3357              		.loc 2 1490 3
 3358 00d0 7B68     		ldr	r3, [r7, #4]
 3359 00d2 5B6D     		ldr	r3, [r3, #84]
 3360 00d4 43F40072 		orr	r2, r3, #512
 3361 00d8 7B68     		ldr	r3, [r7, #4]
 3362 00da 5A65     		str	r2, [r3, #84]
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 3363              		.loc 2 1494 46
 3364 00dc 7B68     		ldr	r3, [r7, #4]
 3365 00de 1B68     		ldr	r3, [r3]
 3366              		.loc 2 1494 8
 3367 00e0 1846     		mov	r0, r3
 3368 00e2 FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 3369 00e6 0346     		mov	r3, r0
 3370              		.loc 2 1494 6
 3371 00e8 002B     		cmp	r3, #0
 3372 00ea 1CD0     		beq	.L137
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 3373              		.loc 2 1495 21
 3374 00ec 7B68     		ldr	r3, [r7, #4]
 3375 00ee 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 3376              		.loc 2 1495 7
 3377 00f0 002B     		cmp	r3, #0
 3378 00f2 18D1     		bne	.L137
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 3379              		.loc 2 1499 9
 3380 00f4 7B68     		ldr	r3, [r7, #4]
 3381 00f6 1B68     		ldr	r3, [r3]
 3382 00f8 1B68     		ldr	r3, [r3]
 3383 00fa 03F00803 		and	r3, r3, #8
 3384              		.loc 2 1499 8
 3385 00fe 082B     		cmp	r3, #8
 3386 0100 11D1     		bne	.L137
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3387              		.loc 2 1502 7
 3388 0102 7B68     		ldr	r3, [r7, #4]
 3389 0104 5B6D     		ldr	r3, [r3, #84]
 3390 0106 23F48072 		bic	r2, r3, #256
 3391 010a 7B68     		ldr	r3, [r7, #4]
 3392 010c 5A65     		str	r2, [r3, #84]
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 3393              		.loc 2 1504 16
 3394 010e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 227


 3395 0110 5B6D     		ldr	r3, [r3, #84]
 3396              		.loc 2 1504 24
 3397 0112 03F48053 		and	r3, r3, #4096
 3398              		.loc 2 1504 10
 3399 0116 002B     		cmp	r3, #0
 3400 0118 05D1     		bne	.L137
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3401              		.loc 2 1506 9
 3402 011a 7B68     		ldr	r3, [r7, #4]
 3403 011c 5B6D     		ldr	r3, [r3, #84]
 3404 011e 43F00102 		orr	r2, r3, #1
 3405 0122 7B68     		ldr	r3, [r7, #4]
 3406 0124 5A65     		str	r2, [r3, #84]
 3407              	.L137:
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3408              		.loc 2 1515 8
 3409 0126 7B68     		ldr	r3, [r7, #4]
 3410 0128 1B68     		ldr	r3, [r3]
 3411 012a 1F4A     		ldr	r2, .L147+4
 3412 012c 9342     		cmp	r3, r2
 3413 012e 02D0     		beq	.L138
 3414              		.loc 2 1515 8 is_stmt 0 discriminator 1
 3415 0130 7B68     		ldr	r3, [r7, #4]
 3416 0132 1B68     		ldr	r3, [r3]
 3417 0134 00E0     		b	.L139
 3418              	.L138:
 3419              		.loc 2 1515 8 discriminator 2
 3420 0136 1D4B     		ldr	r3, .L147+8
 3421              	.L139:
 3422              		.loc 2 1515 62 is_stmt 1 discriminator 4
 3423 0138 7A68     		ldr	r2, [r7, #4]
 3424 013a 1268     		ldr	r2, [r2]
 3425              		.loc 2 1515 6 discriminator 4
 3426 013c 9342     		cmp	r3, r2
 3427 013e 08D0     		beq	.L140
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3428              		.loc 2 1516 7
 3429 0140 7B69     		ldr	r3, [r7, #20]
 3430 0142 002B     		cmp	r3, #0
 3431 0144 05D0     		beq	.L140
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3432              		.loc 2 1517 7
 3433 0146 7B69     		ldr	r3, [r7, #20]
 3434 0148 052B     		cmp	r3, #5
 3435 014a 02D0     		beq	.L140
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3436              		.loc 2 1518 7
 3437 014c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 228


 3438 014e 092B     		cmp	r3, #9
 3439 0150 04D1     		bne	.L141
 3440              	.L140:
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 3441              		.loc 2 1522 16
 3442 0152 7B68     		ldr	r3, [r7, #4]
 3443 0154 1B68     		ldr	r3, [r3]
 3444              		.loc 2 1522 14
 3445 0156 DB68     		ldr	r3, [r3, #12]
 3446 0158 BB61     		str	r3, [r7, #24]
 3447 015a 0CE0     		b	.L142
 3448              	.L141:
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 3449              		.loc 2 1527 21
 3450 015c 7B68     		ldr	r3, [r7, #4]
 3451 015e 1B68     		ldr	r3, [r3]
 3452 0160 114A     		ldr	r2, .L147+4
 3453 0162 9342     		cmp	r3, r2
 3454 0164 02D0     		beq	.L143
 3455              		.loc 2 1527 21 is_stmt 0 discriminator 1
 3456 0166 7B68     		ldr	r3, [r7, #4]
 3457 0168 1B68     		ldr	r3, [r3]
 3458 016a 00E0     		b	.L144
 3459              	.L143:
 3460              		.loc 2 1527 21 discriminator 2
 3461 016c 0F4B     		ldr	r3, .L147+8
 3462              	.L144:
 3463              		.loc 2 1527 19 is_stmt 1 discriminator 4
 3464 016e FB60     		str	r3, [r7, #12]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 3465              		.loc 2 1528 14 discriminator 4
 3466 0170 FB68     		ldr	r3, [r7, #12]
 3467 0172 DB68     		ldr	r3, [r3, #12]
 3468 0174 BB61     		str	r3, [r7, #24]
 3469              	.L142:
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 3470              		.loc 2 1536 6
 3471 0176 FB69     		ldr	r3, [r7, #28]
 3472 0178 082B     		cmp	r3, #8
 3473 017a 04D1     		bne	.L145
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
 3474              		.loc 2 1538 5
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 229


 3475 017c 7B68     		ldr	r3, [r7, #4]
 3476 017e 1B68     		ldr	r3, [r3]
 3477 0180 0822     		movs	r2, #8
 3478 0182 1A60     		str	r2, [r3]
 3479 0184 08E0     		b	.L146
 3480              	.L145:
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 3481              		.loc 2 1545 9
 3482 0186 BB69     		ldr	r3, [r7, #24]
 3483 0188 03F48043 		and	r3, r3, #16384
 3484              		.loc 2 1545 8
 3485 018c 002B     		cmp	r3, #0
 3486 018e 03D1     		bne	.L146
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 3487              		.loc 2 1547 7
 3488 0190 7B68     		ldr	r3, [r7, #4]
 3489 0192 1B68     		ldr	r3, [r3]
 3490 0194 0C22     		movs	r2, #12
 3491 0196 1A60     		str	r2, [r3]
 3492              	.L146:
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 3493              		.loc 2 1552 10
 3494 0198 0023     		movs	r3, #0
 3495              	.L132:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3496              		.loc 2 1553 1
 3497 019a 1846     		mov	r0, r3
 3498 019c 2037     		adds	r7, r7, #32
 3499              	.LCFI257:
 3500              		.cfi_def_cfa_offset 8
 3501 019e BD46     		mov	sp, r7
 3502              	.LCFI258:
 3503              		.cfi_def_cfa_register 13
 3504              		@ sp needed
 3505 01a0 80BD     		pop	{r7, pc}
 3506              	.L148:
 3507 01a2 00BF     		.align	2
 3508              	.L147:
 3509 01a4 00030450 		.word	1342440192
 3510 01a8 00010450 		.word	1342439680
 3511 01ac 00000450 		.word	1342439424
 3512              		.cfi_endproc
 3513              	.LFE323:
 3515              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 3516              		.align	1
 3517              		.global	HAL_ADC_PollForEvent
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 230


 3518              		.syntax unified
 3519              		.thumb
 3520              		.thumb_func
 3522              	HAL_ADC_PollForEvent:
 3523              	.LFB324:
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                                       all STM32 series)
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                                       all STM32 series)
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                                       all STM32 series)
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3524              		.loc 2 1579 1
 3525              		.cfi_startproc
 3526              		@ args = 0, pretend = 0, frame = 24
 3527              		@ frame_needed = 1, uses_anonymous_args = 0
 3528 0000 80B5     		push	{r7, lr}
 3529              	.LCFI259:
 3530              		.cfi_def_cfa_offset 8
 3531              		.cfi_offset 7, -8
 3532              		.cfi_offset 14, -4
 3533 0002 86B0     		sub	sp, sp, #24
 3534              	.LCFI260:
 3535              		.cfi_def_cfa_offset 32
 3536 0004 00AF     		add	r7, sp, #0
 3537              	.LCFI261:
 3538              		.cfi_def_cfa_register 7
 3539 0006 F860     		str	r0, [r7, #12]
 3540 0008 B960     		str	r1, [r7, #8]
 3541 000a 7A60     		str	r2, [r7, #4]
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 231


 3542              		.loc 2 1587 15
 3543 000c FFF7FEFF 		bl	HAL_GetTick
 3544 0010 7861     		str	r0, [r7, #20]
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 3545              		.loc 2 1590 9
 3546 0012 22E0     		b	.L150
 3547              	.L153:
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 3548              		.loc 2 1593 8
 3549 0014 7B68     		ldr	r3, [r7, #4]
 3550 0016 B3F1FF3F 		cmp	r3, #-1
 3551 001a 1ED0     		beq	.L150
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 3552              		.loc 2 1595 13
 3553 001c FFF7FEFF 		bl	HAL_GetTick
 3554 0020 0246     		mov	r2, r0
 3555              		.loc 2 1595 27
 3556 0022 7B69     		ldr	r3, [r7, #20]
 3557 0024 D31A     		subs	r3, r2, r3
 3558              		.loc 2 1595 10
 3559 0026 7A68     		ldr	r2, [r7, #4]
 3560 0028 9A42     		cmp	r2, r3
 3561 002a 02D3     		bcc	.L151
 3562              		.loc 2 1595 51 discriminator 1
 3563 002c 7B68     		ldr	r3, [r7, #4]
 3564 002e 002B     		cmp	r3, #0
 3565 0030 13D1     		bne	.L150
 3566              	.L151:
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 3567              		.loc 2 1598 13
 3568 0032 FB68     		ldr	r3, [r7, #12]
 3569 0034 1B68     		ldr	r3, [r3]
 3570 0036 1A68     		ldr	r2, [r3]
 3571 0038 BB68     		ldr	r3, [r7, #8]
 3572 003a 1340     		ands	r3, r3, r2
 3573              		.loc 2 1598 12
 3574 003c BA68     		ldr	r2, [r7, #8]
 3575 003e 9A42     		cmp	r2, r3
 3576 0040 0BD0     		beq	.L150
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 3577              		.loc 2 1601 11
 3578 0042 FB68     		ldr	r3, [r7, #12]
 3579 0044 5B6D     		ldr	r3, [r3, #84]
 3580 0046 43F00402 		orr	r2, r3, #4
 3581 004a FB68     		ldr	r3, [r7, #12]
 3582 004c 5A65     		str	r2, [r3, #84]
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Process unlocked */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 232


1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 3583              		.loc 2 1604 11
 3584 004e FB68     		ldr	r3, [r7, #12]
 3585 0050 0022     		movs	r2, #0
 3586 0052 83F85020 		strb	r2, [r3, #80]
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_TIMEOUT;
 3587              		.loc 2 1606 18
 3588 0056 0323     		movs	r3, #3
 3589 0058 7DE0     		b	.L152
 3590              	.L150:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3591              		.loc 2 1590 10
 3592 005a FB68     		ldr	r3, [r7, #12]
 3593 005c 1B68     		ldr	r3, [r3]
 3594 005e 1A68     		ldr	r2, [r3]
 3595 0060 BB68     		ldr	r3, [r7, #8]
 3596 0062 1340     		ands	r3, r3, r2
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3597              		.loc 2 1590 9
 3598 0064 BA68     		ldr	r2, [r7, #8]
 3599 0066 9A42     		cmp	r2, r3
 3600 0068 D4D1     		bne	.L153
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   switch (EventType)
 3601              		.loc 2 1612 3
 3602 006a BB68     		ldr	r3, [r7, #8]
 3603 006c B3F5806F 		cmp	r3, #1024
 3604 0070 48D0     		beq	.L154
 3605 0072 BB68     		ldr	r3, [r7, #8]
 3606 0074 B3F5806F 		cmp	r3, #1024
 3607 0078 56D8     		bhi	.L155
 3608 007a BB68     		ldr	r3, [r7, #8]
 3609 007c B3F5007F 		cmp	r3, #512
 3610 0080 34D0     		beq	.L156
 3611 0082 BB68     		ldr	r3, [r7, #8]
 3612 0084 B3F5007F 		cmp	r3, #512
 3613 0088 4ED8     		bhi	.L155
 3614 008a BB68     		ldr	r3, [r7, #8]
 3615 008c B3F5807F 		cmp	r3, #256
 3616 0090 20D0     		beq	.L157
 3617 0092 BB68     		ldr	r3, [r7, #8]
 3618 0094 B3F5807F 		cmp	r3, #256
 3619 0098 46D8     		bhi	.L155
 3620 009a BB68     		ldr	r3, [r7, #8]
 3621 009c 022B     		cmp	r3, #2
 3622 009e 03D0     		beq	.L158
 3623 00a0 BB68     		ldr	r3, [r7, #8]
 3624 00a2 802B     		cmp	r3, #128
 3625 00a4 0BD0     		beq	.L159
 3626 00a6 3FE0     		b	.L155
 3627              	.L158:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 233


1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling event */
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
 3628              		.loc 2 1617 7
 3629 00a8 FB68     		ldr	r3, [r7, #12]
 3630 00aa 5B6D     		ldr	r3, [r3, #84]
 3631 00ac 43F40062 		orr	r2, r3, #2048
 3632 00b0 FB68     		ldr	r3, [r7, #12]
 3633 00b2 5A65     		str	r2, [r3, #84]
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
 3634              		.loc 2 1620 7
 3635 00b4 FB68     		ldr	r3, [r7, #12]
 3636 00b6 1B68     		ldr	r3, [r3]
 3637 00b8 0222     		movs	r2, #2
 3638 00ba 1A60     		str	r2, [r3]
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3639              		.loc 2 1622 7
 3640 00bc 4AE0     		b	.L160
 3641              	.L159:
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For example:                                                             */
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 3642              		.loc 2 1636 7
 3643 00be FB68     		ldr	r3, [r7, #12]
 3644 00c0 5B6D     		ldr	r3, [r3, #84]
 3645 00c2 43F48032 		orr	r2, r3, #65536
 3646 00c6 FB68     		ldr	r3, [r7, #12]
 3647 00c8 5A65     		str	r2, [r3, #84]
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 3648              		.loc 2 1639 7
 3649 00ca FB68     		ldr	r3, [r7, #12]
 3650 00cc 1B68     		ldr	r3, [r3]
 3651 00ce 8022     		movs	r2, #128
 3652 00d0 1A60     		str	r2, [r3]
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3653              		.loc 2 1641 7
 3654 00d2 3FE0     		b	.L160
 3655              	.L157:
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 234


1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 3656              		.loc 2 1646 7
 3657 00d4 FB68     		ldr	r3, [r7, #12]
 3658 00d6 5B6D     		ldr	r3, [r3, #84]
 3659 00d8 43F40032 		orr	r2, r3, #131072
 3660 00dc FB68     		ldr	r3, [r7, #12]
 3661 00de 5A65     		str	r2, [r3, #84]
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 3662              		.loc 2 1649 7
 3663 00e0 FB68     		ldr	r3, [r7, #12]
 3664 00e2 1B68     		ldr	r3, [r3]
 3665 00e4 4FF48072 		mov	r2, #256
 3666 00e8 1A60     		str	r2, [r3]
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3667              		.loc 2 1651 7
 3668 00ea 33E0     		b	.L160
 3669              	.L156:
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 3670              		.loc 2 1656 7
 3671 00ec FB68     		ldr	r3, [r7, #12]
 3672 00ee 5B6D     		ldr	r3, [r3, #84]
 3673 00f0 43F48022 		orr	r2, r3, #262144
 3674 00f4 FB68     		ldr	r3, [r7, #12]
 3675 00f6 5A65     		str	r2, [r3, #84]
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 3676              		.loc 2 1659 7
 3677 00f8 FB68     		ldr	r3, [r7, #12]
 3678 00fa 1B68     		ldr	r3, [r3]
 3679 00fc 4FF40072 		mov	r2, #512
 3680 0100 1A60     		str	r2, [r3]
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3681              		.loc 2 1661 7
 3682 0102 27E0     		b	.L160
 3683              	.L154:
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow event */
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 3684              		.loc 2 1666 7
 3685 0104 FB68     		ldr	r3, [r7, #12]
 3686 0106 5B6D     		ldr	r3, [r3, #84]
 3687 0108 43F48042 		orr	r2, r3, #16384
 3688 010c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 235


 3689 010e 5A65     		str	r2, [r3, #84]
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 3690              		.loc 2 1669 7
 3691 0110 FB68     		ldr	r3, [r7, #12]
 3692 0112 9B6D     		ldr	r3, [r3, #88]
 3693 0114 43F00802 		orr	r2, r3, #8
 3694 0118 FB68     		ldr	r3, [r7, #12]
 3695 011a 9A65     		str	r2, [r3, #88]
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 3696              		.loc 2 1672 7
 3697 011c FB68     		ldr	r3, [r7, #12]
 3698 011e 1B68     		ldr	r3, [r3]
 3699 0120 4FF48062 		mov	r2, #1024
 3700 0124 1A60     		str	r2, [r3]
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3701              		.loc 2 1674 7
 3702 0126 15E0     		b	.L160
 3703              	.L155:
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Overrun event */
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* considered as an error.                                                */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* overrun ")                                                             */
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 3704              		.loc 2 1682 21
 3705 0128 FB68     		ldr	r3, [r7, #12]
 3706 012a 5B6B     		ldr	r3, [r3, #52]
 3707              		.loc 2 1682 10
 3708 012c 002B     		cmp	r3, #0
 3709 012e 0CD1     		bne	.L161
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state */
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 3710              		.loc 2 1685 9
 3711 0130 FB68     		ldr	r3, [r7, #12]
 3712 0132 5B6D     		ldr	r3, [r3, #84]
 3713 0134 43F48062 		orr	r2, r3, #1024
 3714 0138 FB68     		ldr	r3, [r7, #12]
 3715 013a 5A65     		str	r2, [r3, #84]
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 3716              		.loc 2 1688 9
 3717 013c FB68     		ldr	r3, [r7, #12]
 3718 013e 9B6D     		ldr	r3, [r3, #88]
 3719 0140 43F00202 		orr	r2, r3, #2
 3720 0144 FB68     		ldr	r3, [r7, #12]
 3721 0146 9A65     		str	r2, [r3, #88]
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 236


1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            as OVR is cleared. */
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
 3722              		.loc 2 1697 7
 3723 0148 03E0     		b	.L163
 3724              	.L161:
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 3725              		.loc 2 1695 9
 3726 014a FB68     		ldr	r3, [r7, #12]
 3727 014c 1B68     		ldr	r3, [r3]
 3728 014e 1022     		movs	r2, #16
 3729 0150 1A60     		str	r2, [r3]
 3730              	.L163:
 3731              		.loc 2 1697 7
 3732 0152 00BF     		nop
 3733              	.L160:
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 3734              		.loc 2 1701 10
 3735 0154 0023     		movs	r3, #0
 3736              	.L152:
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 3737              		.loc 2 1702 1
 3738 0156 1846     		mov	r0, r3
 3739 0158 1837     		adds	r7, r7, #24
 3740              	.LCFI262:
 3741              		.cfi_def_cfa_offset 8
 3742 015a BD46     		mov	sp, r7
 3743              	.LCFI263:
 3744              		.cfi_def_cfa_register 13
 3745              		@ sp needed
 3746 015c 80BD     		pop	{r7, pc}
 3747              		.cfi_endproc
 3748              	.LFE324:
 3750              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3751              		.align	1
 3752              		.global	HAL_ADC_Start_IT
 3753              		.syntax unified
 3754              		.thumb
 3755              		.thumb_func
 3757              	HAL_ADC_Start_IT:
 3758              	.LFB325:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 237


1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC Master.
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 3759              		.loc 2 1728 1
 3760              		.cfi_startproc
 3761              		@ args = 0, pretend = 0, frame = 24
 3762              		@ frame_needed = 1, uses_anonymous_args = 0
 3763 0000 80B5     		push	{r7, lr}
 3764              	.LCFI264:
 3765              		.cfi_def_cfa_offset 8
 3766              		.cfi_offset 7, -8
 3767              		.cfi_offset 14, -4
 3768 0002 86B0     		sub	sp, sp, #24
 3769              	.LCFI265:
 3770              		.cfi_def_cfa_offset 32
 3771 0004 00AF     		add	r7, sp, #0
 3772              	.LCFI266:
 3773              		.cfi_def_cfa_register 7
 3774 0006 7860     		str	r0, [r7, #4]
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 3775              		.loc 2 1732 35
 3776 0008 9348     		ldr	r0, .L191
 3777 000a FFF7FEFF 		bl	LL_ADC_GetMultimode
 3778 000e 3861     		str	r0, [r7, #16]
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 3779              		.loc 2 1739 42
 3780 0010 7B68     		ldr	r3, [r7, #4]
 3781 0012 1B68     		ldr	r3, [r3]
 3782              		.loc 2 1739 7
 3783 0014 1846     		mov	r0, r3
 3784 0016 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3785 001a 0346     		mov	r3, r0
 3786              		.loc 2 1739 6
 3787 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 238


 3788 001e 40F01181 		bne	.L165
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 3789              		.loc 2 1742 5
 3790 0022 7B68     		ldr	r3, [r7, #4]
 3791 0024 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3792 0028 012B     		cmp	r3, #1
 3793 002a 01D1     		bne	.L166
 3794              		.loc 2 1742 5 is_stmt 0 discriminator 1
 3795 002c 0223     		movs	r3, #2
 3796 002e 0EE1     		b	.L167
 3797              	.L166:
 3798              		.loc 2 1742 5 discriminator 2
 3799 0030 7B68     		ldr	r3, [r7, #4]
 3800 0032 0122     		movs	r2, #1
 3801 0034 83F85020 		strb	r2, [r3, #80]
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
 3802              		.loc 2 1745 22 is_stmt 1 discriminator 2
 3803 0038 7868     		ldr	r0, [r7, #4]
 3804 003a FFF7FEFF 		bl	ADC_Enable
 3805 003e 0346     		mov	r3, r0
 3806 0040 FB75     		strb	r3, [r7, #23]
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 3807              		.loc 2 1748 8 discriminator 2
 3808 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3809 0044 002B     		cmp	r3, #0
 3810 0046 40F0F880 		bne	.L168
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 3811              		.loc 2 1753 7
 3812 004a 7B68     		ldr	r3, [r7, #4]
 3813 004c 5B6D     		ldr	r3, [r3, #84]
 3814 004e 23F47063 		bic	r3, r3, #3840
 3815 0052 23F00103 		bic	r3, r3, #1
 3816 0056 43F48072 		orr	r2, r3, #256
 3817 005a 7B68     		ldr	r3, [r7, #4]
 3818 005c 5A65     		str	r2, [r3, #84]
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3819              		.loc 2 1761 12
 3820 005e 7B68     		ldr	r3, [r7, #4]
 3821 0060 1B68     		ldr	r3, [r3]
 3822 0062 7E4A     		ldr	r2, .L191+4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 239


 3823 0064 9342     		cmp	r3, r2
 3824 0066 02D0     		beq	.L169
 3825              		.loc 2 1761 12 is_stmt 0 discriminator 1
 3826 0068 7B68     		ldr	r3, [r7, #4]
 3827 006a 1B68     		ldr	r3, [r3]
 3828 006c 00E0     		b	.L170
 3829              	.L169:
 3830              		.loc 2 1761 12 discriminator 2
 3831 006e 7C4B     		ldr	r3, .L191+8
 3832              	.L170:
 3833              		.loc 2 1761 66 is_stmt 1 discriminator 4
 3834 0070 7A68     		ldr	r2, [r7, #4]
 3835 0072 1268     		ldr	r2, [r2]
 3836              		.loc 2 1761 10 discriminator 4
 3837 0074 9342     		cmp	r3, r2
 3838 0076 02D0     		beq	.L171
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3839              		.loc 2 1762 11
 3840 0078 3B69     		ldr	r3, [r7, #16]
 3841 007a 002B     		cmp	r3, #0
 3842 007c 05D1     		bne	.L172
 3843              	.L171:
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3844              		.loc 2 1765 9
 3845 007e 7B68     		ldr	r3, [r7, #4]
 3846 0080 5B6D     		ldr	r3, [r3, #84]
 3847 0082 23F48012 		bic	r2, r3, #1048576
 3848 0086 7B68     		ldr	r3, [r7, #4]
 3849 0088 5A65     		str	r2, [r3, #84]
 3850              	.L172:
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
 3851              		.loc 2 1771 16
 3852 008a 7B68     		ldr	r3, [r7, #4]
 3853 008c 5B6D     		ldr	r3, [r3, #84]
 3854              		.loc 2 1771 24
 3855 008e 03F48053 		and	r3, r3, #4096
 3856              		.loc 2 1771 10
 3857 0092 002B     		cmp	r3, #0
 3858 0094 06D0     		beq	.L173
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 3859              		.loc 2 1774 9
 3860 0096 7B68     		ldr	r3, [r7, #4]
 3861 0098 9B6D     		ldr	r3, [r3, #88]
 3862 009a 23F00602 		bic	r2, r3, #6
 3863 009e 7B68     		ldr	r3, [r7, #4]
 3864 00a0 9A65     		str	r2, [r3, #88]
 3865 00a2 02E0     		b	.L174
 3866              	.L173:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 240


1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
 3867              		.loc 2 1779 9
 3868 00a4 7B68     		ldr	r3, [r7, #4]
 3869 00a6 0022     		movs	r2, #0
 3870 00a8 9A65     		str	r2, [r3, #88]
 3871              	.L174:
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 3872              		.loc 2 1784 7
 3873 00aa 7B68     		ldr	r3, [r7, #4]
 3874 00ac 1B68     		ldr	r3, [r3]
 3875 00ae 1C22     		movs	r2, #28
 3876 00b0 1A60     		str	r2, [r3]
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 3877              		.loc 2 1789 7
 3878 00b2 7B68     		ldr	r3, [r7, #4]
 3879 00b4 0022     		movs	r2, #0
 3880 00b6 83F85020 		strb	r2, [r3, #80]
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 3881              		.loc 2 1792 7
 3882 00ba 7B68     		ldr	r3, [r7, #4]
 3883 00bc 1B68     		ldr	r3, [r3]
 3884 00be 5A68     		ldr	r2, [r3, #4]
 3885 00c0 7B68     		ldr	r3, [r7, #4]
 3886 00c2 1B68     		ldr	r3, [r3]
 3887 00c4 22F01C02 		bic	r2, r2, #28
 3888 00c8 5A60     		str	r2, [r3, #4]
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
 3889              		.loc 2 1795 25
 3890 00ca 7B68     		ldr	r3, [r7, #4]
 3891 00cc 5B69     		ldr	r3, [r3, #20]
 3892              		.loc 2 1795 7
 3893 00ce 082B     		cmp	r3, #8
 3894 00d0 08D1     		bne	.L175
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
 3895              		.loc 2 1798 11
 3896 00d2 7B68     		ldr	r3, [r7, #4]
 3897 00d4 1B68     		ldr	r3, [r3]
 3898 00d6 5A68     		ldr	r2, [r3, #4]
 3899 00d8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 241


 3900 00da 1B68     		ldr	r3, [r3]
 3901 00dc 42F00802 		orr	r2, r2, #8
 3902 00e0 5A60     		str	r2, [r3, #4]
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3903              		.loc 2 1799 11
 3904 00e2 08E0     		b	.L176
 3905              	.L175:
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
 3906              		.loc 2 1802 11
 3907 00e4 7B68     		ldr	r3, [r7, #4]
 3908 00e6 1B68     		ldr	r3, [r3]
 3909 00e8 5A68     		ldr	r2, [r3, #4]
 3910 00ea 7B68     		ldr	r3, [r7, #4]
 3911 00ec 1B68     		ldr	r3, [r3]
 3912 00ee 42F00402 		orr	r2, r2, #4
 3913 00f2 5A60     		str	r2, [r3, #4]
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 3914              		.loc 2 1803 11
 3915 00f4 00BF     		nop
 3916              	.L176:
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 3917              		.loc 2 1810 21
 3918 00f6 7B68     		ldr	r3, [r7, #4]
 3919 00f8 5B6B     		ldr	r3, [r3, #52]
 3920              		.loc 2 1810 10
 3921 00fa 002B     		cmp	r3, #0
 3922 00fc 07D1     		bne	.L177
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 3923              		.loc 2 1812 9
 3924 00fe 7B68     		ldr	r3, [r7, #4]
 3925 0100 1B68     		ldr	r3, [r3]
 3926 0102 5A68     		ldr	r2, [r3, #4]
 3927 0104 7B68     		ldr	r3, [r7, #4]
 3928 0106 1B68     		ldr	r3, [r3]
 3929 0108 42F01002 		orr	r2, r2, #16
 3930 010c 5A60     		str	r2, [r3, #4]
 3931              	.L177:
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 242


1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 3932              		.loc 2 1824 12
 3933 010e 7B68     		ldr	r3, [r7, #4]
 3934 0110 1B68     		ldr	r3, [r3]
 3935 0112 524A     		ldr	r2, .L191+4
 3936 0114 9342     		cmp	r3, r2
 3937 0116 02D0     		beq	.L178
 3938              		.loc 2 1824 12 is_stmt 0 discriminator 1
 3939 0118 7B68     		ldr	r3, [r7, #4]
 3940 011a 1B68     		ldr	r3, [r3]
 3941 011c 00E0     		b	.L179
 3942              	.L178:
 3943              		.loc 2 1824 12 discriminator 2
 3944 011e 504B     		ldr	r3, .L191+8
 3945              	.L179:
 3946              		.loc 2 1824 66 is_stmt 1 discriminator 4
 3947 0120 7A68     		ldr	r2, [r7, #4]
 3948 0122 1268     		ldr	r2, [r2]
 3949              		.loc 2 1824 10 discriminator 4
 3950 0124 9342     		cmp	r3, r2
 3951 0126 08D0     		beq	.L180
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 3952              		.loc 2 1825 11
 3953 0128 3B69     		ldr	r3, [r7, #16]
 3954 012a 002B     		cmp	r3, #0
 3955 012c 05D0     		beq	.L180
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 3956              		.loc 2 1826 11
 3957 012e 3B69     		ldr	r3, [r7, #16]
 3958 0130 052B     		cmp	r3, #5
 3959 0132 02D0     		beq	.L180
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 3960              		.loc 2 1827 11
 3961 0134 3B69     		ldr	r3, [r7, #16]
 3962 0136 092B     		cmp	r3, #9
 3963 0138 3BD1     		bne	.L181
 3964              	.L180:
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
 3965              		.loc 2 1831 13
 3966 013a 7B68     		ldr	r3, [r7, #4]
 3967 013c 1B68     		ldr	r3, [r3]
 3968 013e DB68     		ldr	r3, [r3, #12]
 3969 0140 03F00073 		and	r3, r3, #33554432
 3970              		.loc 2 1831 12
 3971 0144 002B     		cmp	r3, #0
 3972 0146 2DD0     		beq	.L189
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 3973              		.loc 2 1833 11
 3974 0148 7B68     		ldr	r3, [r7, #4]
 3975 014a 5B6D     		ldr	r3, [r3, #84]
 3976 014c 23F44053 		bic	r3, r3, #12288
 3977 0150 43F48052 		orr	r2, r3, #4096
 3978 0154 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 243


 3979 0156 5A65     		str	r2, [r3, #84]
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
 3980              		.loc 2 1839 29
 3981 0158 7B68     		ldr	r3, [r7, #4]
 3982 015a 5B69     		ldr	r3, [r3, #20]
 3983              		.loc 2 1839 11
 3984 015c 082B     		cmp	r3, #8
 3985 015e 10D1     		bne	.L183
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 3986              		.loc 2 1842 15
 3987 0160 7B68     		ldr	r3, [r7, #4]
 3988 0162 1B68     		ldr	r3, [r3]
 3989 0164 5A68     		ldr	r2, [r3, #4]
 3990 0166 7B68     		ldr	r3, [r7, #4]
 3991 0168 1B68     		ldr	r3, [r3]
 3992 016a 22F02002 		bic	r2, r2, #32
 3993 016e 5A60     		str	r2, [r3, #4]
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3994              		.loc 2 1843 15
 3995 0170 7B68     		ldr	r3, [r7, #4]
 3996 0172 1B68     		ldr	r3, [r3]
 3997 0174 5A68     		ldr	r2, [r3, #4]
 3998 0176 7B68     		ldr	r3, [r7, #4]
 3999 0178 1B68     		ldr	r3, [r3]
 4000 017a 42F04002 		orr	r2, r2, #64
 4001 017e 5A60     		str	r2, [r3, #4]
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 4002              		.loc 2 1844 15
 4003 0180 11E0     		b	.L182
 4004              	.L183:
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 4005              		.loc 2 1847 15
 4006 0182 7B68     		ldr	r3, [r7, #4]
 4007 0184 1B68     		ldr	r3, [r3]
 4008 0186 5A68     		ldr	r2, [r3, #4]
 4009 0188 7B68     		ldr	r3, [r7, #4]
 4010 018a 1B68     		ldr	r3, [r3]
 4011 018c 22F04002 		bic	r2, r2, #64
 4012 0190 5A60     		str	r2, [r3, #4]
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4013              		.loc 2 1848 15
 4014 0192 7B68     		ldr	r3, [r7, #4]
 4015 0194 1B68     		ldr	r3, [r3]
 4016 0196 5A68     		ldr	r2, [r3, #4]
 4017 0198 7B68     		ldr	r3, [r7, #4]
 4018 019a 1B68     		ldr	r3, [r3]
 4019 019c 42F02002 		orr	r2, r2, #32
 4020 01a0 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 244


1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 4021              		.loc 2 1849 15
 4022 01a2 00E0     		b	.L182
 4023              	.L189:
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4024              		.loc 2 1851 9
 4025 01a4 00BF     		nop
 4026              	.L182:
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 4027              		.loc 2 1854 9
 4028 01a6 7B68     		ldr	r3, [r7, #4]
 4029 01a8 1B68     		ldr	r3, [r3]
 4030 01aa 1846     		mov	r0, r3
 4031 01ac FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 4032 01b0 4CE0     		b	.L188
 4033              	.L181:
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 4034              		.loc 2 1859 9
 4035 01b2 7B68     		ldr	r3, [r7, #4]
 4036 01b4 5B6D     		ldr	r3, [r3, #84]
 4037 01b6 43F48012 		orr	r2, r3, #1048576
 4038 01ba 7B68     		ldr	r3, [r7, #4]
 4039 01bc 5A65     		str	r2, [r3, #84]
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 4040              		.loc 2 1862 25
 4041 01be 7B68     		ldr	r3, [r7, #4]
 4042 01c0 1B68     		ldr	r3, [r3]
 4043 01c2 264A     		ldr	r2, .L191+4
 4044 01c4 9342     		cmp	r3, r2
 4045 01c6 02D0     		beq	.L185
 4046              		.loc 2 1862 25 is_stmt 0 discriminator 1
 4047 01c8 7B68     		ldr	r3, [r7, #4]
 4048 01ca 1B68     		ldr	r3, [r3]
 4049 01cc 00E0     		b	.L186
 4050              	.L185:
 4051              		.loc 2 1862 25 discriminator 2
 4052 01ce 244B     		ldr	r3, .L191+8
 4053              	.L186:
 4054              		.loc 2 1862 23 is_stmt 1 discriminator 4
 4055 01d0 FB60     		str	r3, [r7, #12]
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 4056              		.loc 2 1863 13 discriminator 4
 4057 01d2 FB68     		ldr	r3, [r7, #12]
 4058 01d4 DB68     		ldr	r3, [r3, #12]
 4059 01d6 03F00073 		and	r3, r3, #33554432
 4060              		.loc 2 1863 12 discriminator 4
 4061 01da 002B     		cmp	r3, #0
 4062 01dc 35D0     		beq	.L190
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 245


1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 4063              		.loc 2 1867 11
 4064 01de 7B68     		ldr	r3, [r7, #4]
 4065 01e0 5B6D     		ldr	r3, [r3, #84]
 4066 01e2 23F44053 		bic	r3, r3, #12288
 4067 01e6 43F48052 		orr	r2, r3, #4096
 4068 01ea 7B68     		ldr	r3, [r7, #4]
 4069 01ec 5A65     		str	r2, [r3, #84]
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
 4070              		.loc 2 1869 29
 4071 01ee 7B68     		ldr	r3, [r7, #4]
 4072 01f0 5B69     		ldr	r3, [r3, #20]
 4073              		.loc 2 1869 11
 4074 01f2 082B     		cmp	r3, #8
 4075 01f4 10D1     		bne	.L187
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 4076              		.loc 2 1872 15
 4077 01f6 7B68     		ldr	r3, [r7, #4]
 4078 01f8 1B68     		ldr	r3, [r3]
 4079 01fa 5A68     		ldr	r2, [r3, #4]
 4080 01fc 7B68     		ldr	r3, [r7, #4]
 4081 01fe 1B68     		ldr	r3, [r3]
 4082 0200 22F02002 		bic	r2, r2, #32
 4083 0204 5A60     		str	r2, [r3, #4]
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 4084              		.loc 2 1873 15
 4085 0206 7B68     		ldr	r3, [r7, #4]
 4086 0208 1B68     		ldr	r3, [r3]
 4087 020a 5A68     		ldr	r2, [r3, #4]
 4088 020c 7B68     		ldr	r3, [r7, #4]
 4089 020e 1B68     		ldr	r3, [r3]
 4090 0210 42F04002 		orr	r2, r2, #64
 4091 0214 5A60     		str	r2, [r3, #4]
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 4092              		.loc 2 1874 15
 4093 0216 19E0     		b	.L188
 4094              	.L187:
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 4095              		.loc 2 1877 15
 4096 0218 7B68     		ldr	r3, [r7, #4]
 4097 021a 1B68     		ldr	r3, [r3]
 4098 021c 5A68     		ldr	r2, [r3, #4]
 4099 021e 7B68     		ldr	r3, [r7, #4]
 4100 0220 1B68     		ldr	r3, [r3]
 4101 0222 22F04002 		bic	r2, r2, #64
 4102 0226 5A60     		str	r2, [r3, #4]
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 4103              		.loc 2 1878 15
 4104 0228 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 246


 4105 022a 1B68     		ldr	r3, [r3]
 4106 022c 5A68     		ldr	r2, [r3, #4]
 4107 022e 7B68     		ldr	r3, [r7, #4]
 4108 0230 1B68     		ldr	r3, [r3]
 4109 0232 42F02002 		orr	r2, r2, #32
 4110 0236 5A60     		str	r2, [r3, #4]
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
 4111              		.loc 2 1879 15
 4112 0238 08E0     		b	.L188
 4113              	.L168:
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           default:
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 4114              		.loc 2 1914 7
 4115 023a 7B68     		ldr	r3, [r7, #4]
 4116 023c 0022     		movs	r2, #0
 4117 023e 83F85020 		strb	r2, [r3, #80]
 4118 0242 03E0     		b	.L188
 4119              	.L165:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 247


 4120              		.loc 2 1920 20
 4121 0244 0223     		movs	r3, #2
 4122 0246 FB75     		strb	r3, [r7, #23]
 4123 0248 00E0     		b	.L188
 4124              	.L190:
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4125              		.loc 2 1881 9
 4126 024a 00BF     		nop
 4127              	.L188:
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4128              		.loc 2 1924 10
 4129 024c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4130              	.L167:
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4131              		.loc 2 1925 1
 4132 024e 1846     		mov	r0, r3
 4133 0250 1837     		adds	r7, r7, #24
 4134              	.LCFI267:
 4135              		.cfi_def_cfa_offset 8
 4136 0252 BD46     		mov	sp, r7
 4137              	.LCFI268:
 4138              		.cfi_def_cfa_register 13
 4139              		@ sp needed
 4140 0254 80BD     		pop	{r7, pc}
 4141              	.L192:
 4142 0256 00BF     		.align	2
 4143              	.L191:
 4144 0258 00030450 		.word	1342440192
 4145 025c 00010450 		.word	1342439680
 4146 0260 00000450 		.word	1342439424
 4147              		.cfi_endproc
 4148              	.LFE325:
 4150              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 4151              		.align	1
 4152              		.global	HAL_ADC_Stop_IT
 4153              		.syntax unified
 4154              		.thumb
 4155              		.thumb_func
 4157              	HAL_ADC_Stop_IT:
 4158              	.LFB326:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4159              		.loc 2 1935 1
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 16
 4162              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 248


 4163 0000 80B5     		push	{r7, lr}
 4164              	.LCFI269:
 4165              		.cfi_def_cfa_offset 8
 4166              		.cfi_offset 7, -8
 4167              		.cfi_offset 14, -4
 4168 0002 84B0     		sub	sp, sp, #16
 4169              	.LCFI270:
 4170              		.cfi_def_cfa_offset 24
 4171 0004 00AF     		add	r7, sp, #0
 4172              	.LCFI271:
 4173              		.cfi_def_cfa_register 7
 4174 0006 7860     		str	r0, [r7, #4]
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 4175              		.loc 2 1942 3
 4176 0008 7B68     		ldr	r3, [r7, #4]
 4177 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4178 000e 012B     		cmp	r3, #1
 4179 0010 01D1     		bne	.L194
 4180              		.loc 2 1942 3 is_stmt 0 discriminator 1
 4181 0012 0223     		movs	r3, #2
 4182 0014 2BE0     		b	.L195
 4183              	.L194:
 4184              		.loc 2 1942 3 discriminator 2
 4185 0016 7B68     		ldr	r3, [r7, #4]
 4186 0018 0122     		movs	r2, #1
 4187 001a 83F85020 		strb	r2, [r3, #80]
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 4188              		.loc 2 1945 20 is_stmt 1 discriminator 2
 4189 001e 0321     		movs	r1, #3
 4190 0020 7868     		ldr	r0, [r7, #4]
 4191 0022 FFF7FEFF 		bl	ADC_ConversionStop
 4192 0026 0346     		mov	r3, r0
 4193 0028 FB73     		strb	r3, [r7, #15]
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 4194              		.loc 2 1948 6 discriminator 2
 4195 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4196 002c 002B     		cmp	r3, #0
 4197 002e 19D1     		bne	.L196
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 4198              		.loc 2 1952 5
 4199 0030 7B68     		ldr	r3, [r7, #4]
 4200 0032 1B68     		ldr	r3, [r3]
 4201 0034 5A68     		ldr	r2, [r3, #4]
 4202 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 249


 4203 0038 1B68     		ldr	r3, [r3]
 4204 003a 22F01C02 		bic	r2, r2, #28
 4205 003e 5A60     		str	r2, [r3, #4]
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 4206              		.loc 2 1955 22
 4207 0040 7868     		ldr	r0, [r7, #4]
 4208 0042 FFF7FEFF 		bl	ADC_Disable
 4209 0046 0346     		mov	r3, r0
 4210 0048 FB73     		strb	r3, [r7, #15]
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 4211              		.loc 2 1958 8
 4212 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4213 004c 002B     		cmp	r3, #0
 4214 004e 09D1     		bne	.L196
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 4215              		.loc 2 1961 7
 4216 0050 7B68     		ldr	r3, [r7, #4]
 4217 0052 5B6D     		ldr	r3, [r3, #84]
 4218 0054 23F48853 		bic	r3, r3, #4352
 4219 0058 23F00103 		bic	r3, r3, #1
 4220 005c 43F00102 		orr	r2, r3, #1
 4221 0060 7B68     		ldr	r3, [r7, #4]
 4222 0062 5A65     		str	r2, [r3, #84]
 4223              	.L196:
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 4224              		.loc 2 1968 3
 4225 0064 7B68     		ldr	r3, [r7, #4]
 4226 0066 0022     		movs	r2, #0
 4227 0068 83F85020 		strb	r2, [r3, #80]
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4228              		.loc 2 1971 10
 4229 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4230              	.L195:
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4231              		.loc 2 1972 1
 4232 006e 1846     		mov	r0, r3
 4233 0070 1037     		adds	r7, r7, #16
 4234              	.LCFI272:
 4235              		.cfi_def_cfa_offset 8
 4236 0072 BD46     		mov	sp, r7
 4237              	.LCFI273:
 4238              		.cfi_def_cfa_register 13
 4239              		@ sp needed
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 250


 4240 0074 80BD     		pop	{r7, pc}
 4241              		.cfi_endproc
 4242              	.LFE326:
 4244              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 4245              		.align	1
 4246              		.global	HAL_ADC_Start_DMA
 4247              		.syntax unified
 4248              		.thumb
 4249              		.thumb_func
 4251              	HAL_ADC_Start_DMA:
 4252              	.LFB327:
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4253              		.loc 2 1988 1
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 24
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 80B5     		push	{r7, lr}
 4258              	.LCFI274:
 4259              		.cfi_def_cfa_offset 8
 4260              		.cfi_offset 7, -8
 4261              		.cfi_offset 14, -4
 4262 0002 86B0     		sub	sp, sp, #24
 4263              	.LCFI275:
 4264              		.cfi_def_cfa_offset 32
 4265 0004 00AF     		add	r7, sp, #0
 4266              	.LCFI276:
 4267              		.cfi_def_cfa_register 7
 4268 0006 F860     		str	r0, [r7, #12]
 4269 0008 B960     		str	r1, [r7, #8]
 4270 000a 7A60     		str	r2, [r7, #4]
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4271              		.loc 2 1991 35
 4272 000c 5348     		ldr	r0, .L213
 4273 000e FFF7FEFF 		bl	LL_ADC_GetMultimode
 4274 0012 3861     		str	r0, [r7, #16]
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 251


1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 4275              		.loc 2 1998 42
 4276 0014 FB68     		ldr	r3, [r7, #12]
 4277 0016 1B68     		ldr	r3, [r3]
 4278              		.loc 2 1998 7
 4279 0018 1846     		mov	r0, r3
 4280 001a FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4281 001e 0346     		mov	r3, r0
 4282              		.loc 2 1998 6
 4283 0020 002B     		cmp	r3, #0
 4284 0022 40F09380 		bne	.L198
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
 4285              		.loc 2 2001 5
 4286 0026 FB68     		ldr	r3, [r7, #12]
 4287 0028 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4288 002c 012B     		cmp	r3, #1
 4289 002e 01D1     		bne	.L199
 4290              		.loc 2 2001 5 is_stmt 0 discriminator 1
 4291 0030 0223     		movs	r3, #2
 4292 0032 8EE0     		b	.L200
 4293              	.L199:
 4294              		.loc 2 2001 5 discriminator 2
 4295 0034 FB68     		ldr	r3, [r7, #12]
 4296 0036 0122     		movs	r2, #1
 4297 0038 83F85020 		strb	r2, [r3, #80]
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((ADC_IS_INDEPENDENT(hadc) != RESET)
 4298              		.loc 2 2006 10 is_stmt 1 discriminator 2
 4299 003c FB68     		ldr	r3, [r7, #12]
 4300 003e 1B68     		ldr	r3, [r3]
 4301              		.loc 2 2006 8 discriminator 2
 4302 0040 474A     		ldr	r2, .L213+4
 4303 0042 9342     		cmp	r3, r2
 4304 0044 08D0     		beq	.L201
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4305              		.loc 2 2007 9
 4306 0046 3B69     		ldr	r3, [r7, #16]
 4307 0048 002B     		cmp	r3, #0
 4308 004a 05D0     		beq	.L201
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4309              		.loc 2 2008 9
 4310 004c 3B69     		ldr	r3, [r7, #16]
 4311 004e 052B     		cmp	r3, #5
 4312 0050 02D0     		beq	.L201
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4313              		.loc 2 2009 9
 4314 0052 3B69     		ldr	r3, [r7, #16]
 4315 0054 092B     		cmp	r3, #9
 4316 0056 72D1     		bne	.L202
 4317              	.L201:
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 252


2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
 4318              		.loc 2 2014 24
 4319 0058 F868     		ldr	r0, [r7, #12]
 4320 005a FFF7FEFF 		bl	ADC_Enable
 4321 005e 0346     		mov	r3, r0
 4322 0060 FB75     		strb	r3, [r7, #23]
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
 4323              		.loc 2 2017 10
 4324 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4325 0064 002B     		cmp	r3, #0
 4326 0066 65D1     		bne	.L203
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 4327              		.loc 2 2022 9
 4328 0068 FB68     		ldr	r3, [r7, #12]
 4329 006a 5B6D     		ldr	r3, [r3, #84]
 4330 006c 23F47063 		bic	r3, r3, #3840
 4331 0070 23F00103 		bic	r3, r3, #1
 4332 0074 43F48072 		orr	r2, r3, #256
 4333 0078 FB68     		ldr	r3, [r7, #12]
 4334 007a 5A65     		str	r2, [r3, #84]
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4335              		.loc 2 2030 14
 4336 007c FB68     		ldr	r3, [r7, #12]
 4337 007e 1B68     		ldr	r3, [r3]
 4338 0080 384A     		ldr	r2, .L213+8
 4339 0082 9342     		cmp	r3, r2
 4340 0084 02D0     		beq	.L204
 4341              		.loc 2 2030 14 is_stmt 0 discriminator 1
 4342 0086 FB68     		ldr	r3, [r7, #12]
 4343 0088 1B68     		ldr	r3, [r3]
 4344 008a 00E0     		b	.L205
 4345              	.L204:
 4346              		.loc 2 2030 14 discriminator 2
 4347 008c 364B     		ldr	r3, .L213+12
 4348              	.L205:
 4349              		.loc 2 2030 68 is_stmt 1 discriminator 4
 4350 008e FA68     		ldr	r2, [r7, #12]
 4351 0090 1268     		ldr	r2, [r2]
 4352              		.loc 2 2030 12 discriminator 4
 4353 0092 9342     		cmp	r3, r2
 4354 0094 02D0     		beq	.L206
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 253


2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4355              		.loc 2 2031 13
 4356 0096 3B69     		ldr	r3, [r7, #16]
 4357 0098 002B     		cmp	r3, #0
 4358 009a 05D1     		bne	.L207
 4359              	.L206:
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            )
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 4360              		.loc 2 2034 11
 4361 009c FB68     		ldr	r3, [r7, #12]
 4362 009e 5B6D     		ldr	r3, [r3, #84]
 4363 00a0 23F48012 		bic	r2, r3, #1048576
 4364 00a4 FB68     		ldr	r3, [r7, #12]
 4365 00a6 5A65     		str	r2, [r3, #84]
 4366              	.L207:
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
 4367              		.loc 2 2039 18
 4368 00a8 FB68     		ldr	r3, [r7, #12]
 4369 00aa 5B6D     		ldr	r3, [r3, #84]
 4370              		.loc 2 2039 26
 4371 00ac 03F48053 		and	r3, r3, #4096
 4372              		.loc 2 2039 12
 4373 00b0 002B     		cmp	r3, #0
 4374 00b2 06D0     		beq	.L208
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 4375              		.loc 2 2042 11
 4376 00b4 FB68     		ldr	r3, [r7, #12]
 4377 00b6 9B6D     		ldr	r3, [r3, #88]
 4378 00b8 23F00602 		bic	r2, r3, #6
 4379 00bc FB68     		ldr	r3, [r7, #12]
 4380 00be 9A65     		str	r2, [r3, #88]
 4381 00c0 02E0     		b	.L209
 4382              	.L208:
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
 4383              		.loc 2 2047 11
 4384 00c2 FB68     		ldr	r3, [r7, #12]
 4385 00c4 0022     		movs	r2, #0
 4386 00c6 9A65     		str	r2, [r3, #88]
 4387              	.L209:
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 4388              		.loc 2 2051 13
 4389 00c8 FB68     		ldr	r3, [r7, #12]
 4390 00ca DB6C     		ldr	r3, [r3, #76]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 254


 4391              		.loc 2 2051 44
 4392 00cc 274A     		ldr	r2, .L213+16
 4393 00ce DA62     		str	r2, [r3, #44]
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 4394              		.loc 2 2054 13
 4395 00d0 FB68     		ldr	r3, [r7, #12]
 4396 00d2 DB6C     		ldr	r3, [r3, #76]
 4397              		.loc 2 2054 48
 4398 00d4 264A     		ldr	r2, .L213+20
 4399 00d6 1A63     		str	r2, [r3, #48]
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 4400              		.loc 2 2057 13
 4401 00d8 FB68     		ldr	r3, [r7, #12]
 4402 00da DB6C     		ldr	r3, [r3, #76]
 4403              		.loc 2 2057 45
 4404 00dc 254A     		ldr	r2, .L213+24
 4405 00de 5A63     		str	r2, [r3, #52]
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 4406              		.loc 2 2066 9
 4407 00e0 FB68     		ldr	r3, [r7, #12]
 4408 00e2 1B68     		ldr	r3, [r3]
 4409 00e4 1C22     		movs	r2, #28
 4410 00e6 1A60     		str	r2, [r3]
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 4411              		.loc 2 2071 9
 4412 00e8 FB68     		ldr	r3, [r7, #12]
 4413 00ea 0022     		movs	r2, #0
 4414 00ec 83F85020 		strb	r2, [r3, #80]
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 4415              		.loc 2 2076 9
 4416 00f0 FB68     		ldr	r3, [r7, #12]
 4417 00f2 1B68     		ldr	r3, [r3]
 4418 00f4 5A68     		ldr	r2, [r3, #4]
 4419 00f6 FB68     		ldr	r3, [r7, #12]
 4420 00f8 1B68     		ldr	r3, [r3]
 4421 00fa 42F01002 		orr	r2, r2, #16
 4422 00fe 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 255


2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 4423              		.loc 2 2079 9
 4424 0100 FB68     		ldr	r3, [r7, #12]
 4425 0102 1B68     		ldr	r3, [r3]
 4426 0104 DA68     		ldr	r2, [r3, #12]
 4427 0106 FB68     		ldr	r3, [r7, #12]
 4428 0108 1B68     		ldr	r3, [r3]
 4429 010a 42F00102 		orr	r2, r2, #1
 4430 010e DA60     		str	r2, [r3, #12]
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
 4431              		.loc 2 2082 26
 4432 0110 FB68     		ldr	r3, [r7, #12]
 4433 0112 D86C     		ldr	r0, [r3, #76]
 4434              		.loc 2 2082 76
 4435 0114 FB68     		ldr	r3, [r7, #12]
 4436 0116 1B68     		ldr	r3, [r3]
 4437              		.loc 2 2082 71
 4438 0118 4033     		adds	r3, r3, #64
 4439              		.loc 2 2082 26
 4440 011a 1946     		mov	r1, r3
 4441 011c BA68     		ldr	r2, [r7, #8]
 4442 011e 7B68     		ldr	r3, [r7, #4]
 4443 0120 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4444 0124 0346     		mov	r3, r0
 4445 0126 FB75     		strb	r3, [r7, #23]
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
 4446              		.loc 2 2089 9
 4447 0128 FB68     		ldr	r3, [r7, #12]
 4448 012a 1B68     		ldr	r3, [r3]
 4449 012c 1846     		mov	r0, r3
 4450 012e FFF7FEFF 		bl	LL_ADC_REG_StartConversion
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4451              		.loc 2 2017 10
 4452 0132 0DE0     		b	.L212
 4453              	.L203:
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 4454              		.loc 2 2094 9
 4455 0134 FB68     		ldr	r3, [r7, #12]
 4456 0136 0022     		movs	r2, #0
 4457 0138 83F85020 		strb	r2, [r3, #80]
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4458              		.loc 2 2017 10
 4459 013c 08E0     		b	.L212
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 256


 4460              	.L202:
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 4461              		.loc 2 2101 22
 4462 013e 0123     		movs	r3, #1
 4463 0140 FB75     		strb	r3, [r7, #23]
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
 4464              		.loc 2 2103 7
 4465 0142 FB68     		ldr	r3, [r7, #12]
 4466 0144 0022     		movs	r2, #0
 4467 0146 83F85020 		strb	r2, [r3, #80]
 4468 014a 01E0     		b	.L212
 4469              	.L198:
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
 4470              		.loc 2 2109 20
 4471 014c 0223     		movs	r3, #2
 4472 014e FB75     		strb	r3, [r7, #23]
 4473              	.L212:
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4474              		.loc 2 2113 10
 4475 0150 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4476              	.L200:
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4477              		.loc 2 2114 1
 4478 0152 1846     		mov	r0, r3
 4479 0154 1837     		adds	r7, r7, #24
 4480              	.LCFI277:
 4481              		.cfi_def_cfa_offset 8
 4482 0156 BD46     		mov	sp, r7
 4483              	.LCFI278:
 4484              		.cfi_def_cfa_register 13
 4485              		@ sp needed
 4486 0158 80BD     		pop	{r7, pc}
 4487              	.L214:
 4488 015a 00BF     		.align	2
 4489              	.L213:
 4490 015c 00030450 		.word	1342440192
 4491 0160 00020450 		.word	1342439936
 4492 0164 00010450 		.word	1342439680
 4493 0168 00000450 		.word	1342439424
 4494 016c 00000000 		.word	ADC_DMAConvCplt
 4495 0170 00000000 		.word	ADC_DMAHalfConvCplt
 4496 0174 00000000 		.word	ADC_DMAError
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 257


 4497              		.cfi_endproc
 4498              	.LFE327:
 4500              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4501              		.align	1
 4502              		.global	HAL_ADC_Stop_DMA
 4503              		.syntax unified
 4504              		.thumb
 4505              		.thumb_func
 4507              	HAL_ADC_Stop_DMA:
 4508              	.LFB328:
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4509              		.loc 2 2130 1
 4510              		.cfi_startproc
 4511              		@ args = 0, pretend = 0, frame = 16
 4512              		@ frame_needed = 1, uses_anonymous_args = 0
 4513 0000 80B5     		push	{r7, lr}
 4514              	.LCFI279:
 4515              		.cfi_def_cfa_offset 8
 4516              		.cfi_offset 7, -8
 4517              		.cfi_offset 14, -4
 4518 0002 84B0     		sub	sp, sp, #16
 4519              	.LCFI280:
 4520              		.cfi_def_cfa_offset 24
 4521 0004 00AF     		add	r7, sp, #0
 4522              	.LCFI281:
 4523              		.cfi_def_cfa_register 7
 4524 0006 7860     		str	r0, [r7, #4]
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 4525              		.loc 2 2137 3
 4526 0008 7B68     		ldr	r3, [r7, #4]
 4527 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4528 000e 012B     		cmp	r3, #1
 4529 0010 01D1     		bne	.L216
 4530              		.loc 2 2137 3 is_stmt 0 discriminator 1
 4531 0012 0223     		movs	r3, #2
 4532 0014 51E0     		b	.L217
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 258


 4533              	.L216:
 4534              		.loc 2 2137 3 discriminator 2
 4535 0016 7B68     		ldr	r3, [r7, #4]
 4536 0018 0122     		movs	r2, #1
 4537 001a 83F85020 		strb	r2, [r3, #80]
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 4538              		.loc 2 2140 20 is_stmt 1 discriminator 2
 4539 001e 0321     		movs	r1, #3
 4540 0020 7868     		ldr	r0, [r7, #4]
 4541 0022 FFF7FEFF 		bl	ADC_ConversionStop
 4542 0026 0346     		mov	r3, r0
 4543 0028 FB73     		strb	r3, [r7, #15]
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 4544              		.loc 2 2143 6 discriminator 2
 4545 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4546 002c 002B     		cmp	r3, #0
 4547 002e 3FD1     		bne	.L218
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 4548              		.loc 2 2146 5
 4549 0030 7B68     		ldr	r3, [r7, #4]
 4550 0032 1B68     		ldr	r3, [r3]
 4551 0034 DA68     		ldr	r2, [r3, #12]
 4552 0036 7B68     		ldr	r3, [r7, #4]
 4553 0038 1B68     		ldr	r3, [r3]
 4554 003a 22F00102 		bic	r2, r2, #1
 4555 003e DA60     		str	r2, [r3, #12]
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
 4556              		.loc 2 2150 13
 4557 0040 7B68     		ldr	r3, [r7, #4]
 4558 0042 DB6C     		ldr	r3, [r3, #76]
 4559              		.loc 2 2150 25
 4560 0044 93F82530 		ldrb	r3, [r3, #37]
 4561 0048 DBB2     		uxtb	r3, r3
 4562              		.loc 2 2150 8
 4563 004a 022B     		cmp	r3, #2
 4564 004c 0FD1     		bne	.L219
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 4565              		.loc 2 2152 24
 4566 004e 7B68     		ldr	r3, [r7, #4]
 4567 0050 DB6C     		ldr	r3, [r3, #76]
 4568 0052 1846     		mov	r0, r3
 4569 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 4570 0058 0346     		mov	r3, r0
 4571 005a FB73     		strb	r3, [r7, #15]
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 259


 4572              		.loc 2 2155 10
 4573 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4574 005e 002B     		cmp	r3, #0
 4575 0060 05D0     		beq	.L219
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 4576              		.loc 2 2158 9
 4577 0062 7B68     		ldr	r3, [r7, #4]
 4578 0064 5B6D     		ldr	r3, [r3, #84]
 4579 0066 43F04002 		orr	r2, r3, #64
 4580 006a 7B68     		ldr	r3, [r7, #4]
 4581 006c 5A65     		str	r2, [r3, #84]
 4582              	.L219:
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 4583              		.loc 2 2163 5
 4584 006e 7B68     		ldr	r3, [r7, #4]
 4585 0070 1B68     		ldr	r3, [r3]
 4586 0072 5A68     		ldr	r2, [r3, #4]
 4587 0074 7B68     		ldr	r3, [r7, #4]
 4588 0076 1B68     		ldr	r3, [r3]
 4589 0078 22F01002 		bic	r2, r2, #16
 4590 007c 5A60     		str	r2, [r3, #4]
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 4591              		.loc 2 2168 8
 4592 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4593 0080 002B     		cmp	r3, #0
 4594 0082 05D1     		bne	.L220
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
 4595              		.loc 2 2170 24
 4596 0084 7868     		ldr	r0, [r7, #4]
 4597 0086 FFF7FEFF 		bl	ADC_Disable
 4598 008a 0346     		mov	r3, r0
 4599 008c FB73     		strb	r3, [r7, #15]
 4600 008e 02E0     		b	.L221
 4601              	.L220:
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
 4602              		.loc 2 2174 13
 4603 0090 7868     		ldr	r0, [r7, #4]
 4604 0092 FFF7FEFF 		bl	ADC_Disable
 4605              	.L221:
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 260


 4606              		.loc 2 2178 8
 4607 0096 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4608 0098 002B     		cmp	r3, #0
 4609 009a 09D1     		bne	.L218
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 4610              		.loc 2 2181 7
 4611 009c 7B68     		ldr	r3, [r7, #4]
 4612 009e 5B6D     		ldr	r3, [r3, #84]
 4613 00a0 23F48853 		bic	r3, r3, #4352
 4614 00a4 23F00103 		bic	r3, r3, #1
 4615 00a8 43F00102 		orr	r2, r3, #1
 4616 00ac 7B68     		ldr	r3, [r7, #4]
 4617 00ae 5A65     		str	r2, [r3, #84]
 4618              	.L218:
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 4619              		.loc 2 2189 3
 4620 00b0 7B68     		ldr	r3, [r7, #4]
 4621 00b2 0022     		movs	r2, #0
 4622 00b4 83F85020 		strb	r2, [r3, #80]
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 4623              		.loc 2 2192 10
 4624 00b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4625              	.L217:
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4626              		.loc 2 2193 1
 4627 00ba 1846     		mov	r0, r3
 4628 00bc 1037     		adds	r7, r7, #16
 4629              	.LCFI282:
 4630              		.cfi_def_cfa_offset 8
 4631 00be BD46     		mov	sp, r7
 4632              	.LCFI283:
 4633              		.cfi_def_cfa_register 13
 4634              		@ sp needed
 4635 00c0 80BD     		pop	{r7, pc}
 4636              		.cfi_endproc
 4637              	.LFE328:
 4639              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 4640              		.align	1
 4641              		.global	HAL_ADC_GetValue
 4642              		.syntax unified
 4643              		.thumb
 4644              		.thumb_func
 4646              	HAL_ADC_GetValue:
 4647              	.LFB329:
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 261


2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            to flag EOC.
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(const ADC_HandleTypeDef *hadc)
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4648              		.loc 2 2215 1
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 8
 4651              		@ frame_needed = 1, uses_anonymous_args = 0
 4652              		@ link register save eliminated.
 4653 0000 80B4     		push	{r7}
 4654              	.LCFI284:
 4655              		.cfi_def_cfa_offset 4
 4656              		.cfi_offset 7, -4
 4657 0002 83B0     		sub	sp, sp, #12
 4658              	.LCFI285:
 4659              		.cfi_def_cfa_offset 16
 4660 0004 00AF     		add	r7, sp, #0
 4661              	.LCFI286:
 4662              		.cfi_def_cfa_register 7
 4663 0006 7860     		str	r0, [r7, #4]
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 4664              		.loc 2 2223 14
 4665 0008 7B68     		ldr	r3, [r7, #4]
 4666 000a 1B68     		ldr	r3, [r3]
 4667              		.loc 2 2223 24
 4668 000c 1B6C     		ldr	r3, [r3, #64]
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4669              		.loc 2 2224 1
 4670 000e 1846     		mov	r0, r3
 4671 0010 0C37     		adds	r7, r7, #12
 4672              	.LCFI287:
 4673              		.cfi_def_cfa_offset 4
 4674 0012 BD46     		mov	sp, r7
 4675              	.LCFI288:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 262


 4676              		.cfi_def_cfa_register 13
 4677              		@ sp needed
 4678 0014 5DF8047B 		ldr	r7, [sp], #4
 4679              	.LCFI289:
 4680              		.cfi_restore 7
 4681              		.cfi_def_cfa_offset 0
 4682 0018 7047     		bx	lr
 4683              		.cfi_endproc
 4684              	.LFE329:
 4686              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 4687              		.align	1
 4688              		.global	HAL_ADC_IRQHandler
 4689              		.syntax unified
 4690              		.thumb
 4691              		.thumb_func
 4693              	HAL_ADC_IRQHandler:
 4694              	.LFB330:
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 4695              		.loc 2 2232 1
 4696              		.cfi_startproc
 4697              		@ args = 0, pretend = 0, frame = 40
 4698              		@ frame_needed = 1, uses_anonymous_args = 0
 4699 0000 80B5     		push	{r7, lr}
 4700              	.LCFI290:
 4701              		.cfi_def_cfa_offset 8
 4702              		.cfi_offset 7, -8
 4703              		.cfi_offset 14, -4
 4704 0002 8AB0     		sub	sp, sp, #40
 4705              	.LCFI291:
 4706              		.cfi_def_cfa_offset 48
 4707 0004 00AF     		add	r7, sp, #0
 4708              	.LCFI292:
 4709              		.cfi_def_cfa_register 7
 4710 0006 7860     		str	r0, [r7, #4]
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 4711              		.loc 2 2233 12
 4712 0008 0023     		movs	r3, #0
 4713 000a 7B62     		str	r3, [r7, #36]
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 4714              		.loc 2 2234 26
 4715 000c 7B68     		ldr	r3, [r7, #4]
 4716 000e 1B68     		ldr	r3, [r3]
 4717              		.loc 2 2234 12
 4718 0010 1B68     		ldr	r3, [r3]
 4719 0012 FB61     		str	r3, [r7, #28]
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 4720              		.loc 2 2235 26
 4721 0014 7B68     		ldr	r3, [r7, #4]
 4722 0016 1B68     		ldr	r3, [r3]
 4723              		.loc 2 2235 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 263


 4724 0018 5B68     		ldr	r3, [r3, #4]
 4725 001a BB61     		str	r3, [r7, #24]
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4726              		.loc 2 2241 35
 4727 001c 8248     		ldr	r0, .L264
 4728 001e FFF7FEFF 		bl	LL_ADC_GetMultimode
 4729 0022 7861     		str	r0, [r7, #20]
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
 4730              		.loc 2 2249 17
 4731 0024 FB69     		ldr	r3, [r7, #28]
 4732 0026 03F00203 		and	r3, r3, #2
 4733              		.loc 2 2249 6
 4734 002a 002B     		cmp	r3, #0
 4735 002c 17D0     		beq	.L225
 4736              		.loc 2 2249 67 discriminator 1
 4737 002e BB69     		ldr	r3, [r7, #24]
 4738 0030 03F00203 		and	r3, r3, #2
 4739              		.loc 2 2249 54 discriminator 1
 4740 0034 002B     		cmp	r3, #0
 4741 0036 12D0     		beq	.L225
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4742              		.loc 2 2252 14
 4743 0038 7B68     		ldr	r3, [r7, #4]
 4744 003a 5B6D     		ldr	r3, [r3, #84]
 4745              		.loc 2 2252 22
 4746 003c 03F01003 		and	r3, r3, #16
 4747              		.loc 2 2252 8
 4748 0040 002B     		cmp	r3, #0
 4749 0042 05D1     		bne	.L226
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
 4750              		.loc 2 2255 7
 4751 0044 7B68     		ldr	r3, [r7, #4]
 4752 0046 5B6D     		ldr	r3, [r3, #84]
 4753 0048 43F40062 		orr	r2, r3, #2048
 4754 004c 7B68     		ldr	r3, [r7, #4]
 4755 004e 5A65     		str	r2, [r3, #84]
 4756              	.L226:
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 264


2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
 4757              		.loc 2 2262 5
 4758 0050 7868     		ldr	r0, [r7, #4]
 4759 0052 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
 4760              		.loc 2 2266 5
 4761 0056 7B68     		ldr	r3, [r7, #4]
 4762 0058 1B68     		ldr	r3, [r3]
 4763 005a 0222     		movs	r2, #2
 4764 005c 1A60     		str	r2, [r3]
 4765              	.L225:
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
 4766              		.loc 2 2270 18
 4767 005e FB69     		ldr	r3, [r7, #28]
 4768 0060 03F00403 		and	r3, r3, #4
 4769              		.loc 2 2270 6
 4770 0064 002B     		cmp	r3, #0
 4771 0066 04D0     		beq	.L227
 4772              		.loc 2 2270 64 discriminator 1
 4773 0068 BB69     		ldr	r3, [r7, #24]
 4774 006a 03F00403 		and	r3, r3, #4
 4775              		.loc 2 2270 51 discriminator 1
 4776 006e 002B     		cmp	r3, #0
 4777 0070 0AD1     		bne	.L228
 4778              	.L227:
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 4779              		.loc 2 2271 18 discriminator 3
 4780 0072 FB69     		ldr	r3, [r7, #28]
 4781 0074 03F00803 		and	r3, r3, #8
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 4782              		.loc 2 2270 94 discriminator 3
 4783 0078 002B     		cmp	r3, #0
 4784 007a 00F08380 		beq	.L229
 4785              		.loc 2 2271 64
 4786 007e BB69     		ldr	r3, [r7, #24]
 4787 0080 03F00803 		and	r3, r3, #8
 4788              		.loc 2 2271 51
 4789 0084 002B     		cmp	r3, #0
 4790 0086 7DD0     		beq	.L229
 4791              	.L228:
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4792              		.loc 2 2274 14
 4793 0088 7B68     		ldr	r3, [r7, #4]
 4794 008a 5B6D     		ldr	r3, [r3, #84]
 4795              		.loc 2 2274 22
 4796 008c 03F01003 		and	r3, r3, #16
 4797              		.loc 2 2274 8
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 265


 4798 0090 002B     		cmp	r3, #0
 4799 0092 05D1     		bne	.L230
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 4800              		.loc 2 2277 7
 4801 0094 7B68     		ldr	r3, [r7, #4]
 4802 0096 5B6D     		ldr	r3, [r3, #84]
 4803 0098 43F40072 		orr	r2, r3, #512
 4804 009c 7B68     		ldr	r3, [r7, #4]
 4805 009e 5A65     		str	r2, [r3, #84]
 4806              	.L230:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 4807              		.loc 2 2283 47
 4808 00a0 7B68     		ldr	r3, [r7, #4]
 4809 00a2 1B68     		ldr	r3, [r3]
 4810              		.loc 2 2283 9
 4811 00a4 1846     		mov	r0, r3
 4812 00a6 FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 4813 00aa 0346     		mov	r3, r0
 4814              		.loc 2 2283 8
 4815 00ac 002B     		cmp	r3, #0
 4816 00ae 62D0     		beq	.L231
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* available).                                                          */
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4817              		.loc 2 2289 12
 4818 00b0 7B68     		ldr	r3, [r7, #4]
 4819 00b2 1B68     		ldr	r3, [r3]
 4820 00b4 5D4A     		ldr	r2, .L264+4
 4821 00b6 9342     		cmp	r3, r2
 4822 00b8 02D0     		beq	.L232
 4823              		.loc 2 2289 12 is_stmt 0 discriminator 1
 4824 00ba 7B68     		ldr	r3, [r7, #4]
 4825 00bc 1B68     		ldr	r3, [r3]
 4826 00be 00E0     		b	.L233
 4827              	.L232:
 4828              		.loc 2 2289 12 discriminator 2
 4829 00c0 5B4B     		ldr	r3, .L264+8
 4830              	.L233:
 4831              		.loc 2 2289 66 is_stmt 1 discriminator 4
 4832 00c2 7A68     		ldr	r2, [r7, #4]
 4833 00c4 1268     		ldr	r2, [r2]
 4834              		.loc 2 2289 10 discriminator 4
 4835 00c6 9342     		cmp	r3, r2
 4836 00c8 08D0     		beq	.L234
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4837              		.loc 2 2290 11
 4838 00ca 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 266


 4839 00cc 002B     		cmp	r3, #0
 4840 00ce 05D0     		beq	.L234
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 4841              		.loc 2 2291 11
 4842 00d0 7B69     		ldr	r3, [r7, #20]
 4843 00d2 052B     		cmp	r3, #5
 4844 00d4 02D0     		beq	.L234
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 4845              		.loc 2 2292 11
 4846 00d6 7B69     		ldr	r3, [r7, #20]
 4847 00d8 092B     		cmp	r3, #9
 4848 00da 04D1     		bne	.L235
 4849              	.L234:
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 4850              		.loc 2 2296 20
 4851 00dc 7B68     		ldr	r3, [r7, #4]
 4852 00de 1B68     		ldr	r3, [r3]
 4853              		.loc 2 2296 18
 4854 00e0 DB68     		ldr	r3, [r3, #12]
 4855 00e2 3B62     		str	r3, [r7, #32]
 4856 00e4 0CE0     		b	.L236
 4857              	.L235:
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 4858              		.loc 2 2301 25
 4859 00e6 7B68     		ldr	r3, [r7, #4]
 4860 00e8 1B68     		ldr	r3, [r3]
 4861 00ea 504A     		ldr	r2, .L264+4
 4862 00ec 9342     		cmp	r3, r2
 4863 00ee 02D0     		beq	.L237
 4864              		.loc 2 2301 25 is_stmt 0 discriminator 1
 4865 00f0 7B68     		ldr	r3, [r7, #4]
 4866 00f2 1B68     		ldr	r3, [r3]
 4867 00f4 00E0     		b	.L238
 4868              	.L237:
 4869              		.loc 2 2301 25 discriminator 2
 4870 00f6 4E4B     		ldr	r3, .L264+8
 4871              	.L238:
 4872              		.loc 2 2301 23 is_stmt 1 discriminator 4
 4873 00f8 3B61     		str	r3, [r7, #16]
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 4874              		.loc 2 2302 18 discriminator 4
 4875 00fa 3B69     		ldr	r3, [r7, #16]
 4876 00fc DB68     		ldr	r3, [r3, #12]
 4877 00fe 3B62     		str	r3, [r7, #32]
 4878              	.L236:
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 267


2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
 4879              		.loc 2 2309 11
 4880 0100 3B6A     		ldr	r3, [r7, #32]
 4881 0102 03F40053 		and	r3, r3, #8192
 4882              		.loc 2 2309 10
 4883 0106 002B     		cmp	r3, #0
 4884 0108 35D1     		bne	.L231
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 4885              		.loc 2 2312 13
 4886 010a 7B68     		ldr	r3, [r7, #4]
 4887 010c 1B68     		ldr	r3, [r3]
 4888 010e 1B68     		ldr	r3, [r3]
 4889 0110 03F00803 		and	r3, r3, #8
 4890              		.loc 2 2312 12
 4891 0114 082B     		cmp	r3, #8
 4892 0116 2ED1     		bne	.L231
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 4893              		.loc 2 2316 50
 4894 0118 7B68     		ldr	r3, [r7, #4]
 4895 011a 1B68     		ldr	r3, [r3]
 4896              		.loc 2 2316 15
 4897 011c 1846     		mov	r0, r3
 4898 011e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 4899 0122 0346     		mov	r3, r0
 4900              		.loc 2 2316 14
 4901 0124 002B     		cmp	r3, #0
 4902 0126 1AD1     		bne	.L239
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 4903              		.loc 2 2322 13
 4904 0128 7B68     		ldr	r3, [r7, #4]
 4905 012a 1B68     		ldr	r3, [r3]
 4906 012c 5A68     		ldr	r2, [r3, #4]
 4907 012e 7B68     		ldr	r3, [r7, #4]
 4908 0130 1B68     		ldr	r3, [r3]
 4909 0132 22F00C02 		bic	r2, r2, #12
 4910 0136 5A60     		str	r2, [r3, #4]
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 4911              		.loc 2 2325 13
 4912 0138 7B68     		ldr	r3, [r7, #4]
 4913 013a 5B6D     		ldr	r3, [r3, #84]
 4914 013c 23F48072 		bic	r2, r3, #256
 4915 0140 7B68     		ldr	r3, [r7, #4]
 4916 0142 5A65     		str	r2, [r3, #84]
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 268


2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 4917              		.loc 2 2327 22
 4918 0144 7B68     		ldr	r3, [r7, #4]
 4919 0146 5B6D     		ldr	r3, [r3, #84]
 4920              		.loc 2 2327 30
 4921 0148 03F48053 		and	r3, r3, #4096
 4922              		.loc 2 2327 16
 4923 014c 002B     		cmp	r3, #0
 4924 014e 12D1     		bne	.L231
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 4925              		.loc 2 2329 15
 4926 0150 7B68     		ldr	r3, [r7, #4]
 4927 0152 5B6D     		ldr	r3, [r3, #84]
 4928 0154 43F00102 		orr	r2, r3, #1
 4929 0158 7B68     		ldr	r3, [r7, #4]
 4930 015a 5A65     		str	r2, [r3, #84]
 4931 015c 0BE0     		b	.L231
 4932              	.L239:
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 4933              		.loc 2 2335 13
 4934 015e 7B68     		ldr	r3, [r7, #4]
 4935 0160 5B6D     		ldr	r3, [r3, #84]
 4936 0162 43F01002 		orr	r2, r3, #16
 4937 0166 7B68     		ldr	r3, [r7, #4]
 4938 0168 5A65     		str	r2, [r3, #84]
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 4939              		.loc 2 2338 13
 4940 016a 7B68     		ldr	r3, [r7, #4]
 4941 016c 9B6D     		ldr	r3, [r3, #88]
 4942 016e 43F00102 		orr	r2, r3, #1
 4943 0172 7B68     		ldr	r3, [r7, #4]
 4944 0174 9A65     		str	r2, [r3, #88]
 4945              	.L231:
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 4946              		.loc 2 2352 5
 4947 0176 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 269


 4948 0178 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 4949              		.loc 2 2360 5
 4950 017c 7B68     		ldr	r3, [r7, #4]
 4951 017e 1B68     		ldr	r3, [r3]
 4952 0180 0C22     		movs	r2, #12
 4953 0182 1A60     		str	r2, [r3]
 4954              	.L229:
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
 4955              		.loc 2 2364 18
 4956 0184 FB69     		ldr	r3, [r7, #28]
 4957 0186 03F02003 		and	r3, r3, #32
 4958              		.loc 2 2364 6
 4959 018a 002B     		cmp	r3, #0
 4960 018c 04D0     		beq	.L240
 4961              		.loc 2 2364 66 discriminator 1
 4962 018e BB69     		ldr	r3, [r7, #24]
 4963 0190 03F02003 		and	r3, r3, #32
 4964              		.loc 2 2364 53 discriminator 1
 4965 0194 002B     		cmp	r3, #0
 4966 0196 0BD1     		bne	.L241
 4967              	.L240:
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 4968              		.loc 2 2365 18 discriminator 3
 4969 0198 FB69     		ldr	r3, [r7, #28]
 4970 019a 03F04003 		and	r3, r3, #64
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 4971              		.loc 2 2364 98 discriminator 3
 4972 019e 002B     		cmp	r3, #0
 4973 01a0 00F09F80 		beq	.L242
 4974              		.loc 2 2365 66
 4975 01a4 BB69     		ldr	r3, [r7, #24]
 4976 01a6 03F04003 		and	r3, r3, #64
 4977              		.loc 2 2365 53
 4978 01aa 002B     		cmp	r3, #0
 4979 01ac 00F09980 		beq	.L242
 4980              	.L241:
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 4981              		.loc 2 2368 14
 4982 01b0 7B68     		ldr	r3, [r7, #4]
 4983 01b2 5B6D     		ldr	r3, [r3, #84]
 4984              		.loc 2 2368 22
 4985 01b4 03F01003 		and	r3, r3, #16
 4986              		.loc 2 2368 8
 4987 01b8 002B     		cmp	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 270


 4988 01ba 05D1     		bne	.L243
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 4989              		.loc 2 2371 7
 4990 01bc 7B68     		ldr	r3, [r7, #4]
 4991 01be 5B6D     		ldr	r3, [r3, #84]
 4992 01c0 43F40052 		orr	r2, r3, #8192
 4993 01c4 7B68     		ldr	r3, [r7, #4]
 4994 01c6 5A65     		str	r2, [r3, #84]
 4995              	.L243:
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 4996              		.loc 2 2375 84
 4997 01c8 7B68     		ldr	r3, [r7, #4]
 4998 01ca 1B68     		ldr	r3, [r3]
 4999              		.loc 2 2375 46
 5000 01cc 1846     		mov	r0, r3
 5001 01ce FFF7FEFF 		bl	LL_ADC_INJ_IsTriggerSourceSWStart
 5002 01d2 F860     		str	r0, [r7, #12]
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 5003              		.loc 2 2376 84
 5004 01d4 7B68     		ldr	r3, [r7, #4]
 5005 01d6 1B68     		ldr	r3, [r3]
 5006              		.loc 2 2376 46
 5007 01d8 1846     		mov	r0, r3
 5008 01da FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 5009 01de B860     		str	r0, [r7, #8]
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* available).                                                        */
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 5010              		.loc 2 2381 10
 5011 01e0 7B68     		ldr	r3, [r7, #4]
 5012 01e2 1B68     		ldr	r3, [r3]
 5013 01e4 114A     		ldr	r2, .L264+4
 5014 01e6 9342     		cmp	r3, r2
 5015 01e8 02D0     		beq	.L244
 5016              		.loc 2 2381 10 is_stmt 0 discriminator 1
 5017 01ea 7B68     		ldr	r3, [r7, #4]
 5018 01ec 1B68     		ldr	r3, [r3]
 5019 01ee 00E0     		b	.L245
 5020              	.L244:
 5021              		.loc 2 2381 10 discriminator 2
 5022 01f0 0F4B     		ldr	r3, .L264+8
 5023              	.L245:
 5024              		.loc 2 2381 64 is_stmt 1 discriminator 4
 5025 01f2 7A68     		ldr	r2, [r7, #4]
 5026 01f4 1268     		ldr	r2, [r2]
 5027              		.loc 2 2381 8 discriminator 4
 5028 01f6 9342     		cmp	r3, r2
 5029 01f8 08D0     		beq	.L246
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5030              		.loc 2 2382 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 271


 5031 01fa 7B69     		ldr	r3, [r7, #20]
 5032 01fc 002B     		cmp	r3, #0
 5033 01fe 05D0     		beq	.L246
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 5034              		.loc 2 2383 9
 5035 0200 7B69     		ldr	r3, [r7, #20]
 5036 0202 062B     		cmp	r3, #6
 5037 0204 02D0     		beq	.L246
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 5038              		.loc 2 2384 9
 5039 0206 7B69     		ldr	r3, [r7, #20]
 5040 0208 072B     		cmp	r3, #7
 5041 020a 04D1     		bne	.L247
 5042              	.L246:
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 5043              		.loc 2 2387 18
 5044 020c 7B68     		ldr	r3, [r7, #4]
 5045 020e 1B68     		ldr	r3, [r3]
 5046              		.loc 2 2387 16
 5047 0210 DB68     		ldr	r3, [r3, #12]
 5048 0212 3B62     		str	r3, [r7, #32]
 5049 0214 13E0     		b	.L248
 5050              	.L247:
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 5051              		.loc 2 2391 23
 5052 0216 7B68     		ldr	r3, [r7, #4]
 5053 0218 1B68     		ldr	r3, [r3]
 5054 021a 044A     		ldr	r2, .L264+4
 5055 021c 9342     		cmp	r3, r2
 5056 021e 09D0     		beq	.L249
 5057              		.loc 2 2391 23 is_stmt 0 discriminator 1
 5058 0220 7B68     		ldr	r3, [r7, #4]
 5059 0222 1B68     		ldr	r3, [r3]
 5060 0224 07E0     		b	.L250
 5061              	.L265:
 5062 0226 00BF     		.align	2
 5063              	.L264:
 5064 0228 00030450 		.word	1342440192
 5065 022c 00010450 		.word	1342439680
 5066 0230 00000450 		.word	1342439424
 5067              	.L249:
 5068              		.loc 2 2391 23 discriminator 2
 5069 0234 7D4B     		ldr	r3, .L266
 5070              	.L250:
 5071              		.loc 2 2391 21 is_stmt 1 discriminator 4
 5072 0236 3B61     		str	r3, [r7, #16]
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 5073              		.loc 2 2392 16 discriminator 4
 5074 0238 3B69     		ldr	r3, [r7, #16]
 5075 023a DB68     		ldr	r3, [r3, #12]
 5076 023c 3B62     		str	r3, [r7, #32]
 5077              	.L248:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 272


2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
 5078              		.loc 2 2403 8
 5079 023e FB68     		ldr	r3, [r7, #12]
 5080 0240 002B     		cmp	r3, #0
 5081 0242 47D0     		beq	.L251
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
 5082              		.loc 2 2405 12
 5083 0244 3B6A     		ldr	r3, [r7, #32]
 5084 0246 03F00073 		and	r3, r3, #33554432
 5085              		.loc 2 2405 10
 5086 024a 002B     		cmp	r3, #0
 5087 024c 07D0     		beq	.L252
 5088              		.loc 2 2405 55 discriminator 1
 5089 024e BB68     		ldr	r3, [r7, #8]
 5090 0250 002B     		cmp	r3, #0
 5091 0252 3FD0     		beq	.L251
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 5092              		.loc 2 2407 13
 5093 0254 3B6A     		ldr	r3, [r7, #32]
 5094 0256 03F40053 		and	r3, r3, #8192
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 5095              		.loc 2 2406 60
 5096 025a 002B     		cmp	r3, #0
 5097 025c 3AD1     		bne	.L251
 5098              	.L252:
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 5099              		.loc 2 2410 13
 5100 025e 7B68     		ldr	r3, [r7, #4]
 5101 0260 1B68     		ldr	r3, [r3]
 5102 0262 1B68     		ldr	r3, [r3]
 5103 0264 03F04003 		and	r3, r3, #64
 5104              		.loc 2 2410 12
 5105 0268 402B     		cmp	r3, #64
 5106 026a 33D1     		bne	.L251
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 5107              		.loc 2 2418 15
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 273


 5108 026c 3B6A     		ldr	r3, [r7, #32]
 5109 026e 03F40013 		and	r3, r3, #2097152
 5110              		.loc 2 2418 14
 5111 0272 002B     		cmp	r3, #0
 5112 0274 2ED1     		bne	.L251
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 5113              		.loc 2 2422 52
 5114 0276 7B68     		ldr	r3, [r7, #4]
 5115 0278 1B68     		ldr	r3, [r3]
 5116              		.loc 2 2422 17
 5117 027a 1846     		mov	r0, r3
 5118 027c FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 5119 0280 0346     		mov	r3, r0
 5120              		.loc 2 2422 16
 5121 0282 002B     		cmp	r3, #0
 5122 0284 1AD1     		bne	.L253
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
 5123              		.loc 2 2425 15
 5124 0286 7B68     		ldr	r3, [r7, #4]
 5125 0288 1B68     		ldr	r3, [r3]
 5126 028a 5A68     		ldr	r2, [r3, #4]
 5127 028c 7B68     		ldr	r3, [r7, #4]
 5128 028e 1B68     		ldr	r3, [r3]
 5129 0290 22F06002 		bic	r2, r2, #96
 5130 0294 5A60     		str	r2, [r3, #4]
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Set ADC state */
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 5131              		.loc 2 2428 15
 5132 0296 7B68     		ldr	r3, [r7, #4]
 5133 0298 5B6D     		ldr	r3, [r3, #84]
 5134 029a 23F48052 		bic	r2, r3, #4096
 5135 029e 7B68     		ldr	r3, [r7, #4]
 5136 02a0 5A65     		str	r2, [r3, #84]
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 5137              		.loc 2 2430 24
 5138 02a2 7B68     		ldr	r3, [r7, #4]
 5139 02a4 5B6D     		ldr	r3, [r3, #84]
 5140              		.loc 2 2430 32
 5141 02a6 03F48073 		and	r3, r3, #256
 5142              		.loc 2 2430 18
 5143 02aa 002B     		cmp	r3, #0
 5144 02ac 12D1     		bne	.L251
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               {
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 5145              		.loc 2 2432 17
 5146 02ae 7B68     		ldr	r3, [r7, #4]
 5147 02b0 5B6D     		ldr	r3, [r3, #84]
 5148 02b2 43F00102 		orr	r2, r3, #1
 5149 02b6 7B68     		ldr	r3, [r7, #4]
 5150 02b8 5A65     		str	r2, [r3, #84]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 274


 5151 02ba 0BE0     		b	.L251
 5152              	.L253:
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               }
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             else
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Update ADC state machine to error */
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 5153              		.loc 2 2438 15
 5154 02bc 7B68     		ldr	r3, [r7, #4]
 5155 02be 5B6D     		ldr	r3, [r3, #84]
 5156 02c0 43F01002 		orr	r2, r3, #16
 5157 02c4 7B68     		ldr	r3, [r7, #4]
 5158 02c6 5A65     		str	r2, [r3, #84]
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 5159              		.loc 2 2441 15
 5160 02c8 7B68     		ldr	r3, [r7, #4]
 5161 02ca 9B6D     		ldr	r3, [r3, #88]
 5162 02cc 43F00102 		orr	r2, r3, #1
 5163 02d0 7B68     		ldr	r3, [r7, #4]
 5164 02d2 9A65     		str	r2, [r3, #88]
 5165              	.L251:
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if (__HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               sequence.    */
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 5166              		.loc 2 2457 5
 5167 02d4 7868     		ldr	r0, [r7, #4]
 5168 02d6 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
 5169              		.loc 2 2461 5
 5170 02da 7B68     		ldr	r3, [r7, #4]
 5171 02dc 1B68     		ldr	r3, [r3]
 5172 02de 6022     		movs	r2, #96
 5173 02e0 1A60     		str	r2, [r3]
 5174              	.L242:
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 275


 5175              		.loc 2 2465 17
 5176 02e2 FB69     		ldr	r3, [r7, #28]
 5177 02e4 03F08003 		and	r3, r3, #128
 5178              		.loc 2 2465 6
 5179 02e8 002B     		cmp	r3, #0
 5180 02ea 11D0     		beq	.L254
 5181              		.loc 2 2465 65 discriminator 1
 5182 02ec BB69     		ldr	r3, [r7, #24]
 5183 02ee 03F08003 		and	r3, r3, #128
 5184              		.loc 2 2465 52 discriminator 1
 5185 02f2 002B     		cmp	r3, #0
 5186 02f4 0CD0     		beq	.L254
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 5187              		.loc 2 2468 5
 5188 02f6 7B68     		ldr	r3, [r7, #4]
 5189 02f8 5B6D     		ldr	r3, [r3, #84]
 5190 02fa 43F48032 		orr	r2, r3, #65536
 5191 02fe 7B68     		ldr	r3, [r7, #4]
 5192 0300 5A65     		str	r2, [r3, #84]
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
 5193              		.loc 2 2474 5
 5194 0302 7868     		ldr	r0, [r7, #4]
 5195 0304 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 5196              		.loc 2 2478 5
 5197 0308 7B68     		ldr	r3, [r7, #4]
 5198 030a 1B68     		ldr	r3, [r3]
 5199 030c 8022     		movs	r2, #128
 5200 030e 1A60     		str	r2, [r3]
 5201              	.L254:
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
 5202              		.loc 2 2482 17
 5203 0310 FB69     		ldr	r3, [r7, #28]
 5204 0312 03F48073 		and	r3, r3, #256
 5205              		.loc 2 2482 6
 5206 0316 002B     		cmp	r3, #0
 5207 0318 12D0     		beq	.L255
 5208              		.loc 2 2482 65 discriminator 1
 5209 031a BB69     		ldr	r3, [r7, #24]
 5210 031c 03F48073 		and	r3, r3, #256
 5211              		.loc 2 2482 52 discriminator 1
 5212 0320 002B     		cmp	r3, #0
 5213 0322 0DD0     		beq	.L255
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 276


2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 5214              		.loc 2 2485 5
 5215 0324 7B68     		ldr	r3, [r7, #4]
 5216 0326 5B6D     		ldr	r3, [r3, #84]
 5217 0328 43F40032 		orr	r2, r3, #131072
 5218 032c 7B68     		ldr	r3, [r7, #4]
 5219 032e 5A65     		str	r2, [r3, #84]
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
 5220              		.loc 2 2491 5
 5221 0330 7868     		ldr	r0, [r7, #4]
 5222 0332 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 5223              		.loc 2 2495 5
 5224 0336 7B68     		ldr	r3, [r7, #4]
 5225 0338 1B68     		ldr	r3, [r3]
 5226 033a 4FF48072 		mov	r2, #256
 5227 033e 1A60     		str	r2, [r3]
 5228              	.L255:
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
 5229              		.loc 2 2499 17
 5230 0340 FB69     		ldr	r3, [r7, #28]
 5231 0342 03F40073 		and	r3, r3, #512
 5232              		.loc 2 2499 6
 5233 0346 002B     		cmp	r3, #0
 5234 0348 12D0     		beq	.L256
 5235              		.loc 2 2499 65 discriminator 1
 5236 034a BB69     		ldr	r3, [r7, #24]
 5237 034c 03F40073 		and	r3, r3, #512
 5238              		.loc 2 2499 52 discriminator 1
 5239 0350 002B     		cmp	r3, #0
 5240 0352 0DD0     		beq	.L256
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 5241              		.loc 2 2502 5
 5242 0354 7B68     		ldr	r3, [r7, #4]
 5243 0356 5B6D     		ldr	r3, [r3, #84]
 5244 0358 43F48022 		orr	r2, r3, #262144
 5245 035c 7B68     		ldr	r3, [r7, #4]
 5246 035e 5A65     		str	r2, [r3, #84]
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 277


2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
 5247              		.loc 2 2508 5
 5248 0360 7868     		ldr	r0, [r7, #4]
 5249 0362 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 5250              		.loc 2 2512 5
 5251 0366 7B68     		ldr	r3, [r7, #4]
 5252 0368 1B68     		ldr	r3, [r3]
 5253 036a 4FF40072 		mov	r2, #512
 5254 036e 1A60     		str	r2, [r3]
 5255              	.L256:
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
 5256              		.loc 2 2516 17
 5257 0370 FB69     		ldr	r3, [r7, #28]
 5258 0372 03F01003 		and	r3, r3, #16
 5259              		.loc 2 2516 6
 5260 0376 002B     		cmp	r3, #0
 5261 0378 36D0     		beq	.L257
 5262              		.loc 2 2516 63 discriminator 1
 5263 037a BB69     		ldr	r3, [r7, #24]
 5264 037c 03F01003 		and	r3, r3, #16
 5265              		.loc 2 2516 50 discriminator 1
 5266 0380 002B     		cmp	r3, #0
 5267 0382 31D0     		beq	.L257
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 5268              		.loc 2 2524 19
 5269 0384 7B68     		ldr	r3, [r7, #4]
 5270 0386 5B6B     		ldr	r3, [r3, #52]
 5271              		.loc 2 2524 8
 5272 0388 002B     		cmp	r3, #0
 5273 038a 02D1     		bne	.L258
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       overrun_error = 1UL;
 5274              		.loc 2 2526 21
 5275 038c 0123     		movs	r3, #1
 5276 038e 7B62     		str	r3, [r7, #36]
 5277 0390 14E0     		b	.L259
 5278              	.L258:
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 278


 5279              		.loc 2 2532 10
 5280 0392 7B69     		ldr	r3, [r7, #20]
 5281 0394 002B     		cmp	r3, #0
 5282 0396 08D0     		beq	.L260
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
 5283              		.loc 2 2536 13
 5284 0398 2548     		ldr	r0, .L266+4
 5285 039a FFF7FEFF 		bl	LL_ADC_GetMultiDMATransfer
 5286 039e 0346     		mov	r3, r0
 5287              		.loc 2 2536 12
 5288 03a0 002B     		cmp	r3, #0
 5289 03a2 0BD0     		beq	.L259
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
 5290              		.loc 2 2538 25
 5291 03a4 0123     		movs	r3, #1
 5292 03a6 7B62     		str	r3, [r7, #36]
 5293 03a8 08E0     		b	.L259
 5294              	.L260:
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
 5295              		.loc 2 2545 18
 5296 03aa 7B68     		ldr	r3, [r7, #4]
 5297 03ac 1B68     		ldr	r3, [r3]
 5298              		.loc 2 2545 28
 5299 03ae DB68     		ldr	r3, [r3, #12]
 5300              		.loc 2 2545 35
 5301 03b0 03F00103 		and	r3, r3, #1
 5302              		.loc 2 2545 12
 5303 03b4 002B     		cmp	r3, #0
 5304 03b6 01D0     		beq	.L259
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
 5305              		.loc 2 2547 25
 5306 03b8 0123     		movs	r3, #1
 5307 03ba 7B62     		str	r3, [r7, #36]
 5308              	.L259:
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (overrun_error == 1UL)
 5309              		.loc 2 2552 8
 5310 03bc 7B6A     		ldr	r3, [r7, #36]
 5311 03be 012B     		cmp	r3, #1
 5312 03c0 0ED1     		bne	.L261
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 279


 5313              		.loc 2 2555 7
 5314 03c2 7B68     		ldr	r3, [r7, #4]
 5315 03c4 5B6D     		ldr	r3, [r3, #84]
 5316 03c6 43F48062 		orr	r2, r3, #1024
 5317 03ca 7B68     		ldr	r3, [r7, #4]
 5318 03cc 5A65     		str	r2, [r3, #84]
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 5319              		.loc 2 2558 7
 5320 03ce 7B68     		ldr	r3, [r7, #4]
 5321 03d0 9B6D     		ldr	r3, [r3, #88]
 5322 03d2 43F00202 		orr	r2, r3, #2
 5323 03d6 7B68     		ldr	r3, [r7, #4]
 5324 03d8 9A65     		str	r2, [r3, #88]
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Error callback */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
 5325              		.loc 2 2568 7
 5326 03da 7868     		ldr	r0, [r7, #4]
 5327 03dc FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 5328              	.L261:
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 5329              		.loc 2 2573 5
 5330 03e0 7B68     		ldr	r3, [r7, #4]
 5331 03e2 1B68     		ldr	r3, [r3]
 5332 03e4 1022     		movs	r2, #16
 5333 03e6 1A60     		str	r2, [r3]
 5334              	.L257:
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
 5335              		.loc 2 2577 17
 5336 03e8 FB69     		ldr	r3, [r7, #28]
 5337 03ea 03F48063 		and	r3, r3, #1024
 5338              		.loc 2 2577 6
 5339 03ee 002B     		cmp	r3, #0
 5340 03f0 18D0     		beq	.L263
 5341              		.loc 2 2577 67 discriminator 1
 5342 03f2 BB69     		ldr	r3, [r7, #24]
 5343 03f4 03F48063 		and	r3, r3, #1024
 5344              		.loc 2 2577 54 discriminator 1
 5345 03f8 002B     		cmp	r3, #0
 5346 03fa 13D0     		beq	.L263
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 280


2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 5347              		.loc 2 2580 5
 5348 03fc 7B68     		ldr	r3, [r7, #4]
 5349 03fe 5B6D     		ldr	r3, [r3, #84]
 5350 0400 43F48042 		orr	r2, r3, #16384
 5351 0404 7B68     		ldr	r3, [r7, #4]
 5352 0406 5A65     		str	r2, [r3, #84]
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 5353              		.loc 2 2583 5
 5354 0408 7B68     		ldr	r3, [r7, #4]
 5355 040a 9B6D     		ldr	r3, [r3, #88]
 5356 040c 43F00802 		orr	r2, r3, #8
 5357 0410 7B68     		ldr	r3, [r7, #4]
 5358 0412 9A65     		str	r2, [r3, #88]
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 5359              		.loc 2 2586 5
 5360 0414 7B68     		ldr	r3, [r7, #4]
 5361 0416 1B68     		ldr	r3, [r3]
 5362 0418 4FF48062 		mov	r2, #1024
 5363 041c 1A60     		str	r2, [r3]
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
 5364              		.loc 2 2592 5
 5365 041e 7868     		ldr	r0, [r7, #4]
 5366 0420 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 5367              	.L263:
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5368              		.loc 2 2596 1
 5369 0424 00BF     		nop
 5370 0426 2837     		adds	r7, r7, #40
 5371              	.LCFI293:
 5372              		.cfi_def_cfa_offset 8
 5373 0428 BD46     		mov	sp, r7
 5374              	.LCFI294:
 5375              		.cfi_def_cfa_register 13
 5376              		@ sp needed
 5377 042a 80BD     		pop	{r7, pc}
 5378              	.L267:
 5379              		.align	2
 5380              	.L266:
 5381 042c 00000450 		.word	1342439424
 5382 0430 00030450 		.word	1342440192
 5383              		.cfi_endproc
 5384              	.LFE330:
 5386              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 281


 5387              		.align	1
 5388              		.weak	HAL_ADC_ConvCpltCallback
 5389              		.syntax unified
 5390              		.thumb
 5391              		.thumb_func
 5393              	HAL_ADC_ConvCpltCallback:
 5394              	.LFB331:
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5395              		.loc 2 2604 1
 5396              		.cfi_startproc
 5397              		@ args = 0, pretend = 0, frame = 8
 5398              		@ frame_needed = 1, uses_anonymous_args = 0
 5399              		@ link register save eliminated.
 5400 0000 80B4     		push	{r7}
 5401              	.LCFI295:
 5402              		.cfi_def_cfa_offset 4
 5403              		.cfi_offset 7, -4
 5404 0002 83B0     		sub	sp, sp, #12
 5405              	.LCFI296:
 5406              		.cfi_def_cfa_offset 16
 5407 0004 00AF     		add	r7, sp, #0
 5408              	.LCFI297:
 5409              		.cfi_def_cfa_register 7
 5410 0006 7860     		str	r0, [r7, #4]
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5411              		.loc 2 2611 1
 5412 0008 00BF     		nop
 5413 000a 0C37     		adds	r7, r7, #12
 5414              	.LCFI298:
 5415              		.cfi_def_cfa_offset 4
 5416 000c BD46     		mov	sp, r7
 5417              	.LCFI299:
 5418              		.cfi_def_cfa_register 13
 5419              		@ sp needed
 5420 000e 5DF8047B 		ldr	r7, [sp], #4
 5421              	.LCFI300:
 5422              		.cfi_restore 7
 5423              		.cfi_def_cfa_offset 0
 5424 0012 7047     		bx	lr
 5425              		.cfi_endproc
 5426              	.LFE331:
 5428              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 5429              		.align	1
 5430              		.weak	HAL_ADC_ConvHalfCpltCallback
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 282


 5431              		.syntax unified
 5432              		.thumb
 5433              		.thumb_func
 5435              	HAL_ADC_ConvHalfCpltCallback:
 5436              	.LFB332:
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5437              		.loc 2 2619 1
 5438              		.cfi_startproc
 5439              		@ args = 0, pretend = 0, frame = 8
 5440              		@ frame_needed = 1, uses_anonymous_args = 0
 5441              		@ link register save eliminated.
 5442 0000 80B4     		push	{r7}
 5443              	.LCFI301:
 5444              		.cfi_def_cfa_offset 4
 5445              		.cfi_offset 7, -4
 5446 0002 83B0     		sub	sp, sp, #12
 5447              	.LCFI302:
 5448              		.cfi_def_cfa_offset 16
 5449 0004 00AF     		add	r7, sp, #0
 5450              	.LCFI303:
 5451              		.cfi_def_cfa_register 7
 5452 0006 7860     		str	r0, [r7, #4]
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5453              		.loc 2 2626 1
 5454 0008 00BF     		nop
 5455 000a 0C37     		adds	r7, r7, #12
 5456              	.LCFI304:
 5457              		.cfi_def_cfa_offset 4
 5458 000c BD46     		mov	sp, r7
 5459              	.LCFI305:
 5460              		.cfi_def_cfa_register 13
 5461              		@ sp needed
 5462 000e 5DF8047B 		ldr	r7, [sp], #4
 5463              	.LCFI306:
 5464              		.cfi_restore 7
 5465              		.cfi_def_cfa_offset 0
 5466 0012 7047     		bx	lr
 5467              		.cfi_endproc
 5468              	.LFE332:
 5470              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 5471              		.align	1
 5472              		.weak	HAL_ADC_LevelOutOfWindowCallback
 5473              		.syntax unified
 5474              		.thumb
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 283


 5475              		.thumb_func
 5477              	HAL_ADC_LevelOutOfWindowCallback:
 5478              	.LFB333:
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5479              		.loc 2 2634 1
 5480              		.cfi_startproc
 5481              		@ args = 0, pretend = 0, frame = 8
 5482              		@ frame_needed = 1, uses_anonymous_args = 0
 5483              		@ link register save eliminated.
 5484 0000 80B4     		push	{r7}
 5485              	.LCFI307:
 5486              		.cfi_def_cfa_offset 4
 5487              		.cfi_offset 7, -4
 5488 0002 83B0     		sub	sp, sp, #12
 5489              	.LCFI308:
 5490              		.cfi_def_cfa_offset 16
 5491 0004 00AF     		add	r7, sp, #0
 5492              	.LCFI309:
 5493              		.cfi_def_cfa_register 7
 5494 0006 7860     		str	r0, [r7, #4]
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5495              		.loc 2 2641 1
 5496 0008 00BF     		nop
 5497 000a 0C37     		adds	r7, r7, #12
 5498              	.LCFI310:
 5499              		.cfi_def_cfa_offset 4
 5500 000c BD46     		mov	sp, r7
 5501              	.LCFI311:
 5502              		.cfi_def_cfa_register 13
 5503              		@ sp needed
 5504 000e 5DF8047B 		ldr	r7, [sp], #4
 5505              	.LCFI312:
 5506              		.cfi_restore 7
 5507              		.cfi_def_cfa_offset 0
 5508 0012 7047     		bx	lr
 5509              		.cfi_endproc
 5510              	.LFE333:
 5512              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 5513              		.align	1
 5514              		.weak	HAL_ADC_ErrorCallback
 5515              		.syntax unified
 5516              		.thumb
 5517              		.thumb_func
 5519              	HAL_ADC_ErrorCallback:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 284


 5520              	.LFB334:
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5521              		.loc 2 2656 1
 5522              		.cfi_startproc
 5523              		@ args = 0, pretend = 0, frame = 8
 5524              		@ frame_needed = 1, uses_anonymous_args = 0
 5525              		@ link register save eliminated.
 5526 0000 80B4     		push	{r7}
 5527              	.LCFI313:
 5528              		.cfi_def_cfa_offset 4
 5529              		.cfi_offset 7, -4
 5530 0002 83B0     		sub	sp, sp, #12
 5531              	.LCFI314:
 5532              		.cfi_def_cfa_offset 16
 5533 0004 00AF     		add	r7, sp, #0
 5534              	.LCFI315:
 5535              		.cfi_def_cfa_register 7
 5536 0006 7860     		str	r0, [r7, #4]
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5537              		.loc 2 2663 1
 5538 0008 00BF     		nop
 5539 000a 0C37     		adds	r7, r7, #12
 5540              	.LCFI316:
 5541              		.cfi_def_cfa_offset 4
 5542 000c BD46     		mov	sp, r7
 5543              	.LCFI317:
 5544              		.cfi_def_cfa_register 13
 5545              		@ sp needed
 5546 000e 5DF8047B 		ldr	r7, [sp], #4
 5547              	.LCFI318:
 5548              		.cfi_restore 7
 5549              		.cfi_def_cfa_offset 0
 5550 0012 7047     		bx	lr
 5551              		.cfi_endproc
 5552              	.LFE334:
 5554              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 5555              		.align	1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 285


 5556              		.global	HAL_ADC_ConfigChannel
 5557              		.syntax unified
 5558              		.thumb
 5559              		.thumb_func
 5561              	HAL_ADC_ConfigChannel:
 5562              	.LFB335:
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, const ADC_ChannelConfTypeDef *pCon
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 5563              		.loc 2 2702 1
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 216
 5566              		@ frame_needed = 1, uses_anonymous_args = 0
 5567 0000 80B5     		push	{r7, lr}
 5568              	.LCFI319:
 5569              		.cfi_def_cfa_offset 8
 5570              		.cfi_offset 7, -8
 5571              		.cfi_offset 14, -4
 5572 0002 B6B0     		sub	sp, sp, #216
 5573              	.LCFI320:
 5574              		.cfi_def_cfa_offset 224
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 286


 5575 0004 00AF     		add	r7, sp, #0
 5576              	.LCFI321:
 5577              		.cfi_def_cfa_register 7
 5578 0006 7860     		str	r0, [r7, #4]
 5579 0008 3960     		str	r1, [r7]
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5580              		.loc 2 2703 21
 5581 000a 0023     		movs	r3, #0
 5582 000c 87F8D730 		strb	r3, [r7, #215]
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 5583              		.loc 2 2706 17
 5584 0010 0023     		movs	r3, #0
 5585 0012 BB60     		str	r3, [r7, #8]
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(pConfig->SamplingTime));
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(pConfig->SingleDiff));
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(pConfig->OffsetNumber));
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pConfig->Offset));
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((pConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (pConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, pConfig->Channel));
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, pConfig->Channel));
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 5586              		.loc 2 2733 3
 5587 0014 7B68     		ldr	r3, [r7, #4]
 5588 0016 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5589 001a 012B     		cmp	r3, #1
 5590 001c 01D1     		bne	.L273
 5591              		.loc 2 2733 3 is_stmt 0 discriminator 1
 5592 001e 0223     		movs	r3, #2
 5593 0020 C9E3     		b	.L274
 5594              	.L273:
 5595              		.loc 2 2733 3 discriminator 2
 5596 0022 7B68     		ldr	r3, [r7, #4]
 5597 0024 0122     		movs	r2, #1
 5598 0026 83F85020 		strb	r2, [r3, #80]
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 287


2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 5599              		.loc 2 2740 42 is_stmt 1 discriminator 2
 5600 002a 7B68     		ldr	r3, [r7, #4]
 5601 002c 1B68     		ldr	r3, [r3]
 5602              		.loc 2 2740 7 discriminator 2
 5603 002e 1846     		mov	r0, r3
 5604 0030 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 5605 0034 0346     		mov	r3, r0
 5606              		.loc 2 2740 6 discriminator 2
 5607 0036 002B     		cmp	r3, #0
 5608 0038 40F0AA83 		bne	.L275
 5609              	.LBB71:
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if !defined (USE_FULL_ASSERT)
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     uint32_t config_rank = pConfig->Rank;
 5610              		.loc 2 2743 14
 5611 003c 3B68     		ldr	r3, [r7]
 5612 003e 5B68     		ldr	r3, [r3, #4]
 5613 0040 C7F8D030 		str	r3, [r7, #208]
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Correspondence for compatibility with legacy definition of             */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sequencer ranks in direct number format. This correspondence can       */
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* be done only on ranks 1 to 5 due to literal values.                    */
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Sequencer ranks in direct number format are no more used         */
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       and are detected by activating USE_FULL_ASSERT feature.          */
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (pConfig->Rank <= 5U)
 5614              		.loc 2 2749 16
 5615 0044 3B68     		ldr	r3, [r7]
 5616 0046 5B68     		ldr	r3, [r3, #4]
 5617              		.loc 2 2749 8
 5618 0048 052B     		cmp	r3, #5
 5619 004a 24D8     		bhi	.L376
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (pConfig->Rank)
 5620              		.loc 2 2751 22
 5621 004c 3B68     		ldr	r3, [r7]
 5622 004e 5B68     		ldr	r3, [r3, #4]
 5623              		.loc 2 2751 7
 5624 0050 023B     		subs	r3, r3, #2
 5625 0052 032B     		cmp	r3, #3
 5626 0054 1BD8     		bhi	.L277
 5627 0056 01A2     		adr	r2, .L279
 5628 0058 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5629              		.p2align 2
 5630              	.L279:
 5631 005c 6D000000 		.word	.L282+1
 5632 0060 75000000 		.word	.L281+1
 5633 0064 7D000000 		.word	.L280+1
 5634 0068 85000000 		.word	.L278+1
 5635              		.p2align 1
 5636              	.L282:
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 2U:
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           config_rank = ADC_REGULAR_RANK_2;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 288


 5637              		.loc 2 2754 23
 5638 006c 0C23     		movs	r3, #12
 5639 006e C7F8D030 		str	r3, [r7, #208]
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5640              		.loc 2 2755 11
 5641 0072 11E0     		b	.L276
 5642              	.L281:
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 3U:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           config_rank = ADC_REGULAR_RANK_3;
 5643              		.loc 2 2757 23
 5644 0074 1223     		movs	r3, #18
 5645 0076 C7F8D030 		str	r3, [r7, #208]
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5646              		.loc 2 2758 11
 5647 007a 0DE0     		b	.L276
 5648              	.L280:
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 4U:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           config_rank = ADC_REGULAR_RANK_4;
 5649              		.loc 2 2760 23
 5650 007c 1823     		movs	r3, #24
 5651 007e C7F8D030 		str	r3, [r7, #208]
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5652              		.loc 2 2761 11
 5653 0082 09E0     		b	.L276
 5654              	.L278:
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 5U:
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           config_rank = ADC_REGULAR_RANK_5;
 5655              		.loc 2 2763 23
 5656 0084 4FF48073 		mov	r3, #256
 5657 0088 C7F8D030 		str	r3, [r7, #208]
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5658              		.loc 2 2764 11
 5659 008c 04E0     		b	.L276
 5660              	.L277:
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case 1U */
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           config_rank = ADC_REGULAR_RANK_1;
 5661              		.loc 2 2767 23
 5662 008e 0623     		movs	r3, #6
 5663 0090 C7F8D030 		str	r3, [r7, #208]
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5664              		.loc 2 2768 11
 5665 0094 00E0     		b	.L276
 5666              	.L376:
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5667              		.loc 2 2770 5
 5668 0096 00BF     		nop
 5669              	.L276:
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, config_rank, pConfig->Channel);
 5670              		.loc 2 2772 5
 5671 0098 7B68     		ldr	r3, [r7, #4]
 5672 009a 1868     		ldr	r0, [r3]
 5673 009c 3B68     		ldr	r3, [r7]
 5674 009e 1B68     		ldr	r3, [r3]
 5675 00a0 1A46     		mov	r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 289


 5676 00a2 D7F8D010 		ldr	r1, [r7, #208]
 5677 00a6 FFF7FEFF 		bl	LL_ADC_REG_SetSequencerRanks
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif/* USE_FULL_ASSERT */
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 5678              		.loc 2 2783 81
 5679 00aa 7B68     		ldr	r3, [r7, #4]
 5680 00ac 1B68     		ldr	r3, [r3]
 5681              		.loc 2 2783 46
 5682 00ae 1846     		mov	r0, r3
 5683 00b0 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 5684 00b4 C7F8CC00 		str	r0, [r7, #204]
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 5685              		.loc 2 2784 82
 5686 00b8 7B68     		ldr	r3, [r7, #4]
 5687 00ba 1B68     		ldr	r3, [r3]
 5688              		.loc 2 2784 47
 5689 00bc 1846     		mov	r0, r3
 5690 00be FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 5691 00c2 C7F8C800 		str	r0, [r7, #200]
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 5692              		.loc 2 2785 8
 5693 00c6 D7F8CC30 		ldr	r3, [r7, #204]
 5694 00ca 002B     		cmp	r3, #0
 5695 00cc 40F0A481 		bne	.L283
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 5696              		.loc 2 2786 9
 5697 00d0 D7F8C830 		ldr	r3, [r7, #200]
 5698 00d4 002B     		cmp	r3, #0
 5699 00d6 40F09F81 		bne	.L283
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_SMPR1_SMPPLUS)
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (pConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 290


2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
 5700              		.loc 2 2809 7
 5701 00da 7B68     		ldr	r3, [r7, #4]
 5702 00dc 1868     		ldr	r0, [r3]
 5703 00de 3B68     		ldr	r3, [r7]
 5704 00e0 1968     		ldr	r1, [r3]
 5705 00e2 3B68     		ldr	r3, [r7]
 5706 00e4 9B68     		ldr	r3, [r3, #8]
 5707 00e6 1A46     		mov	r2, r3
 5708 00e8 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* ADC_SMPR1_SMPPLUS */
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)pConfig->Offset);
 5709              		.loc 2 2816 26
 5710 00ec 3B68     		ldr	r3, [r7]
 5711 00ee 5A69     		ldr	r2, [r3, #20]
 5712 00f0 7B68     		ldr	r3, [r7, #4]
 5713 00f2 1B68     		ldr	r3, [r3]
 5714 00f4 DB68     		ldr	r3, [r3, #12]
 5715 00f6 DB08     		lsrs	r3, r3, #3
 5716 00f8 03F00303 		and	r3, r3, #3
 5717 00fc 5B00     		lsls	r3, r3, #1
 5718              		.loc 2 2816 24
 5719 00fe 02FA03F3 		lsl	r3, r2, r3
 5720 0102 C7F8C430 		str	r3, [r7, #196]
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (pConfig->OffsetNumber != ADC_OFFSET_NONE)
 5721              		.loc 2 2818 18
 5722 0106 3B68     		ldr	r3, [r7]
 5723 0108 1B69     		ldr	r3, [r3, #16]
 5724              		.loc 2 2818 10
 5725 010a 042B     		cmp	r3, #4
 5726 010c 0AD0     		beq	.L284
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC selected offset number */
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, pConfig->OffsetNumber, pConfig->Channel, tmpOffsetShifted)
 5727              		.loc 2 2821 9
 5728 010e 7B68     		ldr	r3, [r7, #4]
 5729 0110 1868     		ldr	r0, [r3]
 5730 0112 3B68     		ldr	r3, [r7]
 5731 0114 1969     		ldr	r1, [r3, #16]
 5732 0116 3B68     		ldr	r3, [r7]
 5733 0118 1A68     		ldr	r2, [r3]
 5734 011a D7F8C430 		ldr	r3, [r7, #196]
 5735 011e FFF7FEFF 		bl	LL_ADC_SetOffset
 5736 0122 79E1     		b	.L283
 5737              	.L284:
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 291


2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
 5738              		.loc 2 2828 13
 5739 0124 7B68     		ldr	r3, [r7, #4]
 5740 0126 1B68     		ldr	r3, [r3]
 5741 0128 0021     		movs	r1, #0
 5742 012a 1846     		mov	r0, r3
 5743 012c FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5744 0130 0346     		mov	r3, r0
 5745 0132 C3F31203 		ubfx	r3, r3, #0, #19
 5746 0136 002B     		cmp	r3, #0
 5747 0138 0AD1     		bne	.L285
 5748              		.loc 2 2828 13 is_stmt 0 discriminator 1
 5749 013a 7B68     		ldr	r3, [r7, #4]
 5750 013c 1B68     		ldr	r3, [r3]
 5751 013e 0021     		movs	r1, #0
 5752 0140 1846     		mov	r0, r3
 5753 0142 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5754 0146 0346     		mov	r3, r0
 5755 0148 9B0E     		lsrs	r3, r3, #26
 5756 014a 03F01F02 		and	r2, r3, #31
 5757 014e 1EE0     		b	.L286
 5758              	.L285:
 5759              		.loc 2 2828 13 discriminator 2
 5760 0150 7B68     		ldr	r3, [r7, #4]
 5761 0152 1B68     		ldr	r3, [r3]
 5762 0154 0021     		movs	r1, #0
 5763 0156 1846     		mov	r0, r3
 5764 0158 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5765 015c 0346     		mov	r3, r0
 5766 015e C7F8B830 		str	r3, [r7, #184]
 5767              	.LBB72:
 5768              	.LBB73:
 5769              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 292


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 293


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 294


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 295


 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 296


 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 297


 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 298


 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 299


 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 300


 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 301


 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 302


 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 303


 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 304


 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 305


 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 306


 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 307


 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 308


 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 309


 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 310


1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 5770              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5771 0162 D7F8B830 		ldr	r3, [r7, #184]
 5772              		.syntax unified
 5773              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5774 0166 93FAA3F3 		rbit r3, r3
 5775              	@ 0 "" 2
 5776              		.thumb
 5777              		.syntax unified
 5778 016a C7F8B430 		str	r3, [r7, #180]
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 5779              		.loc 3 1068 10 discriminator 2
 5780 016e D7F8B430 		ldr	r3, [r7, #180]
 5781 0172 C7F8BC30 		str	r3, [r7, #188]
 5782              	.LBE73:
 5783              	.LBE72:
 5784              	.LBB74:
 5785              	.LBB75:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 311


1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 5786              		.loc 3 1089 6 discriminator 2
 5787 0176 D7F8BC30 		ldr	r3, [r7, #188]
 5788 017a 002B     		cmp	r3, #0
 5789 017c 01D1     		bne	.L288
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 5790              		.loc 3 1091 12
 5791 017e 2023     		movs	r3, #32
 5792 0180 04E0     		b	.L289
 5793              	.L288:
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 5794              		.loc 3 1093 10
 5795 0182 D7F8BC30 		ldr	r3, [r7, #188]
 5796 0186 B3FA83F3 		clz	r3, r3
 5797 018a DBB2     		uxtb	r3, r3
 5798              	.L289:
 5799              	.LBE75:
 5800              	.LBE74:
 5801              		.loc 2 2828 13
 5802 018c 1A46     		mov	r2, r3
 5803              	.L286:
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 5804              		.loc 2 2829 16
 5805 018e 3B68     		ldr	r3, [r7]
 5806 0190 1B68     		ldr	r3, [r3]
 5807 0192 C3F31203 		ubfx	r3, r3, #0, #19
 5808 0196 002B     		cmp	r3, #0
 5809 0198 05D1     		bne	.L290
 5810              		.loc 2 2829 16 is_stmt 0 discriminator 1
 5811 019a 3B68     		ldr	r3, [r7]
 5812 019c 1B68     		ldr	r3, [r3]
 5813 019e 9B0E     		lsrs	r3, r3, #26
 5814 01a0 03F01F03 		and	r3, r3, #31
 5815 01a4 18E0     		b	.L291
 5816              	.L290:
 5817              		.loc 2 2829 16 discriminator 2
 5818 01a6 3B68     		ldr	r3, [r7]
 5819 01a8 1B68     		ldr	r3, [r3]
 5820 01aa C7F8AC30 		str	r3, [r7, #172]
 5821              	.LBB76:
 5822              	.LBB77:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5823              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5824 01ae D7F8AC30 		ldr	r3, [r7, #172]
 5825              		.syntax unified
 5826              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5827 01b2 93FAA3F3 		rbit r3, r3
 5828              	@ 0 "" 2
 5829              		.thumb
 5830              		.syntax unified
 5831 01b6 C7F8A830 		str	r3, [r7, #168]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5832              		.loc 3 1068 10 discriminator 2
 5833 01ba D7F8A830 		ldr	r3, [r7, #168]
 5834 01be C7F8B030 		str	r3, [r7, #176]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 312


 5835              	.LBE77:
 5836              	.LBE76:
 5837              	.LBB78:
 5838              	.LBB79:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5839              		.loc 3 1089 6 discriminator 2
 5840 01c2 D7F8B030 		ldr	r3, [r7, #176]
 5841 01c6 002B     		cmp	r3, #0
 5842 01c8 01D1     		bne	.L293
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5843              		.loc 3 1091 12
 5844 01ca 2023     		movs	r3, #32
 5845 01cc 04E0     		b	.L291
 5846              	.L293:
 5847              		.loc 3 1093 10
 5848 01ce D7F8B030 		ldr	r3, [r7, #176]
 5849 01d2 B3FA83F3 		clz	r3, r3
 5850 01d6 DBB2     		uxtb	r3, r3
 5851              	.L291:
 5852              	.LBE79:
 5853              	.LBE78:
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 5854              		.loc 2 2828 12
 5855 01d8 9A42     		cmp	r2, r3
 5856 01da 06D1     		bne	.L295
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 5857              		.loc 2 2831 11
 5858 01dc 7B68     		ldr	r3, [r7, #4]
 5859 01de 1B68     		ldr	r3, [r3]
 5860 01e0 0022     		movs	r2, #0
 5861 01e2 0021     		movs	r1, #0
 5862 01e4 1846     		mov	r0, r3
 5863 01e6 FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5864              	.L295:
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
 5865              		.loc 2 2833 13
 5866 01ea 7B68     		ldr	r3, [r7, #4]
 5867 01ec 1B68     		ldr	r3, [r3]
 5868 01ee 0121     		movs	r1, #1
 5869 01f0 1846     		mov	r0, r3
 5870 01f2 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5871 01f6 0346     		mov	r3, r0
 5872 01f8 C3F31203 		ubfx	r3, r3, #0, #19
 5873 01fc 002B     		cmp	r3, #0
 5874 01fe 0AD1     		bne	.L296
 5875              		.loc 2 2833 13 is_stmt 0 discriminator 1
 5876 0200 7B68     		ldr	r3, [r7, #4]
 5877 0202 1B68     		ldr	r3, [r3]
 5878 0204 0121     		movs	r1, #1
 5879 0206 1846     		mov	r0, r3
 5880 0208 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5881 020c 0346     		mov	r3, r0
 5882 020e 9B0E     		lsrs	r3, r3, #26
 5883 0210 03F01F02 		and	r2, r3, #31
 5884 0214 1EE0     		b	.L297
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 313


 5885              	.L296:
 5886              		.loc 2 2833 13 discriminator 2
 5887 0216 7B68     		ldr	r3, [r7, #4]
 5888 0218 1B68     		ldr	r3, [r3]
 5889 021a 0121     		movs	r1, #1
 5890 021c 1846     		mov	r0, r3
 5891 021e FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5892 0222 0346     		mov	r3, r0
 5893 0224 C7F8A030 		str	r3, [r7, #160]
 5894              	.LBB80:
 5895              	.LBB81:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5896              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5897 0228 D7F8A030 		ldr	r3, [r7, #160]
 5898              		.syntax unified
 5899              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5900 022c 93FAA3F3 		rbit r3, r3
 5901              	@ 0 "" 2
 5902              		.thumb
 5903              		.syntax unified
 5904 0230 C7F89C30 		str	r3, [r7, #156]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5905              		.loc 3 1068 10 discriminator 2
 5906 0234 D7F89C30 		ldr	r3, [r7, #156]
 5907 0238 C7F8A430 		str	r3, [r7, #164]
 5908              	.LBE81:
 5909              	.LBE80:
 5910              	.LBB82:
 5911              	.LBB83:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5912              		.loc 3 1089 6 discriminator 2
 5913 023c D7F8A430 		ldr	r3, [r7, #164]
 5914 0240 002B     		cmp	r3, #0
 5915 0242 01D1     		bne	.L299
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5916              		.loc 3 1091 12
 5917 0244 2023     		movs	r3, #32
 5918 0246 04E0     		b	.L300
 5919              	.L299:
 5920              		.loc 3 1093 10
 5921 0248 D7F8A430 		ldr	r3, [r7, #164]
 5922 024c B3FA83F3 		clz	r3, r3
 5923 0250 DBB2     		uxtb	r3, r3
 5924              	.L300:
 5925              	.LBE83:
 5926              	.LBE82:
 5927              		.loc 2 2833 13
 5928 0252 1A46     		mov	r2, r3
 5929              	.L297:
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 5930              		.loc 2 2834 16
 5931 0254 3B68     		ldr	r3, [r7]
 5932 0256 1B68     		ldr	r3, [r3]
 5933 0258 C3F31203 		ubfx	r3, r3, #0, #19
 5934 025c 002B     		cmp	r3, #0
 5935 025e 05D1     		bne	.L301
 5936              		.loc 2 2834 16 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 314


 5937 0260 3B68     		ldr	r3, [r7]
 5938 0262 1B68     		ldr	r3, [r3]
 5939 0264 9B0E     		lsrs	r3, r3, #26
 5940 0266 03F01F03 		and	r3, r3, #31
 5941 026a 18E0     		b	.L302
 5942              	.L301:
 5943              		.loc 2 2834 16 discriminator 2
 5944 026c 3B68     		ldr	r3, [r7]
 5945 026e 1B68     		ldr	r3, [r3]
 5946 0270 C7F89430 		str	r3, [r7, #148]
 5947              	.LBB84:
 5948              	.LBB85:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5949              		.loc 3 1055 4 is_stmt 1 discriminator 2
 5950 0274 D7F89430 		ldr	r3, [r7, #148]
 5951              		.syntax unified
 5952              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5953 0278 93FAA3F3 		rbit r3, r3
 5954              	@ 0 "" 2
 5955              		.thumb
 5956              		.syntax unified
 5957 027c C7F89030 		str	r3, [r7, #144]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5958              		.loc 3 1068 10 discriminator 2
 5959 0280 D7F89030 		ldr	r3, [r7, #144]
 5960 0284 C7F89830 		str	r3, [r7, #152]
 5961              	.LBE85:
 5962              	.LBE84:
 5963              	.LBB86:
 5964              	.LBB87:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5965              		.loc 3 1089 6 discriminator 2
 5966 0288 D7F89830 		ldr	r3, [r7, #152]
 5967 028c 002B     		cmp	r3, #0
 5968 028e 01D1     		bne	.L304
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5969              		.loc 3 1091 12
 5970 0290 2023     		movs	r3, #32
 5971 0292 04E0     		b	.L302
 5972              	.L304:
 5973              		.loc 3 1093 10
 5974 0294 D7F89830 		ldr	r3, [r7, #152]
 5975 0298 B3FA83F3 		clz	r3, r3
 5976 029c DBB2     		uxtb	r3, r3
 5977              	.L302:
 5978              	.LBE87:
 5979              	.LBE86:
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 5980              		.loc 2 2833 12
 5981 029e 9A42     		cmp	r2, r3
 5982 02a0 06D1     		bne	.L306
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 5983              		.loc 2 2836 11
 5984 02a2 7B68     		ldr	r3, [r7, #4]
 5985 02a4 1B68     		ldr	r3, [r3]
 5986 02a6 0022     		movs	r2, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 315


 5987 02a8 0121     		movs	r1, #1
 5988 02aa 1846     		mov	r0, r3
 5989 02ac FFF7FEFF 		bl	LL_ADC_SetOffsetState
 5990              	.L306:
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
 5991              		.loc 2 2838 13
 5992 02b0 7B68     		ldr	r3, [r7, #4]
 5993 02b2 1B68     		ldr	r3, [r3]
 5994 02b4 0221     		movs	r1, #2
 5995 02b6 1846     		mov	r0, r3
 5996 02b8 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 5997 02bc 0346     		mov	r3, r0
 5998 02be C3F31203 		ubfx	r3, r3, #0, #19
 5999 02c2 002B     		cmp	r3, #0
 6000 02c4 0AD1     		bne	.L307
 6001              		.loc 2 2838 13 is_stmt 0 discriminator 1
 6002 02c6 7B68     		ldr	r3, [r7, #4]
 6003 02c8 1B68     		ldr	r3, [r3]
 6004 02ca 0221     		movs	r1, #2
 6005 02cc 1846     		mov	r0, r3
 6006 02ce FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 6007 02d2 0346     		mov	r3, r0
 6008 02d4 9B0E     		lsrs	r3, r3, #26
 6009 02d6 03F01F02 		and	r2, r3, #31
 6010 02da 1EE0     		b	.L308
 6011              	.L307:
 6012              		.loc 2 2838 13 discriminator 2
 6013 02dc 7B68     		ldr	r3, [r7, #4]
 6014 02de 1B68     		ldr	r3, [r3]
 6015 02e0 0221     		movs	r1, #2
 6016 02e2 1846     		mov	r0, r3
 6017 02e4 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 6018 02e8 0346     		mov	r3, r0
 6019 02ea C7F88830 		str	r3, [r7, #136]
 6020              	.LBB88:
 6021              	.LBB89:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6022              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6023 02ee D7F88830 		ldr	r3, [r7, #136]
 6024              		.syntax unified
 6025              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6026 02f2 93FAA3F3 		rbit r3, r3
 6027              	@ 0 "" 2
 6028              		.thumb
 6029              		.syntax unified
 6030 02f6 C7F88430 		str	r3, [r7, #132]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6031              		.loc 3 1068 10 discriminator 2
 6032 02fa D7F88430 		ldr	r3, [r7, #132]
 6033 02fe C7F88C30 		str	r3, [r7, #140]
 6034              	.LBE89:
 6035              	.LBE88:
 6036              	.LBB90:
 6037              	.LBB91:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6038              		.loc 3 1089 6 discriminator 2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 316


 6039 0302 D7F88C30 		ldr	r3, [r7, #140]
 6040 0306 002B     		cmp	r3, #0
 6041 0308 01D1     		bne	.L310
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6042              		.loc 3 1091 12
 6043 030a 2023     		movs	r3, #32
 6044 030c 04E0     		b	.L311
 6045              	.L310:
 6046              		.loc 3 1093 10
 6047 030e D7F88C30 		ldr	r3, [r7, #140]
 6048 0312 B3FA83F3 		clz	r3, r3
 6049 0316 DBB2     		uxtb	r3, r3
 6050              	.L311:
 6051              	.LBE91:
 6052              	.LBE90:
 6053              		.loc 2 2838 13
 6054 0318 1A46     		mov	r2, r3
 6055              	.L308:
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 6056              		.loc 2 2839 16
 6057 031a 3B68     		ldr	r3, [r7]
 6058 031c 1B68     		ldr	r3, [r3]
 6059 031e C3F31203 		ubfx	r3, r3, #0, #19
 6060 0322 002B     		cmp	r3, #0
 6061 0324 05D1     		bne	.L312
 6062              		.loc 2 2839 16 is_stmt 0 discriminator 1
 6063 0326 3B68     		ldr	r3, [r7]
 6064 0328 1B68     		ldr	r3, [r3]
 6065 032a 9B0E     		lsrs	r3, r3, #26
 6066 032c 03F01F03 		and	r3, r3, #31
 6067 0330 14E0     		b	.L313
 6068              	.L312:
 6069              		.loc 2 2839 16 discriminator 2
 6070 0332 3B68     		ldr	r3, [r7]
 6071 0334 1B68     		ldr	r3, [r3]
 6072 0336 FB67     		str	r3, [r7, #124]
 6073              	.LBB92:
 6074              	.LBB93:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6075              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6076 0338 FB6F     		ldr	r3, [r7, #124]
 6077              		.syntax unified
 6078              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6079 033a 93FAA3F3 		rbit r3, r3
 6080              	@ 0 "" 2
 6081              		.thumb
 6082              		.syntax unified
 6083 033e BB67     		str	r3, [r7, #120]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6084              		.loc 3 1068 10 discriminator 2
 6085 0340 BB6F     		ldr	r3, [r7, #120]
 6086 0342 C7F88030 		str	r3, [r7, #128]
 6087              	.LBE93:
 6088              	.LBE92:
 6089              	.LBB94:
 6090              	.LBB95:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 317


 6091              		.loc 3 1089 6 discriminator 2
 6092 0346 D7F88030 		ldr	r3, [r7, #128]
 6093 034a 002B     		cmp	r3, #0
 6094 034c 01D1     		bne	.L315
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6095              		.loc 3 1091 12
 6096 034e 2023     		movs	r3, #32
 6097 0350 04E0     		b	.L313
 6098              	.L315:
 6099              		.loc 3 1093 10
 6100 0352 D7F88030 		ldr	r3, [r7, #128]
 6101 0356 B3FA83F3 		clz	r3, r3
 6102 035a DBB2     		uxtb	r3, r3
 6103              	.L313:
 6104              	.LBE95:
 6105              	.LBE94:
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 6106              		.loc 2 2838 12
 6107 035c 9A42     		cmp	r2, r3
 6108 035e 06D1     		bne	.L317
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 6109              		.loc 2 2841 11
 6110 0360 7B68     		ldr	r3, [r7, #4]
 6111 0362 1B68     		ldr	r3, [r3]
 6112 0364 0022     		movs	r2, #0
 6113 0366 0221     		movs	r1, #2
 6114 0368 1846     		mov	r0, r3
 6115 036a FFF7FEFF 		bl	LL_ADC_SetOffsetState
 6116              	.L317:
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
 6117              		.loc 2 2843 13
 6118 036e 7B68     		ldr	r3, [r7, #4]
 6119 0370 1B68     		ldr	r3, [r3]
 6120 0372 0321     		movs	r1, #3
 6121 0374 1846     		mov	r0, r3
 6122 0376 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 6123 037a 0346     		mov	r3, r0
 6124 037c C3F31203 		ubfx	r3, r3, #0, #19
 6125 0380 002B     		cmp	r3, #0
 6126 0382 0AD1     		bne	.L318
 6127              		.loc 2 2843 13 is_stmt 0 discriminator 1
 6128 0384 7B68     		ldr	r3, [r7, #4]
 6129 0386 1B68     		ldr	r3, [r3]
 6130 0388 0321     		movs	r1, #3
 6131 038a 1846     		mov	r0, r3
 6132 038c FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 6133 0390 0346     		mov	r3, r0
 6134 0392 9B0E     		lsrs	r3, r3, #26
 6135 0394 03F01F02 		and	r2, r3, #31
 6136 0398 17E0     		b	.L319
 6137              	.L318:
 6138              		.loc 2 2843 13 discriminator 2
 6139 039a 7B68     		ldr	r3, [r7, #4]
 6140 039c 1B68     		ldr	r3, [r3]
 6141 039e 0321     		movs	r1, #3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 318


 6142 03a0 1846     		mov	r0, r3
 6143 03a2 FFF7FEFF 		bl	LL_ADC_GetOffsetChannel
 6144 03a6 0346     		mov	r3, r0
 6145 03a8 3B67     		str	r3, [r7, #112]
 6146              	.LBB96:
 6147              	.LBB97:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6148              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6149 03aa 3B6F     		ldr	r3, [r7, #112]
 6150              		.syntax unified
 6151              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6152 03ac 93FAA3F3 		rbit r3, r3
 6153              	@ 0 "" 2
 6154              		.thumb
 6155              		.syntax unified
 6156 03b0 FB66     		str	r3, [r7, #108]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6157              		.loc 3 1068 10 discriminator 2
 6158 03b2 FB6E     		ldr	r3, [r7, #108]
 6159 03b4 7B67     		str	r3, [r7, #116]
 6160              	.LBE97:
 6161              	.LBE96:
 6162              	.LBB98:
 6163              	.LBB99:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6164              		.loc 3 1089 6 discriminator 2
 6165 03b6 7B6F     		ldr	r3, [r7, #116]
 6166 03b8 002B     		cmp	r3, #0
 6167 03ba 01D1     		bne	.L321
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6168              		.loc 3 1091 12
 6169 03bc 2023     		movs	r3, #32
 6170 03be 03E0     		b	.L322
 6171              	.L321:
 6172              		.loc 3 1093 10
 6173 03c0 7B6F     		ldr	r3, [r7, #116]
 6174 03c2 B3FA83F3 		clz	r3, r3
 6175 03c6 DBB2     		uxtb	r3, r3
 6176              	.L322:
 6177              	.LBE99:
 6178              	.LBE98:
 6179              		.loc 2 2843 13
 6180 03c8 1A46     		mov	r2, r3
 6181              	.L319:
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 6182              		.loc 2 2844 16
 6183 03ca 3B68     		ldr	r3, [r7]
 6184 03cc 1B68     		ldr	r3, [r3]
 6185 03ce C3F31203 		ubfx	r3, r3, #0, #19
 6186 03d2 002B     		cmp	r3, #0
 6187 03d4 05D1     		bne	.L323
 6188              		.loc 2 2844 16 is_stmt 0 discriminator 1
 6189 03d6 3B68     		ldr	r3, [r7]
 6190 03d8 1B68     		ldr	r3, [r3]
 6191 03da 9B0E     		lsrs	r3, r3, #26
 6192 03dc 03F01F03 		and	r3, r3, #31
 6193 03e0 11E0     		b	.L324
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 319


 6194              	.L323:
 6195              		.loc 2 2844 16 discriminator 2
 6196 03e2 3B68     		ldr	r3, [r7]
 6197 03e4 1B68     		ldr	r3, [r3]
 6198 03e6 7B66     		str	r3, [r7, #100]
 6199              	.LBB100:
 6200              	.LBB101:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6201              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6202 03e8 7B6E     		ldr	r3, [r7, #100]
 6203              		.syntax unified
 6204              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6205 03ea 93FAA3F3 		rbit r3, r3
 6206              	@ 0 "" 2
 6207              		.thumb
 6208              		.syntax unified
 6209 03ee 3B66     		str	r3, [r7, #96]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6210              		.loc 3 1068 10 discriminator 2
 6211 03f0 3B6E     		ldr	r3, [r7, #96]
 6212 03f2 BB66     		str	r3, [r7, #104]
 6213              	.LBE101:
 6214              	.LBE100:
 6215              	.LBB102:
 6216              	.LBB103:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6217              		.loc 3 1089 6 discriminator 2
 6218 03f4 BB6E     		ldr	r3, [r7, #104]
 6219 03f6 002B     		cmp	r3, #0
 6220 03f8 01D1     		bne	.L326
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6221              		.loc 3 1091 12
 6222 03fa 2023     		movs	r3, #32
 6223 03fc 03E0     		b	.L324
 6224              	.L326:
 6225              		.loc 3 1093 10
 6226 03fe BB6E     		ldr	r3, [r7, #104]
 6227 0400 B3FA83F3 		clz	r3, r3
 6228 0404 DBB2     		uxtb	r3, r3
 6229              	.L324:
 6230              	.LBE103:
 6231              	.LBE102:
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             == __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel))
 6232              		.loc 2 2843 12
 6233 0406 9A42     		cmp	r2, r3
 6234 0408 06D1     		bne	.L283
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 6235              		.loc 2 2846 11
 6236 040a 7B68     		ldr	r3, [r7, #4]
 6237 040c 1B68     		ldr	r3, [r3]
 6238 040e 0022     		movs	r2, #0
 6239 0410 0321     		movs	r1, #3
 6240 0412 1846     		mov	r0, r3
 6241 0414 FFF7FEFF 		bl	LL_ADC_SetOffsetState
 6242              	.L283:
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 320


2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 6243              		.loc 2 2854 30
 6244 0418 7B68     		ldr	r3, [r7, #4]
 6245 041a 1B68     		ldr	r3, [r3]
 6246              		.loc 2 2854 9
 6247 041c 1846     		mov	r0, r3
 6248 041e FFF7FEFF 		bl	LL_ADC_IsEnabled
 6249 0422 0346     		mov	r3, r0
 6250              		.loc 2 2854 8
 6251 0424 002B     		cmp	r3, #0
 6252 0426 40F03F81 		bne	.L328
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, pConfig->Channel, pConfig->SingleDiff);
 6253              		.loc 2 2857 7
 6254 042a 7B68     		ldr	r3, [r7, #4]
 6255 042c 1868     		ldr	r0, [r3]
 6256 042e 3B68     		ldr	r3, [r7]
 6257 0430 1968     		ldr	r1, [r3]
 6258 0432 3B68     		ldr	r3, [r7]
 6259 0434 DB68     		ldr	r3, [r3, #12]
 6260 0436 1A46     		mov	r2, r3
 6261 0438 FFF7FEFF 		bl	LL_ADC_SetChannelSingleDiff
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (pConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 6262              		.loc 2 2860 18
 6263 043c 3B68     		ldr	r3, [r7]
 6264 043e DB68     		ldr	r3, [r3, #12]
 6265              		.loc 2 2860 10
 6266 0440 8E4A     		ldr	r2, .L379
 6267 0442 9342     		cmp	r3, r2
 6268 0444 40F03081 		bne	.L328
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
 6269              		.loc 2 2864 9
 6270 0448 7B68     		ldr	r3, [r7, #4]
 6271 044a 1868     		ldr	r0, [r3]
2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 6272              		.loc 2 2865 50
 6273 044c 3B68     		ldr	r3, [r7]
 6274 044e 1B68     		ldr	r3, [r3]
 6275 0450 C3F31203 		ubfx	r3, r3, #0, #19
 6276 0454 002B     		cmp	r3, #0
 6277 0456 0BD1     		bne	.L329
 6278              		.loc 2 2865 50 is_stmt 0 discriminator 1
 6279 0458 3B68     		ldr	r3, [r7]
 6280 045a 1B68     		ldr	r3, [r3]
 6281 045c 9B0E     		lsrs	r3, r3, #26
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 321


 6282 045e 0133     		adds	r3, r3, #1
 6283 0460 03F01F03 		and	r3, r3, #31
 6284 0464 092B     		cmp	r3, #9
 6285 0466 94BF     		ite	ls
 6286 0468 0123     		movls	r3, #1
 6287 046a 0023     		movhi	r3, #0
 6288 046c DBB2     		uxtb	r3, r3
 6289 046e 19E0     		b	.L330
 6290              	.L329:
 6291              		.loc 2 2865 50 discriminator 2
 6292 0470 3B68     		ldr	r3, [r7]
 6293 0472 1B68     		ldr	r3, [r3]
 6294 0474 BB65     		str	r3, [r7, #88]
 6295              	.LBB104:
 6296              	.LBB105:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6297              		.loc 3 1055 4 is_stmt 1 discriminator 2
 6298 0476 BB6D     		ldr	r3, [r7, #88]
 6299              		.syntax unified
 6300              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6301 0478 93FAA3F3 		rbit r3, r3
 6302              	@ 0 "" 2
 6303              		.thumb
 6304              		.syntax unified
 6305 047c 7B65     		str	r3, [r7, #84]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6306              		.loc 3 1068 10 discriminator 2
 6307 047e 7B6D     		ldr	r3, [r7, #84]
 6308 0480 FB65     		str	r3, [r7, #92]
 6309              	.LBE105:
 6310              	.LBE104:
 6311              	.LBB106:
 6312              	.LBB107:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6313              		.loc 3 1089 6 discriminator 2
 6314 0482 FB6D     		ldr	r3, [r7, #92]
 6315 0484 002B     		cmp	r3, #0
 6316 0486 01D1     		bne	.L332
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6317              		.loc 3 1091 12
 6318 0488 2023     		movs	r3, #32
 6319 048a 03E0     		b	.L333
 6320              	.L332:
 6321              		.loc 3 1093 10
 6322 048c FB6D     		ldr	r3, [r7, #92]
 6323 048e B3FA83F3 		clz	r3, r3
 6324 0492 DBB2     		uxtb	r3, r3
 6325              	.L333:
 6326              	.LBE107:
 6327              	.LBE106:
 6328              		.loc 2 2865 50
 6329 0494 0133     		adds	r3, r3, #1
 6330 0496 03F01F03 		and	r3, r3, #31
 6331 049a 092B     		cmp	r3, #9
 6332 049c 94BF     		ite	ls
 6333 049e 0123     		movls	r3, #1
 6334 04a0 0023     		movhi	r3, #0
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 322


 6335 04a2 DBB2     		uxtb	r3, r3
 6336              	.L330:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 6337              		.loc 2 2864 9
 6338 04a4 002B     		cmp	r3, #0
 6339 04a6 79D0     		beq	.L334
 6340              		.loc 2 2865 50
 6341 04a8 3B68     		ldr	r3, [r7]
 6342 04aa 1B68     		ldr	r3, [r3]
 6343 04ac C3F31203 		ubfx	r3, r3, #0, #19
 6344 04b0 002B     		cmp	r3, #0
 6345 04b2 07D1     		bne	.L335
 6346              		.loc 2 2865 50 is_stmt 0 discriminator 3
 6347 04b4 3B68     		ldr	r3, [r7]
 6348 04b6 1B68     		ldr	r3, [r3]
 6349 04b8 9B0E     		lsrs	r3, r3, #26
 6350 04ba 0133     		adds	r3, r3, #1
 6351 04bc 9B06     		lsls	r3, r3, #26
 6352 04be 03F0F842 		and	r2, r3, #2080374784
 6353 04c2 15E0     		b	.L336
 6354              	.L335:
 6355              		.loc 2 2865 50 discriminator 4
 6356 04c4 3B68     		ldr	r3, [r7]
 6357 04c6 1B68     		ldr	r3, [r3]
 6358 04c8 FB64     		str	r3, [r7, #76]
 6359              	.LBB108:
 6360              	.LBB109:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6361              		.loc 3 1055 4 is_stmt 1 discriminator 4
 6362 04ca FB6C     		ldr	r3, [r7, #76]
 6363              		.syntax unified
 6364              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6365 04cc 93FAA3F3 		rbit r3, r3
 6366              	@ 0 "" 2
 6367              		.thumb
 6368              		.syntax unified
 6369 04d0 BB64     		str	r3, [r7, #72]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6370              		.loc 3 1068 10 discriminator 4
 6371 04d2 BB6C     		ldr	r3, [r7, #72]
 6372 04d4 3B65     		str	r3, [r7, #80]
 6373              	.LBE109:
 6374              	.LBE108:
 6375              	.LBB110:
 6376              	.LBB111:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6377              		.loc 3 1089 6 discriminator 4
 6378 04d6 3B6D     		ldr	r3, [r7, #80]
 6379 04d8 002B     		cmp	r3, #0
 6380 04da 01D1     		bne	.L338
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6381              		.loc 3 1091 12
 6382 04dc 2023     		movs	r3, #32
 6383 04de 03E0     		b	.L339
 6384              	.L338:
 6385              		.loc 3 1093 10
 6386 04e0 3B6D     		ldr	r3, [r7, #80]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 323


 6387 04e2 B3FA83F3 		clz	r3, r3
 6388 04e6 DBB2     		uxtb	r3, r3
 6389              	.L339:
 6390              	.LBE111:
 6391              	.LBE110:
 6392              		.loc 2 2865 50
 6393 04e8 0133     		adds	r3, r3, #1
 6394 04ea 9B06     		lsls	r3, r3, #26
 6395 04ec 03F0F842 		and	r2, r3, #2080374784
 6396              	.L336:
 6397              		.loc 2 2865 50 is_stmt 0 discriminator 6
 6398 04f0 3B68     		ldr	r3, [r7]
 6399 04f2 1B68     		ldr	r3, [r3]
 6400 04f4 C3F31203 		ubfx	r3, r3, #0, #19
 6401 04f8 002B     		cmp	r3, #0
 6402 04fa 09D1     		bne	.L340
 6403              		.loc 2 2865 50 discriminator 7
 6404 04fc 3B68     		ldr	r3, [r7]
 6405 04fe 1B68     		ldr	r3, [r3]
 6406 0500 9B0E     		lsrs	r3, r3, #26
 6407 0502 0133     		adds	r3, r3, #1
 6408 0504 03F01F03 		and	r3, r3, #31
 6409 0508 0121     		movs	r1, #1
 6410 050a 01FA03F3 		lsl	r3, r1, r3
 6411 050e 17E0     		b	.L341
 6412              	.L340:
 6413              		.loc 2 2865 50 discriminator 8
 6414 0510 3B68     		ldr	r3, [r7]
 6415 0512 1B68     		ldr	r3, [r3]
 6416 0514 3B64     		str	r3, [r7, #64]
 6417              	.LBB112:
 6418              	.LBB113:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6419              		.loc 3 1055 4 is_stmt 1 discriminator 8
 6420 0516 3B6C     		ldr	r3, [r7, #64]
 6421              		.syntax unified
 6422              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6423 0518 93FAA3F3 		rbit r3, r3
 6424              	@ 0 "" 2
 6425              		.thumb
 6426              		.syntax unified
 6427 051c FB63     		str	r3, [r7, #60]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6428              		.loc 3 1068 10 discriminator 8
 6429 051e FB6B     		ldr	r3, [r7, #60]
 6430 0520 7B64     		str	r3, [r7, #68]
 6431              	.LBE113:
 6432              	.LBE112:
 6433              	.LBB114:
 6434              	.LBB115:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6435              		.loc 3 1089 6 discriminator 8
 6436 0522 7B6C     		ldr	r3, [r7, #68]
 6437 0524 002B     		cmp	r3, #0
 6438 0526 01D1     		bne	.L343
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6439              		.loc 3 1091 12
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 324


 6440 0528 2023     		movs	r3, #32
 6441 052a 03E0     		b	.L344
 6442              	.L343:
 6443              		.loc 3 1093 10
 6444 052c 7B6C     		ldr	r3, [r7, #68]
 6445 052e B3FA83F3 		clz	r3, r3
 6446 0532 DBB2     		uxtb	r3, r3
 6447              	.L344:
 6448              	.LBE115:
 6449              	.LBE114:
 6450              		.loc 2 2865 50
 6451 0534 0133     		adds	r3, r3, #1
 6452 0536 03F01F03 		and	r3, r3, #31
 6453 053a 0121     		movs	r1, #1
 6454 053c 01FA03F3 		lsl	r3, r1, r3
 6455              	.L341:
 6456              		.loc 2 2865 50 is_stmt 0 discriminator 10
 6457 0540 42EA0301 		orr	r1, r2, r3
 6458 0544 3B68     		ldr	r3, [r7]
 6459 0546 1B68     		ldr	r3, [r3]
 6460 0548 C3F31203 		ubfx	r3, r3, #0, #19
 6461 054c 002B     		cmp	r3, #0
 6462 054e 0AD1     		bne	.L345
 6463              		.loc 2 2865 50 discriminator 11
 6464 0550 3B68     		ldr	r3, [r7]
 6465 0552 1B68     		ldr	r3, [r3]
 6466 0554 9B0E     		lsrs	r3, r3, #26
 6467 0556 0133     		adds	r3, r3, #1
 6468 0558 03F01F02 		and	r2, r3, #31
 6469 055c 1346     		mov	r3, r2
 6470 055e 5B00     		lsls	r3, r3, #1
 6471 0560 1344     		add	r3, r3, r2
 6472 0562 1B05     		lsls	r3, r3, #20
 6473 0564 18E0     		b	.L346
 6474              	.L345:
 6475              		.loc 2 2865 50 discriminator 12
 6476 0566 3B68     		ldr	r3, [r7]
 6477 0568 1B68     		ldr	r3, [r3]
 6478 056a 7B63     		str	r3, [r7, #52]
 6479              	.LBB116:
 6480              	.LBB117:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6481              		.loc 3 1055 4 is_stmt 1 discriminator 12
 6482 056c 7B6B     		ldr	r3, [r7, #52]
 6483              		.syntax unified
 6484              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6485 056e 93FAA3F3 		rbit r3, r3
 6486              	@ 0 "" 2
 6487              		.thumb
 6488              		.syntax unified
 6489 0572 3B63     		str	r3, [r7, #48]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6490              		.loc 3 1068 10 discriminator 12
 6491 0574 3B6B     		ldr	r3, [r7, #48]
 6492 0576 BB63     		str	r3, [r7, #56]
 6493              	.LBE117:
 6494              	.LBE116:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 325


 6495              	.LBB118:
 6496              	.LBB119:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6497              		.loc 3 1089 6 discriminator 12
 6498 0578 BB6B     		ldr	r3, [r7, #56]
 6499 057a 002B     		cmp	r3, #0
 6500 057c 01D1     		bne	.L348
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6501              		.loc 3 1091 12
 6502 057e 2023     		movs	r3, #32
 6503 0580 03E0     		b	.L349
 6504              	.L348:
 6505              		.loc 3 1093 10
 6506 0582 BB6B     		ldr	r3, [r7, #56]
 6507 0584 B3FA83F3 		clz	r3, r3
 6508 0588 DBB2     		uxtb	r3, r3
 6509              	.L349:
 6510              	.LBE119:
 6511              	.LBE118:
 6512              		.loc 2 2865 50
 6513 058a 0133     		adds	r3, r3, #1
 6514 058c 03F01F02 		and	r2, r3, #31
 6515 0590 1346     		mov	r3, r2
 6516 0592 5B00     		lsls	r3, r3, #1
 6517 0594 1344     		add	r3, r3, r2
 6518 0596 1B05     		lsls	r3, r3, #20
 6519              	.L346:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 6520              		.loc 2 2864 9
 6521 0598 0B43     		orrs	r3, r3, r1
 6522 059a 80E0     		b	.L350
 6523              	.L334:
 6524              		.loc 2 2865 50
 6525 059c 3B68     		ldr	r3, [r7]
 6526 059e 1B68     		ldr	r3, [r3]
 6527 05a0 C3F31203 		ubfx	r3, r3, #0, #19
 6528 05a4 002B     		cmp	r3, #0
 6529 05a6 07D1     		bne	.L351
 6530              		.loc 2 2865 50 is_stmt 0 discriminator 13
 6531 05a8 3B68     		ldr	r3, [r7]
 6532 05aa 1B68     		ldr	r3, [r3]
 6533 05ac 9B0E     		lsrs	r3, r3, #26
 6534 05ae 0133     		adds	r3, r3, #1
 6535 05b0 9B06     		lsls	r3, r3, #26
 6536 05b2 03F0F842 		and	r2, r3, #2080374784
 6537 05b6 15E0     		b	.L352
 6538              	.L351:
 6539              		.loc 2 2865 50 discriminator 14
 6540 05b8 3B68     		ldr	r3, [r7]
 6541 05ba 1B68     		ldr	r3, [r3]
 6542 05bc BB62     		str	r3, [r7, #40]
 6543              	.LBB120:
 6544              	.LBB121:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6545              		.loc 3 1055 4 is_stmt 1 discriminator 14
 6546 05be BB6A     		ldr	r3, [r7, #40]
 6547              		.syntax unified
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 326


 6548              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6549 05c0 93FAA3F3 		rbit r3, r3
 6550              	@ 0 "" 2
 6551              		.thumb
 6552              		.syntax unified
 6553 05c4 7B62     		str	r3, [r7, #36]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6554              		.loc 3 1068 10 discriminator 14
 6555 05c6 7B6A     		ldr	r3, [r7, #36]
 6556 05c8 FB62     		str	r3, [r7, #44]
 6557              	.LBE121:
 6558              	.LBE120:
 6559              	.LBB122:
 6560              	.LBB123:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6561              		.loc 3 1089 6 discriminator 14
 6562 05ca FB6A     		ldr	r3, [r7, #44]
 6563 05cc 002B     		cmp	r3, #0
 6564 05ce 01D1     		bne	.L354
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6565              		.loc 3 1091 12
 6566 05d0 2023     		movs	r3, #32
 6567 05d2 03E0     		b	.L355
 6568              	.L354:
 6569              		.loc 3 1093 10
 6570 05d4 FB6A     		ldr	r3, [r7, #44]
 6571 05d6 B3FA83F3 		clz	r3, r3
 6572 05da DBB2     		uxtb	r3, r3
 6573              	.L355:
 6574              	.LBE123:
 6575              	.LBE122:
 6576              		.loc 2 2865 50
 6577 05dc 0133     		adds	r3, r3, #1
 6578 05de 9B06     		lsls	r3, r3, #26
 6579 05e0 03F0F842 		and	r2, r3, #2080374784
 6580              	.L352:
 6581              		.loc 2 2865 50 is_stmt 0 discriminator 16
 6582 05e4 3B68     		ldr	r3, [r7]
 6583 05e6 1B68     		ldr	r3, [r3]
 6584 05e8 C3F31203 		ubfx	r3, r3, #0, #19
 6585 05ec 002B     		cmp	r3, #0
 6586 05ee 09D1     		bne	.L356
 6587              		.loc 2 2865 50 discriminator 17
 6588 05f0 3B68     		ldr	r3, [r7]
 6589 05f2 1B68     		ldr	r3, [r3]
 6590 05f4 9B0E     		lsrs	r3, r3, #26
 6591 05f6 0133     		adds	r3, r3, #1
 6592 05f8 03F01F03 		and	r3, r3, #31
 6593 05fc 0121     		movs	r1, #1
 6594 05fe 01FA03F3 		lsl	r3, r1, r3
 6595 0602 17E0     		b	.L357
 6596              	.L356:
 6597              		.loc 2 2865 50 discriminator 18
 6598 0604 3B68     		ldr	r3, [r7]
 6599 0606 1B68     		ldr	r3, [r3]
 6600 0608 FB61     		str	r3, [r7, #28]
 6601              	.LBB124:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 327


 6602              	.LBB125:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6603              		.loc 3 1055 4 is_stmt 1 discriminator 18
 6604 060a FB69     		ldr	r3, [r7, #28]
 6605              		.syntax unified
 6606              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6607 060c 93FAA3F3 		rbit r3, r3
 6608              	@ 0 "" 2
 6609              		.thumb
 6610              		.syntax unified
 6611 0610 BB61     		str	r3, [r7, #24]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6612              		.loc 3 1068 10 discriminator 18
 6613 0612 BB69     		ldr	r3, [r7, #24]
 6614 0614 3B62     		str	r3, [r7, #32]
 6615              	.LBE125:
 6616              	.LBE124:
 6617              	.LBB126:
 6618              	.LBB127:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6619              		.loc 3 1089 6 discriminator 18
 6620 0616 3B6A     		ldr	r3, [r7, #32]
 6621 0618 002B     		cmp	r3, #0
 6622 061a 01D1     		bne	.L359
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6623              		.loc 3 1091 12
 6624 061c 2023     		movs	r3, #32
 6625 061e 03E0     		b	.L360
 6626              	.L359:
 6627              		.loc 3 1093 10
 6628 0620 3B6A     		ldr	r3, [r7, #32]
 6629 0622 B3FA83F3 		clz	r3, r3
 6630 0626 DBB2     		uxtb	r3, r3
 6631              	.L360:
 6632              	.LBE127:
 6633              	.LBE126:
 6634              		.loc 2 2865 50
 6635 0628 0133     		adds	r3, r3, #1
 6636 062a 03F01F03 		and	r3, r3, #31
 6637 062e 0121     		movs	r1, #1
 6638 0630 01FA03F3 		lsl	r3, r1, r3
 6639              	.L357:
 6640              		.loc 2 2865 50 is_stmt 0 discriminator 20
 6641 0634 42EA0301 		orr	r1, r2, r3
 6642 0638 3B68     		ldr	r3, [r7]
 6643 063a 1B68     		ldr	r3, [r3]
 6644 063c C3F31203 		ubfx	r3, r3, #0, #19
 6645 0640 002B     		cmp	r3, #0
 6646 0642 0DD1     		bne	.L361
 6647              		.loc 2 2865 50 discriminator 21
 6648 0644 3B68     		ldr	r3, [r7]
 6649 0646 1B68     		ldr	r3, [r3]
 6650 0648 9B0E     		lsrs	r3, r3, #26
 6651 064a 0133     		adds	r3, r3, #1
 6652 064c 03F01F02 		and	r2, r3, #31
 6653 0650 1346     		mov	r3, r2
 6654 0652 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 328


 6655 0654 1344     		add	r3, r3, r2
 6656 0656 1E3B     		subs	r3, r3, #30
 6657 0658 1B05     		lsls	r3, r3, #20
 6658 065a 43F00073 		orr	r3, r3, #33554432
 6659 065e 1DE0     		b	.L362
 6660              	.L361:
 6661              		.loc 2 2865 50 discriminator 22
 6662 0660 3B68     		ldr	r3, [r7]
 6663 0662 1B68     		ldr	r3, [r3]
 6664 0664 3B61     		str	r3, [r7, #16]
 6665              	.LBB128:
 6666              	.LBB129:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6667              		.loc 3 1055 4 is_stmt 1 discriminator 22
 6668 0666 3B69     		ldr	r3, [r7, #16]
 6669              		.syntax unified
 6670              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6671 0668 93FAA3F3 		rbit r3, r3
 6672              	@ 0 "" 2
 6673              		.thumb
 6674              		.syntax unified
 6675 066c FB60     		str	r3, [r7, #12]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6676              		.loc 3 1068 10 discriminator 22
 6677 066e FB68     		ldr	r3, [r7, #12]
 6678 0670 7B61     		str	r3, [r7, #20]
 6679              	.LBE129:
 6680              	.LBE128:
 6681              	.LBB130:
 6682              	.LBB131:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6683              		.loc 3 1089 6 discriminator 22
 6684 0672 7B69     		ldr	r3, [r7, #20]
 6685 0674 002B     		cmp	r3, #0
 6686 0676 03D1     		bne	.L364
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6687              		.loc 3 1091 12
 6688 0678 2023     		movs	r3, #32
 6689 067a 05E0     		b	.L365
 6690              	.L380:
 6691              		.align	2
 6692              	.L379:
 6693 067c 00007F40 		.word	1082064896
 6694              	.L364:
 6695              		.loc 3 1093 10
 6696 0680 7B69     		ldr	r3, [r7, #20]
 6697 0682 B3FA83F3 		clz	r3, r3
 6698 0686 DBB2     		uxtb	r3, r3
 6699              	.L365:
 6700              	.LBE131:
 6701              	.LBE130:
 6702              		.loc 2 2865 50
 6703 0688 0133     		adds	r3, r3, #1
 6704 068a 03F01F02 		and	r2, r3, #31
 6705 068e 1346     		mov	r3, r2
 6706 0690 5B00     		lsls	r3, r3, #1
 6707 0692 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 329


 6708 0694 1E3B     		subs	r3, r3, #30
 6709 0696 1B05     		lsls	r3, r3, #20
 6710 0698 43F00073 		orr	r3, r3, #33554432
 6711              	.L362:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 6712              		.loc 2 2864 9 discriminator 2
 6713 069c 0B43     		orrs	r3, r3, r1
 6714              	.L350:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL(
 6715              		.loc 2 2864 9 is_stmt 0 discriminator 1
 6716 069e 3A68     		ldr	r2, [r7]
 6717 06a0 9268     		ldr	r2, [r2, #8]
 6718 06a2 1946     		mov	r1, r3
 6719 06a4 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 6720              	.L328:
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                    (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)pConfi
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                     + 1UL) & 0x1FUL)),
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       pConfig->SamplingTime);
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* paths.                                                                 */
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
 6721              		.loc 2 2879 9 is_stmt 1
 6722 06a8 3B68     		ldr	r3, [r7]
 6723 06aa 1A68     		ldr	r2, [r3]
 6724 06ac 444B     		ldr	r3, .L381
 6725 06ae 1340     		ands	r3, r3, r2
 6726              		.loc 2 2879 8
 6727 06b0 002B     		cmp	r3, #0
 6728 06b2 7AD0     		beq	.L375
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
 6729              		.loc 2 2881 37
 6730 06b4 4348     		ldr	r0, .L381+4
 6731 06b6 FFF7FEFF 		bl	LL_ADC_GetCommonPathInternalCh
 6732 06ba C7F8C000 		str	r0, [r7, #192]
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 6733              		.loc 2 2885 19
 6734 06be 3B68     		ldr	r3, [r7]
 6735 06c0 1B68     		ldr	r3, [r3]
 6736              		.loc 2 2885 10
 6737 06c2 414A     		ldr	r2, .L381+8
 6738 06c4 9342     		cmp	r3, r2
 6739 06c6 2CD1     		bne	.L367
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 6740              		.loc 2 2886 44
 6741 06c8 D7F8C030 		ldr	r3, [r7, #192]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 330


 6742 06cc 03F40003 		and	r3, r3, #8388608
 6743              		.loc 2 2886 11
 6744 06d0 002B     		cmp	r3, #0
 6745 06d2 26D1     		bne	.L367
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 6746              		.loc 2 2888 13
 6747 06d4 7B68     		ldr	r3, [r7, #4]
 6748 06d6 1B68     		ldr	r3, [r3]
 6749              		.loc 2 2888 12
 6750 06d8 3C4A     		ldr	r2, .L381+12
 6751 06da 9342     		cmp	r3, r2
 6752 06dc 04D0     		beq	.L368
 6753              		.loc 2 2888 13 discriminator 1
 6754 06de 7B68     		ldr	r3, [r7, #4]
 6755 06e0 1B68     		ldr	r3, [r3]
 6756 06e2 3B4A     		ldr	r2, .L381+16
 6757 06e4 9342     		cmp	r3, r2
 6758 06e6 5DD1     		bne	.L377
 6759              	.L368:
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6760              		.loc 2 2890 11
 6761 06e8 D7F8C030 		ldr	r3, [r7, #192]
 6762 06ec 43F40003 		orr	r3, r3, #8388608
 6763 06f0 1946     		mov	r1, r3
 6764 06f2 3448     		ldr	r0, .L381+4
 6765 06f4 FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
 6766              		.loc 2 2898 91
 6767 06f8 364B     		ldr	r3, .L381+20
 6768 06fa 1B68     		ldr	r3, [r3]
 6769 06fc 9B09     		lsrs	r3, r3, #6
 6770 06fe 364A     		ldr	r2, .L381+24
 6771 0700 A2FB0323 		umull	r2, r3, r2, r3
 6772 0704 9B09     		lsrs	r3, r3, #6
 6773              		.loc 2 2898 71
 6774 0706 5A1C     		adds	r2, r3, #1
 6775 0708 1346     		mov	r3, r2
 6776 070a 5B00     		lsls	r3, r3, #1
 6777 070c 1344     		add	r3, r3, r2
 6778 070e 9B00     		lsls	r3, r3, #2
 6779              		.loc 2 2898 27
 6780 0710 BB60     		str	r3, [r7, #8]
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 6781              		.loc 2 2899 17
 6782 0712 02E0     		b	.L370
 6783              	.L371:
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             wait_loop_index--;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 331


 6784              		.loc 2 2901 28
 6785 0714 BB68     		ldr	r3, [r7, #8]
 6786 0716 013B     		subs	r3, r3, #1
 6787 0718 BB60     		str	r3, [r7, #8]
 6788              	.L370:
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 6789              		.loc 2 2899 34
 6790 071a BB68     		ldr	r3, [r7, #8]
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 6791              		.loc 2 2899 17
 6792 071c 002B     		cmp	r3, #0
 6793 071e F9D1     		bne	.L371
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6794              		.loc 2 2888 12
 6795 0720 40E0     		b	.L377
 6796              	.L367:
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((pConfig->Channel == ADC_CHANNEL_VBAT)
 6797              		.loc 2 2905 24
 6798 0722 3B68     		ldr	r3, [r7]
 6799 0724 1B68     		ldr	r3, [r3]
 6800              		.loc 2 2905 15
 6801 0726 2D4A     		ldr	r2, .L381+28
 6802 0728 9342     		cmp	r3, r2
 6803 072a 18D1     		bne	.L372
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 6804              		.loc 2 2906 49
 6805 072c D7F8C030 		ldr	r3, [r7, #192]
 6806 0730 03F08073 		and	r3, r3, #16777216
 6807              		.loc 2 2906 16
 6808 0734 002B     		cmp	r3, #0
 6809 0736 12D1     		bne	.L372
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 6810              		.loc 2 2908 13
 6811 0738 7B68     		ldr	r3, [r7, #4]
 6812 073a 1B68     		ldr	r3, [r3]
 6813              		.loc 2 2908 12
 6814 073c 234A     		ldr	r2, .L381+12
 6815 073e 9342     		cmp	r3, r2
 6816 0740 04D0     		beq	.L373
 6817              		.loc 2 2908 13 discriminator 1
 6818 0742 7B68     		ldr	r3, [r7, #4]
 6819 0744 1B68     		ldr	r3, [r3]
 6820 0746 224A     		ldr	r2, .L381+16
 6821 0748 9342     		cmp	r3, r2
 6822 074a 2DD1     		bne	.L378
 6823              	.L373:
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6824              		.loc 2 2910 11
 6825 074c D7F8C030 		ldr	r3, [r7, #192]
 6826 0750 43F08073 		orr	r3, r3, #16777216
 6827 0754 1946     		mov	r1, r3
 6828 0756 1B48     		ldr	r0, .L381+4
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 332


 6829 0758 FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6830              		.loc 2 2908 12
 6831 075c 24E0     		b	.L378
 6832              	.L372:
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((pConfig->Channel == ADC_CHANNEL_VREFINT)
 6833              		.loc 2 2914 24
 6834 075e 3B68     		ldr	r3, [r7]
 6835 0760 1B68     		ldr	r3, [r3]
 6836              		.loc 2 2914 15
 6837 0762 1F4A     		ldr	r2, .L381+32
 6838 0764 9342     		cmp	r3, r2
 6839 0766 20D1     		bne	.L375
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 6840              		.loc 2 2915 49
 6841 0768 D7F8C030 		ldr	r3, [r7, #192]
 6842 076c 03F48003 		and	r3, r3, #4194304
 6843              		.loc 2 2915 16
 6844 0770 002B     		cmp	r3, #0
 6845 0772 1AD1     		bne	.L375
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
 6846              		.loc 2 2917 13
 6847 0774 7B68     		ldr	r3, [r7, #4]
 6848 0776 1B68     		ldr	r3, [r3]
 6849              		.loc 2 2917 12
 6850 0778 144A     		ldr	r2, .L381+12
 6851 077a 9342     		cmp	r3, r2
 6852 077c 15D1     		bne	.L375
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 6853              		.loc 2 2919 11
 6854 077e D7F8C030 		ldr	r3, [r7, #192]
 6855 0782 43F48003 		orr	r3, r3, #4194304
 6856 0786 1946     		mov	r1, r3
 6857 0788 0E48     		ldr	r0, .L381+4
 6858 078a FFF7FEFF 		bl	LL_ADC_SetCommonPathInternalCh
 6859 078e 0CE0     		b	.L375
 6860              	.L275:
 6861              	.LBE71:
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* nothing to do */
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 333


2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 6862              		.loc 2 2936 5
 6863 0790 7B68     		ldr	r3, [r7, #4]
 6864 0792 5B6D     		ldr	r3, [r3, #84]
 6865 0794 43F02002 		orr	r2, r3, #32
 6866 0798 7B68     		ldr	r3, [r7, #4]
 6867 079a 5A65     		str	r2, [r3, #84]
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 6868              		.loc 2 2938 20
 6869 079c 0123     		movs	r3, #1
 6870 079e 87F8D730 		strb	r3, [r7, #215]
 6871 07a2 02E0     		b	.L375
 6872              	.L377:
 6873              	.LBB132:
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6874              		.loc 2 2888 12
 6875 07a4 00BF     		nop
 6876 07a6 00E0     		b	.L375
 6877              	.L378:
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 6878              		.loc 2 2908 12
 6879 07a8 00BF     		nop
 6880              	.L375:
 6881              	.LBE132:
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 6882              		.loc 2 2942 3
 6883 07aa 7B68     		ldr	r3, [r7, #4]
 6884 07ac 0022     		movs	r2, #0
 6885 07ae 83F85020 		strb	r2, [r3, #80]
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 6886              		.loc 2 2945 10
 6887 07b2 97F8D730 		ldrb	r3, [r7, #215]	@ zero_extendqisi2
 6888              	.L274:
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6889              		.loc 2 2946 1
 6890 07b6 1846     		mov	r0, r3
 6891 07b8 D837     		adds	r7, r7, #216
 6892              	.LCFI322:
 6893              		.cfi_def_cfa_offset 8
 6894 07ba BD46     		mov	sp, r7
 6895              	.LCFI323:
 6896              		.cfi_def_cfa_register 13
 6897              		@ sp needed
 6898 07bc 80BD     		pop	{r7, pc}
 6899              	.L382:
 6900 07be 00BF     		.align	2
 6901              	.L381:
 6902 07c0 00000880 		.word	-2146959360
 6903 07c4 00030450 		.word	1342440192
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 334


 6904 07c8 000052C7 		.word	-950927360
 6905 07cc 00000450 		.word	1342439424
 6906 07d0 00020450 		.word	1342439936
 6907 07d4 00000000 		.word	SystemCoreClock
 6908 07d8 632D3E05 		.word	87960931
 6909 07dc 000084CB 		.word	-880541696
 6910 07e0 01000080 		.word	-2147483647
 6911              		.cfi_endproc
 6912              	.LFE335:
 6914              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 6915              		.align	1
 6916              		.global	HAL_ADC_AnalogWDGConfig
 6917              		.syntax unified
 6918              		.thumb
 6919              		.thumb_func
 6921              	HAL_ADC_AnalogWDGConfig:
 6922              	.LFB336:
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the ADC.
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, const ADC_AnalogWDGConfTypeDef *
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 6923              		.loc 2 2965 1
 6924              		.cfi_startproc
 6925              		@ args = 0, pretend = 0, frame = 56
 6926              		@ frame_needed = 1, uses_anonymous_args = 0
 6927 0000 80B5     		push	{r7, lr}
 6928              	.LCFI324:
 6929              		.cfi_def_cfa_offset 8
 6930              		.cfi_offset 7, -8
 6931              		.cfi_offset 14, -4
 6932 0002 8EB0     		sub	sp, sp, #56
 6933              	.LCFI325:
 6934              		.cfi_def_cfa_offset 64
 6935 0004 00AF     		add	r7, sp, #0
 6936              	.LCFI326:
 6937              		.cfi_def_cfa_register 7
 6938 0006 7860     		str	r0, [r7, #4]
 6939 0008 3960     		str	r1, [r7]
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6940              		.loc 2 2966 21
 6941 000a 0023     		movs	r3, #0
 6942 000c 87F83730 		strb	r3, [r7, #55]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 335


2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
 6943              		.loc 2 2978 24
 6944 0010 3B68     		ldr	r3, [r7]
 6945 0012 5B68     		ldr	r3, [r3, #4]
 6946              		.loc 2 2978 6
 6947 0014 B3F5400F 		cmp	r3, #12582912
 6948 0018 03D0     		beq	.L384
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6949              		.loc 2 2979 24 discriminator 1
 6950 001a 3B68     		ldr	r3, [r7]
 6951 001c 5B68     		ldr	r3, [r3, #4]
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6952              		.loc 2 2978 77 discriminator 1
 6953 001e B3F1A07F 		cmp	r3, #20971520
 6954              	.L384:
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, pAnalogWDGConfig->Channel));
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verify thresholds range */
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
 6955              		.loc 2 3002 3
 6956 0022 7B68     		ldr	r3, [r7, #4]
 6957 0024 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 6958 0028 012B     		cmp	r3, #1
 6959 002a 01D1     		bne	.L385
 6960              		.loc 2 3002 3 is_stmt 0 discriminator 1
 6961 002c 0223     		movs	r3, #2
 6962 002e ECE1     		b	.L386
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 336


 6963              	.L385:
 6964              		.loc 2 3002 3 discriminator 2
 6965 0030 7B68     		ldr	r3, [r7, #4]
 6966 0032 0122     		movs	r2, #1
 6967 0034 83F85020 		strb	r2, [r3, #80]
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 6968              		.loc 2 3009 79 is_stmt 1 discriminator 2
 6969 0038 7B68     		ldr	r3, [r7, #4]
 6970 003a 1B68     		ldr	r3, [r3]
 6971              		.loc 2 3009 44 discriminator 2
 6972 003c 1846     		mov	r0, r3
 6973 003e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 6974 0042 3863     		str	r0, [r7, #48]
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 6975              		.loc 2 3010 80 discriminator 2
 6976 0044 7B68     		ldr	r3, [r7, #4]
 6977 0046 1B68     		ldr	r3, [r3]
 6978              		.loc 2 3010 45 discriminator 2
 6979 0048 1846     		mov	r0, r3
 6980 004a FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 6981 004e F862     		str	r0, [r7, #44]
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 6982              		.loc 2 3011 6 discriminator 2
 6983 0050 3B6B     		ldr	r3, [r7, #48]
 6984 0052 002B     		cmp	r3, #0
 6985 0054 40F0CA81 		bne	.L387
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 6986              		.loc 2 3012 7
 6987 0058 FB6A     		ldr	r3, [r7, #44]
 6988 005a 002B     		cmp	r3, #0
 6989 005c 40F0C681 		bne	.L387
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
 6990              		.loc 2 3016 25
 6991 0060 3B68     		ldr	r3, [r7]
 6992 0062 1B68     		ldr	r3, [r3]
 6993              		.loc 2 3016 8
 6994 0064 9B4A     		ldr	r2, .L422
 6995 0066 9342     		cmp	r3, r2
 6996 0068 40F0A280 		bne	.L388
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
 6997              		.loc 2 3021 31
 6998 006c 3B68     		ldr	r3, [r7]
 6999 006e 5B68     		ldr	r3, [r3, #4]
 7000              		.loc 2 3021 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 337


 7001 0070 B3F1E07F 		cmp	r3, #29360128
 7002 0074 34D0     		beq	.L389
 7003 0076 B3F1E07F 		cmp	r3, #29360128
 7004 007a 56D8     		bhi	.L390
 7005 007c B3F1C07F 		cmp	r3, #25165824
 7006 0080 4BD0     		beq	.L391
 7007 0082 B3F1C07F 		cmp	r3, #25165824
 7008 0086 50D8     		bhi	.L390
 7009 0088 B3F1A07F 		cmp	r3, #20971520
 7010 008c 1BD0     		beq	.L392
 7011 008e B3F1A07F 		cmp	r3, #20971520
 7012 0092 4AD8     		bhi	.L390
 7013 0094 B3F1807F 		cmp	r3, #16777216
 7014 0098 37D0     		beq	.L393
 7015 009a B3F1807F 		cmp	r3, #16777216
 7016 009e 44D8     		bhi	.L390
 7017 00a0 B3F5000F 		cmp	r3, #8388608
 7018 00a4 29D0     		beq	.L394
 7019 00a6 B3F5400F 		cmp	r3, #12582912
 7020 00aa 3ED1     		bne	.L390
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
 7021              		.loc 2 3024 11
 7022 00ac 7B68     		ldr	r3, [r7, #4]
 7023 00ae 1868     		ldr	r0, [r3]
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7024              		.loc 2 3025 43
 7025 00b0 3B68     		ldr	r3, [r7]
 7026 00b2 9B68     		ldr	r3, [r3, #8]
 7027 00b4 23F07C73 		bic	r3, r3, #66060288
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7028              		.loc 2 3024 11
 7029 00b8 43F44003 		orr	r3, r3, #12582912
 7030 00bc 1A46     		mov	r2, r3
 7031 00be 8549     		ldr	r1, .L422
 7032 00c0 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7033              		.loc 2 3027 11
 7034 00c4 39E0     		b	.L395
 7035              	.L392:
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
 7036              		.loc 2 3030 11
 7037 00c6 7B68     		ldr	r3, [r7, #4]
 7038 00c8 1868     		ldr	r0, [r3]
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7039              		.loc 2 3031 43
 7040 00ca 3B68     		ldr	r3, [r7]
 7041 00cc 9B68     		ldr	r3, [r3, #8]
 7042 00ce 23F07C73 		bic	r3, r3, #66060288
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7043              		.loc 2 3030 11
 7044 00d2 43F0A073 		orr	r3, r3, #20971520
 7045 00d6 1A46     		mov	r2, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 338


 7046 00d8 7E49     		ldr	r1, .L422
 7047 00da FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                           LL_ADC_GROUP_INJECTED));
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7048              		.loc 2 3033 11
 7049 00de 2CE0     		b	.L395
 7050              	.L389:
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
 7051              		.loc 2 3036 11
 7052 00e0 7B68     		ldr	r3, [r7, #4]
 7053 00e2 1868     		ldr	r0, [r3]
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7054              		.loc 2 3037 43
 7055 00e4 3B68     		ldr	r3, [r7]
 7056 00e6 9B68     		ldr	r3, [r3, #8]
 7057 00e8 23F07C73 		bic	r3, r3, #66060288
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 7058              		.loc 2 3036 11
 7059 00ec 43F0E073 		orr	r3, r3, #29360128
 7060 00f0 1A46     		mov	r2, r3
 7061 00f2 7849     		ldr	r1, .L422
 7062 00f4 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR_INJE
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7063              		.loc 2 3039 11
 7064 00f8 1FE0     		b	.L395
 7065              	.L394:
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
 7066              		.loc 2 3042 11
 7067 00fa 7B68     		ldr	r3, [r7, #4]
 7068 00fc 1B68     		ldr	r3, [r3]
 7069 00fe 764A     		ldr	r2, .L422+4
 7070 0100 7449     		ldr	r1, .L422
 7071 0102 1846     		mov	r0, r3
 7072 0104 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7073              		.loc 2 3043 11
 7074 0108 17E0     		b	.L395
 7075              	.L393:
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
 7076              		.loc 2 3046 11
 7077 010a 7B68     		ldr	r3, [r7, #4]
 7078 010c 1B68     		ldr	r3, [r3]
 7079 010e 734A     		ldr	r2, .L422+8
 7080 0110 7049     		ldr	r1, .L422
 7081 0112 1846     		mov	r0, r3
 7082 0114 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7083              		.loc 2 3047 11
 7084 0118 0FE0     		b	.L395
 7085              	.L391:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 339


3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
 7086              		.loc 2 3050 11
 7087 011a 7B68     		ldr	r3, [r7, #4]
 7088 011c 1B68     		ldr	r3, [r3]
 7089 011e 704A     		ldr	r2, .L422+12
 7090 0120 6C49     		ldr	r1, .L422
 7091 0122 1846     		mov	r0, r3
 7092 0124 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7093              		.loc 2 3051 11
 7094 0128 07E0     		b	.L395
 7095              	.L390:
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
 7096              		.loc 2 3054 11
 7097 012a 7B68     		ldr	r3, [r7, #4]
 7098 012c 1B68     		ldr	r3, [r3]
 7099 012e 0022     		movs	r2, #0
 7100 0130 6849     		ldr	r1, .L422
 7101 0132 1846     		mov	r0, r3
 7102 0134 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7103              		.loc 2 3055 11
 7104 0138 00BF     		nop
 7105              	.L395:
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->H
 7106              		.loc 2 3061 40
 7107 013a 3B68     		ldr	r3, [r7]
 7108 013c 1A69     		ldr	r2, [r3, #16]
 7109 013e 7B68     		ldr	r3, [r7, #4]
 7110 0140 1B68     		ldr	r3, [r3]
 7111 0142 DB68     		ldr	r3, [r3, #12]
 7112 0144 DB08     		lsrs	r3, r3, #3
 7113 0146 03F00303 		and	r3, r3, #3
 7114 014a 5B00     		lsls	r3, r3, #1
 7115              		.loc 2 3061 38
 7116 014c 02FA03F3 		lsl	r3, r2, r3
 7117 0150 BB62     		str	r3, [r7, #40]
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->L
 7118              		.loc 2 3062 40
 7119 0152 3B68     		ldr	r3, [r7]
 7120 0154 5A69     		ldr	r2, [r3, #20]
 7121 0156 7B68     		ldr	r3, [r7, #4]
 7122 0158 1B68     		ldr	r3, [r3]
 7123 015a DB68     		ldr	r3, [r3, #12]
 7124 015c DB08     		lsrs	r3, r3, #3
 7125 015e 03F00303 		and	r3, r3, #3
 7126 0162 5B00     		lsls	r3, r3, #1
 7127              		.loc 2 3062 38
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 340


 7128 0164 02FA03F3 		lsl	r3, r2, r3
 7129 0168 7B62     		str	r3, [r7, #36]
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_hig
 7130              		.loc 2 3065 7
 7131 016a 7B68     		ldr	r3, [r7, #4]
 7132 016c 1868     		ldr	r0, [r3]
 7133 016e 3B68     		ldr	r3, [r7]
 7134 0170 1968     		ldr	r1, [r3]
 7135 0172 7B6A     		ldr	r3, [r7, #36]
 7136 0174 BA6A     		ldr	r2, [r7, #40]
 7137 0176 FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmp_awd_low_threshold_shifted);
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 7138              		.loc 2 3069 7
 7139 017a 7B68     		ldr	r3, [r7, #4]
 7140 017c 5B6D     		ldr	r3, [r3, #84]
 7141 017e 23F48032 		bic	r2, r3, #65536
 7142 0182 7B68     		ldr	r3, [r7, #4]
 7143 0184 5A65     		str	r2, [r3, #84]
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
 7144              		.loc 2 3075 7
 7145 0186 7B68     		ldr	r3, [r7, #4]
 7146 0188 1B68     		ldr	r3, [r3]
 7147 018a 1846     		mov	r0, r3
 7148 018c FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD1
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
 7149              		.loc 2 3078 27
 7150 0190 3B68     		ldr	r3, [r7]
 7151 0192 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7152              		.loc 2 3078 10
 7153 0194 012B     		cmp	r3, #1
 7154 0196 05D1     		bne	.L396
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
 7155              		.loc 2 3080 9
 7156 0198 7B68     		ldr	r3, [r7, #4]
 7157 019a 1B68     		ldr	r3, [r3]
 7158 019c 1846     		mov	r0, r3
 7159 019e FFF7FEFF 		bl	LL_ADC_EnableIT_AWD1
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7160              		.loc 2 3016 8
 7161 01a2 2CE1     		b	.L421
 7162              	.L396:
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 341


3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
 7163              		.loc 2 3084 9
 7164 01a4 7B68     		ldr	r3, [r7, #4]
 7165 01a6 1B68     		ldr	r3, [r3]
 7166 01a8 1846     		mov	r0, r3
 7167 01aa FFF7FEFF 		bl	LL_ADC_DisableIT_AWD1
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7168              		.loc 2 3016 8
 7169 01ae 26E1     		b	.L421
 7170              	.L388:
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
 7171              		.loc 2 3090 31
 7172 01b0 3B68     		ldr	r3, [r7]
 7173 01b2 5B68     		ldr	r3, [r3, #4]
 7174              		.loc 2 3090 7
 7175 01b4 B3F1E07F 		cmp	r3, #29360128
 7176 01b8 1DD0     		beq	.L398
 7177 01ba B3F1E07F 		cmp	r3, #29360128
 7178 01be 00F29380 		bhi	.L399
 7179 01c2 B3F1C07F 		cmp	r3, #25165824
 7180 01c6 7BD0     		beq	.L400
 7181 01c8 B3F1C07F 		cmp	r3, #25165824
 7182 01cc 00F28C80 		bhi	.L399
 7183 01d0 B3F1A07F 		cmp	r3, #20971520
 7184 01d4 0FD0     		beq	.L398
 7185 01d6 B3F1A07F 		cmp	r3, #20971520
 7186 01da 00F28580 		bhi	.L399
 7187 01de B3F1807F 		cmp	r3, #16777216
 7188 01e2 6DD0     		beq	.L400
 7189 01e4 B3F1807F 		cmp	r3, #16777216
 7190 01e8 7ED8     		bhi	.L399
 7191 01ea B3F5000F 		cmp	r3, #8388608
 7192 01ee 67D0     		beq	.L400
 7193 01f0 B3F5400F 		cmp	r3, #12582912
 7194 01f4 78D1     		bne	.L399
 7195              	.L398:
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
 7196              		.loc 2 3097 31
 7197 01f6 3B68     		ldr	r3, [r7]
 7198 01f8 1B68     		ldr	r3, [r3]
 7199              		.loc 2 3097 14
 7200 01fa 3A4A     		ldr	r2, .L422+16
 7201 01fc 9342     		cmp	r3, r2
 7202 01fe 2FD1     		bne	.L401
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR,
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 342


 7203              		.loc 2 3099 13
 7204 0200 3B68     		ldr	r3, [r7]
 7205 0202 9B68     		ldr	r3, [r3, #8]
 7206 0204 C3F31203 		ubfx	r3, r3, #0, #19
 7207 0208 002B     		cmp	r3, #0
 7208 020a 08D1     		bne	.L402
 7209              		.loc 2 3099 13 is_stmt 0 discriminator 1
 7210 020c 3B68     		ldr	r3, [r7]
 7211 020e 9B68     		ldr	r3, [r3, #8]
 7212 0210 9B0E     		lsrs	r3, r3, #26
 7213 0212 03F01F03 		and	r3, r3, #31
 7214 0216 0122     		movs	r2, #1
 7215 0218 02FA03F3 		lsl	r3, r2, r3
 7216 021c 16E0     		b	.L403
 7217              	.L402:
 7218              		.loc 2 3099 13 discriminator 2
 7219 021e 3B68     		ldr	r3, [r7]
 7220 0220 9B68     		ldr	r3, [r3, #8]
 7221 0222 FB61     		str	r3, [r7, #28]
 7222              	.LBB133:
 7223              	.LBB134:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 7224              		.loc 3 1055 4 is_stmt 1 discriminator 2
 7225 0224 FB69     		ldr	r3, [r7, #28]
 7226              		.syntax unified
 7227              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7228 0226 93FAA3F3 		rbit r3, r3
 7229              	@ 0 "" 2
 7230              		.thumb
 7231              		.syntax unified
 7232 022a BB61     		str	r3, [r7, #24]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7233              		.loc 3 1068 10 discriminator 2
 7234 022c BB69     		ldr	r3, [r7, #24]
 7235 022e 3B62     		str	r3, [r7, #32]
 7236              	.LBE134:
 7237              	.LBE133:
 7238              	.LBB135:
 7239              	.LBB136:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 7240              		.loc 3 1089 6 discriminator 2
 7241 0230 3B6A     		ldr	r3, [r7, #32]
 7242 0232 002B     		cmp	r3, #0
 7243 0234 01D1     		bne	.L405
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 7244              		.loc 3 1091 12
 7245 0236 2023     		movs	r3, #32
 7246 0238 03E0     		b	.L406
 7247              	.L405:
 7248              		.loc 3 1093 10
 7249 023a 3B6A     		ldr	r3, [r7, #32]
 7250 023c B3FA83F3 		clz	r3, r3
 7251 0240 DBB2     		uxtb	r3, r3
 7252              	.L406:
 7253              	.LBE136:
 7254              	.LBE135:
 7255              		.loc 2 3099 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 343


 7256 0242 03F01F03 		and	r3, r3, #31
 7257 0246 0122     		movs	r2, #1
 7258 0248 02FA03F3 		lsl	r3, r2, r3
 7259              	.L403:
 7260              		.loc 2 3099 13 is_stmt 0 discriminator 4
 7261 024c 7A68     		ldr	r2, [r7, #4]
 7262 024e 1268     		ldr	r2, [r2]
 7263 0250 D2F8A010 		ldr	r1, [r2, #160]
 7264 0254 7A68     		ldr	r2, [r7, #4]
 7265 0256 1268     		ldr	r2, [r2]
 7266 0258 0B43     		orrs	r3, r3, r1
 7267 025a C2F8A030 		str	r3, [r2, #160]
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR,
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7268              		.loc 2 3107 11 is_stmt 1 discriminator 4
 7269 025e 4CE0     		b	.L413
 7270              	.L401:
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 7271              		.loc 2 3104 13
 7272 0260 3B68     		ldr	r3, [r7]
 7273 0262 9B68     		ldr	r3, [r3, #8]
 7274 0264 C3F31203 		ubfx	r3, r3, #0, #19
 7275 0268 002B     		cmp	r3, #0
 7276 026a 08D1     		bne	.L408
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 7277              		.loc 2 3104 13 is_stmt 0 discriminator 1
 7278 026c 3B68     		ldr	r3, [r7]
 7279 026e 9B68     		ldr	r3, [r3, #8]
 7280 0270 9B0E     		lsrs	r3, r3, #26
 7281 0272 03F01F03 		and	r3, r3, #31
 7282 0276 0122     		movs	r2, #1
 7283 0278 02FA03F3 		lsl	r3, r2, r3
 7284 027c 16E0     		b	.L409
 7285              	.L408:
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 7286              		.loc 2 3104 13 discriminator 2
 7287 027e 3B68     		ldr	r3, [r7]
 7288 0280 9B68     		ldr	r3, [r3, #8]
 7289 0282 3B61     		str	r3, [r7, #16]
 7290              	.LBB137:
 7291              	.LBB138:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 7292              		.loc 3 1055 4 is_stmt 1 discriminator 2
 7293 0284 3B69     		ldr	r3, [r7, #16]
 7294              		.syntax unified
 7295              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7296 0286 93FAA3F3 		rbit r3, r3
 7297              	@ 0 "" 2
 7298              		.thumb
 7299              		.syntax unified
 7300 028a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 344


1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7301              		.loc 3 1068 10 discriminator 2
 7302 028c FB68     		ldr	r3, [r7, #12]
 7303 028e 7B61     		str	r3, [r7, #20]
 7304              	.LBE138:
 7305              	.LBE137:
 7306              	.LBB139:
 7307              	.LBB140:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 7308              		.loc 3 1089 6 discriminator 2
 7309 0290 7B69     		ldr	r3, [r7, #20]
 7310 0292 002B     		cmp	r3, #0
 7311 0294 01D1     		bne	.L411
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 7312              		.loc 3 1091 12
 7313 0296 2023     		movs	r3, #32
 7314 0298 03E0     		b	.L412
 7315              	.L411:
 7316              		.loc 3 1093 10
 7317 029a 7B69     		ldr	r3, [r7, #20]
 7318 029c B3FA83F3 		clz	r3, r3
 7319 02a0 DBB2     		uxtb	r3, r3
 7320              	.L412:
 7321              	.LBE140:
 7322              	.LBE139:
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 7323              		.loc 2 3104 13
 7324 02a2 03F01F03 		and	r3, r3, #31
 7325 02a6 0122     		movs	r2, #1
 7326 02a8 02FA03F3 		lsl	r3, r2, r3
 7327              	.L409:
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                     (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig->Channel) & 0x1FUL)));
 7328              		.loc 2 3104 13 is_stmt 0 discriminator 4
 7329 02ac 7A68     		ldr	r2, [r7, #4]
 7330 02ae 1268     		ldr	r2, [r2]
 7331 02b0 D2F8A410 		ldr	r1, [r2, #164]
 7332 02b4 7A68     		ldr	r2, [r7, #4]
 7333 02b6 1268     		ldr	r2, [r2]
 7334 02b8 0B43     		orrs	r3, r3, r1
 7335 02ba C2F8A430 		str	r3, [r2, #164]
 7336              		.loc 2 3107 11 is_stmt 1 discriminator 4
 7337 02be 1CE0     		b	.L413
 7338              	.L400:
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance,
 7339              		.loc 2 3112 11
 7340 02c0 7B68     		ldr	r3, [r7, #4]
 7341 02c2 1868     		ldr	r0, [r3]
 7342 02c4 3B68     		ldr	r3, [r7]
 7343 02c6 1B68     		ldr	r3, [r3]
 7344 02c8 054A     		ldr	r2, .L422+12
 7345 02ca 1946     		mov	r1, r3
 7346 02cc FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, LL_ADC_AWD_ALL_CHANNELS
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 345


3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7347              		.loc 2 3114 11
 7348 02d0 13E0     		b	.L413
 7349              	.L423:
 7350 02d2 00BF     		.align	2
 7351              	.L422:
 7352 02d4 0000C07D 		.word	2109734912
 7353 02d8 FFFF8700 		.word	8912895
 7354 02dc FFFF0701 		.word	17301503
 7355 02e0 FFFF8701 		.word	25690111
 7356 02e4 FFFF1700 		.word	1572863
 7357              	.L399:
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
 7358              		.loc 2 3117 11
 7359 02e8 7B68     		ldr	r3, [r7, #4]
 7360 02ea 1868     		ldr	r0, [r3]
 7361 02ec 3B68     		ldr	r3, [r7]
 7362 02ee 1B68     		ldr	r3, [r3]
 7363 02f0 0022     		movs	r2, #0
 7364 02f2 1946     		mov	r1, r3
 7365 02f4 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 7366              		.loc 2 3118 11
 7367 02f8 00BF     		nop
 7368              	.L413:
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_awd_high_threshold_shifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->
 7369              		.loc 2 3123 40
 7370 02fa 7B68     		ldr	r3, [r7, #4]
 7371 02fc 1B68     		ldr	r3, [r3]
 7372 02fe DB68     		ldr	r3, [r3, #12]
 7373 0300 03F01803 		and	r3, r3, #24
 7374 0304 182B     		cmp	r3, #24
 7375 0306 0FD0     		beq	.L414
 7376              		.loc 2 3123 40 is_stmt 0 discriminator 1
 7377 0308 3B68     		ldr	r3, [r7]
 7378 030a 1A69     		ldr	r2, [r3, #16]
 7379 030c 7B68     		ldr	r3, [r7, #4]
 7380 030e 1B68     		ldr	r3, [r3]
 7381 0310 DB68     		ldr	r3, [r3, #12]
 7382 0312 DB08     		lsrs	r3, r3, #3
 7383 0314 03F00303 		and	r3, r3, #3
 7384 0318 C3F10203 		rsb	r3, r3, #2
 7385 031c 5B00     		lsls	r3, r3, #1
 7386 031e 03F01E03 		and	r3, r3, #30
 7387 0322 22FA03F3 		lsr	r3, r2, r3
 7388 0326 02E0     		b	.L415
 7389              	.L414:
 7390              		.loc 2 3123 40 discriminator 2
 7391 0328 3B68     		ldr	r3, [r7]
 7392 032a 1B69     		ldr	r3, [r3, #16]
 7393 032c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 346


 7394              	.L415:
 7395              		.loc 2 3123 38 is_stmt 1 discriminator 4
 7396 032e BB62     		str	r3, [r7, #40]
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_awd_low_threshold_shifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->
 7397              		.loc 2 3124 40 discriminator 4
 7398 0330 7B68     		ldr	r3, [r7, #4]
 7399 0332 1B68     		ldr	r3, [r3]
 7400 0334 DB68     		ldr	r3, [r3, #12]
 7401 0336 03F01803 		and	r3, r3, #24
 7402 033a 182B     		cmp	r3, #24
 7403 033c 0FD0     		beq	.L416
 7404              		.loc 2 3124 40 is_stmt 0 discriminator 1
 7405 033e 3B68     		ldr	r3, [r7]
 7406 0340 5A69     		ldr	r2, [r3, #20]
 7407 0342 7B68     		ldr	r3, [r7, #4]
 7408 0344 1B68     		ldr	r3, [r3]
 7409 0346 DB68     		ldr	r3, [r3, #12]
 7410 0348 DB08     		lsrs	r3, r3, #3
 7411 034a 03F00303 		and	r3, r3, #3
 7412 034e C3F10203 		rsb	r3, r3, #2
 7413 0352 5B00     		lsls	r3, r3, #1
 7414 0354 03F01E03 		and	r3, r3, #30
 7415 0358 22FA03F3 		lsr	r3, r2, r3
 7416 035c 02E0     		b	.L417
 7417              	.L416:
 7418              		.loc 2 3124 40 discriminator 2
 7419 035e 3B68     		ldr	r3, [r7]
 7420 0360 5B69     		ldr	r3, [r3, #20]
 7421 0362 9B00     		lsls	r3, r3, #2
 7422              	.L417:
 7423              		.loc 2 3124 38 is_stmt 1 discriminator 4
 7424 0364 7B62     		str	r3, [r7, #36]
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_hig
 7425              		.loc 2 3127 7 discriminator 4
 7426 0366 7B68     		ldr	r3, [r7, #4]
 7427 0368 1868     		ldr	r0, [r3]
 7428 036a 3B68     		ldr	r3, [r7]
 7429 036c 1968     		ldr	r1, [r3]
 7430 036e 7B6A     		ldr	r3, [r7, #36]
 7431 0370 BA6A     		ldr	r2, [r7, #40]
 7432 0372 FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       tmp_awd_low_threshold_shifted);
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
 7433              		.loc 2 3130 27 discriminator 4
 7434 0376 3B68     		ldr	r3, [r7]
 7435 0378 1B68     		ldr	r3, [r3]
 7436              		.loc 2 3130 10 discriminator 4
 7437 037a 264A     		ldr	r2, .L424
 7438 037c 9342     		cmp	r3, r2
 7439 037e 1AD1     		bne	.L418
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 7440              		.loc 2 3133 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 347


 7441 0380 7B68     		ldr	r3, [r7, #4]
 7442 0382 5B6D     		ldr	r3, [r3, #84]
 7443 0384 23F40032 		bic	r2, r3, #131072
 7444 0388 7B68     		ldr	r3, [r7, #4]
 7445 038a 5A65     		str	r2, [r3, #84]
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
 7446              		.loc 2 3139 9
 7447 038c 7B68     		ldr	r3, [r7, #4]
 7448 038e 1B68     		ldr	r3, [r3]
 7449 0390 1846     		mov	r0, r3
 7450 0392 FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD2
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
 7451              		.loc 2 3142 29
 7452 0396 3B68     		ldr	r3, [r7]
 7453 0398 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7454              		.loc 2 3142 12
 7455 039a 012B     		cmp	r3, #1
 7456 039c 05D1     		bne	.L419
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
 7457              		.loc 2 3144 11
 7458 039e 7B68     		ldr	r3, [r7, #4]
 7459 03a0 1B68     		ldr	r3, [r3]
 7460 03a2 1846     		mov	r0, r3
 7461 03a4 FFF7FEFF 		bl	LL_ADC_EnableIT_AWD2
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7462              		.loc 2 3016 8
 7463 03a8 29E0     		b	.L421
 7464              	.L419:
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
 7465              		.loc 2 3148 11
 7466 03aa 7B68     		ldr	r3, [r7, #4]
 7467 03ac 1B68     		ldr	r3, [r3]
 7468 03ae 1846     		mov	r0, r3
 7469 03b0 FFF7FEFF 		bl	LL_ADC_DisableIT_AWD2
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7470              		.loc 2 3016 8
 7471 03b4 23E0     		b	.L421
 7472              	.L418:
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 7473              		.loc 2 3155 9
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 348


 7474 03b6 7B68     		ldr	r3, [r7, #4]
 7475 03b8 5B6D     		ldr	r3, [r3, #84]
 7476 03ba 23F48022 		bic	r2, r3, #262144
 7477 03be 7B68     		ldr	r3, [r7, #4]
 7478 03c0 5A65     		str	r2, [r3, #84]
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
 7479              		.loc 2 3161 9
 7480 03c2 7B68     		ldr	r3, [r7, #4]
 7481 03c4 1B68     		ldr	r3, [r3]
 7482 03c6 1846     		mov	r0, r3
 7483 03c8 FFF7FEFF 		bl	LL_ADC_ClearFlag_AWD3
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
 7484              		.loc 2 3164 29
 7485 03cc 3B68     		ldr	r3, [r7]
 7486 03ce 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7487              		.loc 2 3164 12
 7488 03d0 012B     		cmp	r3, #1
 7489 03d2 05D1     		bne	.L420
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
 7490              		.loc 2 3166 11
 7491 03d4 7B68     		ldr	r3, [r7, #4]
 7492 03d6 1B68     		ldr	r3, [r3]
 7493 03d8 1846     		mov	r0, r3
 7494 03da FFF7FEFF 		bl	LL_ADC_EnableIT_AWD3
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7495              		.loc 2 3016 8
 7496 03de 0EE0     		b	.L421
 7497              	.L420:
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
 7498              		.loc 2 3170 11
 7499 03e0 7B68     		ldr	r3, [r7, #4]
 7500 03e2 1B68     		ldr	r3, [r3]
 7501 03e4 1846     		mov	r0, r3
 7502 03e6 FFF7FEFF 		bl	LL_ADC_DisableIT_AWD3
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7503              		.loc 2 3016 8
 7504 03ea 08E0     		b	.L421
 7505              	.L387:
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 349


3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 7506              		.loc 2 3181 5
 7507 03ec 7B68     		ldr	r3, [r7, #4]
 7508 03ee 5B6D     		ldr	r3, [r3, #84]
 7509 03f0 43F02002 		orr	r2, r3, #32
 7510 03f4 7B68     		ldr	r3, [r7, #4]
 7511 03f6 5A65     		str	r2, [r3, #84]
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 7512              		.loc 2 3183 20
 7513 03f8 0123     		movs	r3, #1
 7514 03fa 87F83730 		strb	r3, [r7, #55]
 7515              	.L421:
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 7516              		.loc 2 3186 3
 7517 03fe 7B68     		ldr	r3, [r7, #4]
 7518 0400 0022     		movs	r2, #0
 7519 0402 83F85020 		strb	r2, [r3, #80]
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 7520              		.loc 2 3189 10
 7521 0406 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 7522              	.L386:
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7523              		.loc 2 3190 1
 7524 040a 1846     		mov	r0, r3
 7525 040c 3837     		adds	r7, r7, #56
 7526              	.LCFI327:
 7527              		.cfi_def_cfa_offset 8
 7528 040e BD46     		mov	sp, r7
 7529              	.LCFI328:
 7530              		.cfi_def_cfa_register 13
 7531              		@ sp needed
 7532 0410 80BD     		pop	{r7, pc}
 7533              	.L425:
 7534 0412 00BF     		.align	2
 7535              	.L424:
 7536 0414 FFFF1700 		.word	1572863
 7537              		.cfi_endproc
 7538              	.LFE336:
 7540              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 7541              		.align	1
 7542              		.global	HAL_ADC_GetState
 7543              		.syntax unified
 7544              		.thumb
 7545              		.thumb_func
 7547              	HAL_ADC_GetState:
 7548              	.LFB337:
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 350


3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     peripheral.
3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         compared with states bits.
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For example:
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(const ADC_HandleTypeDef *hadc)
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7549              		.loc 2 3225 1
 7550              		.cfi_startproc
 7551              		@ args = 0, pretend = 0, frame = 8
 7552              		@ frame_needed = 1, uses_anonymous_args = 0
 7553              		@ link register save eliminated.
 7554 0000 80B4     		push	{r7}
 7555              	.LCFI329:
 7556              		.cfi_def_cfa_offset 4
 7557              		.cfi_offset 7, -4
 7558 0002 83B0     		sub	sp, sp, #12
 7559              	.LCFI330:
 7560              		.cfi_def_cfa_offset 16
 7561 0004 00AF     		add	r7, sp, #0
 7562              	.LCFI331:
 7563              		.cfi_def_cfa_register 7
 7564 0006 7860     		str	r0, [r7, #4]
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->State;
 7565              		.loc 2 3230 14
 7566 0008 7B68     		ldr	r3, [r7, #4]
 7567 000a 5B6D     		ldr	r3, [r3, #84]
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7568              		.loc 2 3231 1
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 351


 7569 000c 1846     		mov	r0, r3
 7570 000e 0C37     		adds	r7, r7, #12
 7571              	.LCFI332:
 7572              		.cfi_def_cfa_offset 4
 7573 0010 BD46     		mov	sp, r7
 7574              	.LCFI333:
 7575              		.cfi_def_cfa_register 13
 7576              		@ sp needed
 7577 0012 5DF8047B 		ldr	r7, [sp], #4
 7578              	.LCFI334:
 7579              		.cfi_restore 7
 7580              		.cfi_def_cfa_offset 0
 7581 0016 7047     		bx	lr
 7582              		.cfi_endproc
 7583              	.LFE337:
 7585              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 7586              		.align	1
 7587              		.global	HAL_ADC_GetError
 7588              		.syntax unified
 7589              		.thumb
 7590              		.thumb_func
 7592              	HAL_ADC_GetError:
 7593              	.LFB338:
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(const ADC_HandleTypeDef *hadc)
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7594              		.loc 2 3239 1
 7595              		.cfi_startproc
 7596              		@ args = 0, pretend = 0, frame = 8
 7597              		@ frame_needed = 1, uses_anonymous_args = 0
 7598              		@ link register save eliminated.
 7599 0000 80B4     		push	{r7}
 7600              	.LCFI335:
 7601              		.cfi_def_cfa_offset 4
 7602              		.cfi_offset 7, -4
 7603 0002 83B0     		sub	sp, sp, #12
 7604              	.LCFI336:
 7605              		.cfi_def_cfa_offset 16
 7606 0004 00AF     		add	r7, sp, #0
 7607              	.LCFI337:
 7608              		.cfi_def_cfa_register 7
 7609 0006 7860     		str	r0, [r7, #4]
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
 7610              		.loc 2 3243 14
 7611 0008 7B68     		ldr	r3, [r7, #4]
 7612 000a 9B6D     		ldr	r3, [r3, #88]
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7613              		.loc 2 3244 1
 7614 000c 1846     		mov	r0, r3
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 352


 7615 000e 0C37     		adds	r7, r7, #12
 7616              	.LCFI338:
 7617              		.cfi_def_cfa_offset 4
 7618 0010 BD46     		mov	sp, r7
 7619              	.LCFI339:
 7620              		.cfi_def_cfa_register 13
 7621              		@ sp needed
 7622 0012 5DF8047B 		ldr	r7, [sp], #4
 7623              	.LCFI340:
 7624              		.cfi_restore 7
 7625              		.cfi_def_cfa_offset 0
 7626 0016 7047     		bx	lr
 7627              		.cfi_endproc
 7628              	.LFE338:
 7630              		.section	.text.ADC_ConversionStop,"ax",%progbits
 7631              		.align	1
 7632              		.global	ADC_ConversionStop
 7633              		.syntax unified
 7634              		.thumb
 7635              		.thumb_func
 7637              	ADC_ConversionStop:
 7638              	.LFB339:
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7639              		.loc 2 3269 1
 7640              		.cfi_startproc
 7641              		@ args = 0, pretend = 0, frame = 32
 7642              		@ frame_needed = 1, uses_anonymous_args = 0
 7643 0000 80B5     		push	{r7, lr}
 7644              	.LCFI341:
 7645              		.cfi_def_cfa_offset 8
 7646              		.cfi_offset 7, -8
 7647              		.cfi_offset 14, -4
 7648 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 353


 7649              	.LCFI342:
 7650              		.cfi_def_cfa_offset 40
 7651 0004 00AF     		add	r7, sp, #0
 7652              	.LCFI343:
 7653              		.cfi_def_cfa_register 7
 7654 0006 7860     		str	r0, [r7, #4]
 7655 0008 3960     		str	r1, [r7]
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 7656              		.loc 2 3271 12
 7657 000a 0023     		movs	r3, #0
 7658 000c FB61     		str	r3, [r7, #28]
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 7659              		.loc 2 3272 12
 7660 000e 3B68     		ldr	r3, [r7]
 7661 0010 BB61     		str	r3, [r7, #24]
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 7662              		.loc 2 3283 79
 7663 0012 7B68     		ldr	r3, [r7, #4]
 7664 0014 1B68     		ldr	r3, [r3]
 7665              		.loc 2 3283 44
 7666 0016 1846     		mov	r0, r3
 7667 0018 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 7668 001c 3861     		str	r0, [r7, #16]
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 7669              		.loc 2 3284 80
 7670 001e 7B68     		ldr	r3, [r7, #4]
 7671 0020 1B68     		ldr	r3, [r3]
 7672              		.loc 2 3284 45
 7673 0022 1846     		mov	r0, r3
 7674 0024 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 7675 0028 F860     		str	r0, [r7, #12]
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 7676              		.loc 2 3285 6
 7677 002a 3B69     		ldr	r3, [r7, #16]
 7678 002c 002B     		cmp	r3, #0
 7679 002e 03D1     		bne	.L431
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 7680              		.loc 2 3286 7
 7681 0030 FB68     		ldr	r3, [r7, #12]
 7682 0032 002B     		cmp	r3, #0
 7683 0034 00F09880 		beq	.L432
 7684              	.L431:
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 354


3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
 7685              		.loc 2 3295 15
 7686 0038 7B68     		ldr	r3, [r7, #4]
 7687 003a 1B68     		ldr	r3, [r3]
 7688              		.loc 2 3295 25
 7689 003c DB68     		ldr	r3, [r3, #12]
 7690              		.loc 2 3295 32
 7691 003e 03F00073 		and	r3, r3, #33554432
 7692              		.loc 2 3295 8
 7693 0042 002B     		cmp	r3, #0
 7694 0044 2AD0     		beq	.L433
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 7695              		.loc 2 3296 23
 7696 0046 7B68     		ldr	r3, [r7, #4]
 7697 0048 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 7698              		.loc 2 3296 9
 7699 004a 012B     		cmp	r3, #1
 7700 004c 26D1     		bne	.L433
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
 7701              		.loc 2 3297 23
 7702 004e 7B68     		ldr	r3, [r7, #4]
 7703 0050 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 7704              		.loc 2 3297 9
 7705 0052 012B     		cmp	r3, #1
 7706 0054 22D1     		bne	.L433
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
 7707              		.loc 2 3301 35
 7708 0056 0123     		movs	r3, #1
 7709 0058 BB61     		str	r3, [r7, #24]
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
 7710              		.loc 2 3304 13
 7711 005a 14E0     		b	.L434
 7712              	.L437:
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
 7713              		.loc 2 3306 12
 7714 005c FB69     		ldr	r3, [r7, #28]
 7715 005e 454A     		ldr	r2, .L445
 7716 0060 9342     		cmp	r3, r2
 7717 0062 0DD9     		bls	.L435
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7718              		.loc 2 3309 11
 7719 0064 7B68     		ldr	r3, [r7, #4]
 7720 0066 5B6D     		ldr	r3, [r3, #84]
 7721 0068 43F01002 		orr	r2, r3, #16
 7722 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 355


 7723 006e 5A65     		str	r2, [r3, #84]
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7724              		.loc 2 3312 11
 7725 0070 7B68     		ldr	r3, [r7, #4]
 7726 0072 9B6D     		ldr	r3, [r3, #88]
 7727 0074 43F00102 		orr	r2, r3, #1
 7728 0078 7B68     		ldr	r3, [r7, #4]
 7729 007a 9A65     		str	r2, [r3, #88]
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 7730              		.loc 2 3314 18
 7731 007c 0123     		movs	r3, #1
 7732 007e 74E0     		b	.L436
 7733              	.L435:
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
 7734              		.loc 2 3316 39
 7735 0080 FB69     		ldr	r3, [r7, #28]
 7736 0082 0133     		adds	r3, r3, #1
 7737 0084 FB61     		str	r3, [r7, #28]
 7738              	.L434:
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 7739              		.loc 2 3304 14
 7740 0086 7B68     		ldr	r3, [r7, #4]
 7741 0088 1B68     		ldr	r3, [r3]
 7742 008a 1B68     		ldr	r3, [r3]
 7743 008c 03F04003 		and	r3, r3, #64
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 7744              		.loc 2 3304 13
 7745 0090 402B     		cmp	r3, #64
 7746 0092 E3D1     		bne	.L437
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
 7747              		.loc 2 3320 7
 7748 0094 7B68     		ldr	r3, [r7, #4]
 7749 0096 1B68     		ldr	r3, [r3]
 7750 0098 4022     		movs	r2, #64
 7751 009a 1A60     		str	r2, [r3]
 7752              	.L433:
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
 7753              		.loc 2 3324 8
 7754 009c BB69     		ldr	r3, [r7, #24]
 7755 009e 022B     		cmp	r3, #2
 7756 00a0 14D0     		beq	.L438
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 7757              		.loc 2 3327 46
 7758 00a2 7B68     		ldr	r3, [r7, #4]
 7759 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 356


 7760              		.loc 2 3327 11
 7761 00a6 1846     		mov	r0, r3
 7762 00a8 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 7763 00ac 0346     		mov	r3, r0
 7764              		.loc 2 3327 10
 7765 00ae 002B     		cmp	r3, #0
 7766 00b0 0CD0     		beq	.L438
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
 7767              		.loc 2 3329 41
 7768 00b2 7B68     		ldr	r3, [r7, #4]
 7769 00b4 1B68     		ldr	r3, [r3]
 7770              		.loc 2 3329 13
 7771 00b6 1846     		mov	r0, r3
 7772 00b8 FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 7773 00bc 0346     		mov	r3, r0
 7774              		.loc 2 3329 12
 7775 00be 002B     		cmp	r3, #0
 7776 00c0 04D1     		bne	.L438
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
 7777              		.loc 2 3332 11
 7778 00c2 7B68     		ldr	r3, [r7, #4]
 7779 00c4 1B68     		ldr	r3, [r3]
 7780 00c6 1846     		mov	r0, r3
 7781 00c8 FFF7FEFF 		bl	LL_ADC_REG_StopConversion
 7782              	.L438:
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
 7783              		.loc 2 3338 8
 7784 00cc BB69     		ldr	r3, [r7, #24]
 7785 00ce 012B     		cmp	r3, #1
 7786 00d0 14D0     		beq	.L439
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 7787              		.loc 2 3341 46
 7788 00d2 7B68     		ldr	r3, [r7, #4]
 7789 00d4 1B68     		ldr	r3, [r3]
 7790              		.loc 2 3341 11
 7791 00d6 1846     		mov	r0, r3
 7792 00d8 FFF7FEFF 		bl	LL_ADC_INJ_IsConversionOngoing
 7793 00dc 0346     		mov	r3, r0
 7794              		.loc 2 3341 10
 7795 00de 002B     		cmp	r3, #0
 7796 00e0 0CD0     		beq	.L439
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
 7797              		.loc 2 3343 41
 7798 00e2 7B68     		ldr	r3, [r7, #4]
 7799 00e4 1B68     		ldr	r3, [r3]
 7800              		.loc 2 3343 13
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 357


 7801 00e6 1846     		mov	r0, r3
 7802 00e8 FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 7803 00ec 0346     		mov	r3, r0
 7804              		.loc 2 3343 12
 7805 00ee 002B     		cmp	r3, #0
 7806 00f0 04D1     		bne	.L439
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
 7807              		.loc 2 3346 11
 7808 00f2 7B68     		ldr	r3, [r7, #4]
 7809 00f4 1B68     		ldr	r3, [r3]
 7810 00f6 1846     		mov	r0, r3
 7811 00f8 FFF7FEFF 		bl	LL_ADC_INJ_StopConversion
 7812              	.L439:
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (conversion_group_reassigned)
 7813              		.loc 2 3352 5
 7814 00fc BB69     		ldr	r3, [r7, #24]
 7815 00fe 022B     		cmp	r3, #2
 7816 0100 05D0     		beq	.L440
 7817 0102 BB69     		ldr	r3, [r7, #24]
 7818 0104 032B     		cmp	r3, #3
 7819 0106 05D1     		bne	.L441
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
 7820              		.loc 2 3355 37
 7821 0108 0C23     		movs	r3, #12
 7822 010a 7B61     		str	r3, [r7, #20]
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7823              		.loc 2 3356 9
 7824 010c 05E0     		b	.L442
 7825              	.L440:
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
 7826              		.loc 2 3358 37
 7827 010e 0823     		movs	r3, #8
 7828 0110 7B61     		str	r3, [r7, #20]
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7829              		.loc 2 3359 9
 7830 0112 02E0     		b	.L442
 7831              	.L441:
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default:
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
 7832              		.loc 2 3362 37
 7833 0114 0423     		movs	r3, #4
 7834 0116 7B61     		str	r3, [r7, #20]
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 7835              		.loc 2 3363 9
 7836 0118 00BF     		nop
 7837              	.L442:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 358


3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 7838              		.loc 2 3367 17
 7839 011a FFF7FEFF 		bl	HAL_GetTick
 7840 011e B860     		str	r0, [r7, #8]
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
 7841              		.loc 2 3369 11
 7842 0120 1BE0     		b	.L443
 7843              	.L444:
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 7844              		.loc 2 3371 12
 7845 0122 FFF7FEFF 		bl	HAL_GetTick
 7846 0126 0246     		mov	r2, r0
 7847              		.loc 2 3371 26
 7848 0128 BB68     		ldr	r3, [r7, #8]
 7849 012a D31A     		subs	r3, r2, r3
 7850              		.loc 2 3371 10
 7851 012c 052B     		cmp	r3, #5
 7852 012e 14D9     		bls	.L443
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
 7853              		.loc 2 3374 18
 7854 0130 7B68     		ldr	r3, [r7, #4]
 7855 0132 1B68     		ldr	r3, [r3]
 7856              		.loc 2 3374 28
 7857 0134 9A68     		ldr	r2, [r3, #8]
 7858              		.loc 2 3374 33
 7859 0136 7B69     		ldr	r3, [r7, #20]
 7860 0138 1340     		ands	r3, r3, r2
 7861              		.loc 2 3374 12
 7862 013a 002B     		cmp	r3, #0
 7863 013c 0DD0     		beq	.L443
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7864              		.loc 2 3377 11
 7865 013e 7B68     		ldr	r3, [r7, #4]
 7866 0140 5B6D     		ldr	r3, [r3, #84]
 7867 0142 43F01002 		orr	r2, r3, #16
 7868 0146 7B68     		ldr	r3, [r7, #4]
 7869 0148 5A65     		str	r2, [r3, #84]
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7870              		.loc 2 3380 11
 7871 014a 7B68     		ldr	r3, [r7, #4]
 7872 014c 9B6D     		ldr	r3, [r3, #88]
 7873 014e 43F00102 		orr	r2, r3, #1
 7874 0152 7B68     		ldr	r3, [r7, #4]
 7875 0154 9A65     		str	r2, [r3, #88]
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 359


 7876              		.loc 2 3382 18
 7877 0156 0123     		movs	r3, #1
 7878 0158 07E0     		b	.L436
 7879              	.L443:
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7880              		.loc 2 3369 17
 7881 015a 7B68     		ldr	r3, [r7, #4]
 7882 015c 1B68     		ldr	r3, [r3]
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7883              		.loc 2 3369 27
 7884 015e 9A68     		ldr	r2, [r3, #8]
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7885              		.loc 2 3369 32
 7886 0160 7B69     		ldr	r3, [r7, #20]
 7887 0162 1340     		ands	r3, r3, r2
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 7888              		.loc 2 3369 11
 7889 0164 002B     		cmp	r3, #0
 7890 0166 DCD1     		bne	.L444
 7891              	.L432:
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 7892              		.loc 2 3390 10
 7893 0168 0023     		movs	r3, #0
 7894              	.L436:
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 7895              		.loc 2 3391 1
 7896 016a 1846     		mov	r0, r3
 7897 016c 2037     		adds	r7, r7, #32
 7898              	.LCFI344:
 7899              		.cfi_def_cfa_offset 8
 7900 016e BD46     		mov	sp, r7
 7901              	.LCFI345:
 7902              		.cfi_def_cfa_register 13
 7903              		@ sp needed
 7904 0170 80BD     		pop	{r7, pc}
 7905              	.L446:
 7906 0172 00BF     		.align	2
 7907              	.L445:
 7908 0174 FFFF3FA3 		.word	-1556086785
 7909              		.cfi_endproc
 7910              	.LFE339:
 7912              		.section	.text.ADC_Enable,"ax",%progbits
 7913              		.align	1
 7914              		.global	ADC_Enable
 7915              		.syntax unified
 7916              		.thumb
 7917              		.thumb_func
 7919              	ADC_Enable:
 7920              	.LFB340:
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 360


3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 7921              		.loc 2 3401 1
 7922              		.cfi_startproc
 7923              		@ args = 0, pretend = 0, frame = 16
 7924              		@ frame_needed = 1, uses_anonymous_args = 0
 7925 0000 80B5     		push	{r7, lr}
 7926              	.LCFI346:
 7927              		.cfi_def_cfa_offset 8
 7928              		.cfi_offset 7, -8
 7929              		.cfi_offset 14, -4
 7930 0002 84B0     		sub	sp, sp, #16
 7931              	.LCFI347:
 7932              		.cfi_def_cfa_offset 24
 7933 0004 00AF     		add	r7, sp, #0
 7934              	.LCFI348:
 7935              		.cfi_def_cfa_register 7
 7936 0006 7860     		str	r0, [r7, #4]
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 7937              		.loc 2 3403 17
 7938 0008 0023     		movs	r3, #0
 7939 000a BB60     		str	r3, [r7, #8]
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 7940              		.loc 2 3409 28
 7941 000c 7B68     		ldr	r3, [r7, #4]
 7942 000e 1B68     		ldr	r3, [r3]
 7943              		.loc 2 3409 7
 7944 0010 1846     		mov	r0, r3
 7945 0012 FFF7FEFF 		bl	LL_ADC_IsEnabled
 7946 0016 0346     		mov	r3, r0
 7947              		.loc 2 3409 6
 7948 0018 002B     		cmp	r3, #0
 7949 001a 69D1     		bne	.L448
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
 7950              		.loc 2 3412 14
 7951 001c 7B68     		ldr	r3, [r7, #4]
 7952 001e 1B68     		ldr	r3, [r3]
 7953              		.loc 2 3412 24
 7954 0020 9A68     		ldr	r2, [r3, #8]
 7955              		.loc 2 3412 29
 7956 0022 364B     		ldr	r3, .L457
 7957 0024 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 361


 7958              		.loc 2 3412 8
 7959 0026 002B     		cmp	r3, #0
 7960 0028 0DD0     		beq	.L449
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7961              		.loc 2 3416 7
 7962 002a 7B68     		ldr	r3, [r7, #4]
 7963 002c 5B6D     		ldr	r3, [r3, #84]
 7964 002e 43F01002 		orr	r2, r3, #16
 7965 0032 7B68     		ldr	r3, [r7, #4]
 7966 0034 5A65     		str	r2, [r3, #84]
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7967              		.loc 2 3419 7
 7968 0036 7B68     		ldr	r3, [r7, #4]
 7969 0038 9B6D     		ldr	r3, [r3, #88]
 7970 003a 43F00102 		orr	r2, r3, #1
 7971 003e 7B68     		ldr	r3, [r7, #4]
 7972 0040 9A65     		str	r2, [r3, #88]
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
 7973              		.loc 2 3421 14
 7974 0042 0123     		movs	r3, #1
 7975 0044 55E0     		b	.L450
 7976              	.L449:
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
 7977              		.loc 2 3425 5
 7978 0046 7B68     		ldr	r3, [r7, #4]
 7979 0048 1B68     		ldr	r3, [r3]
 7980 004a 1846     		mov	r0, r3
 7981 004c FFF7FEFF 		bl	LL_ADC_Enable
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance))
 7982              		.loc 2 3427 10
 7983 0050 2B48     		ldr	r0, .L457+4
 7984 0052 FFF7FEFF 		bl	LL_ADC_GetCommonPathInternalCh
 7985 0056 0346     		mov	r3, r0
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          & LL_ADC_PATH_INTERNAL_TEMPSENSOR) != 0UL)
 7986              		.loc 2 3428 10
 7987 0058 03F40003 		and	r3, r3, #8388608
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          & LL_ADC_PATH_INTERNAL_TEMPSENSOR) != 0UL)
 7988              		.loc 2 3427 8
 7989 005c 002B     		cmp	r3, #0
 7990 005e 13D0     		beq	.L451
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Value LL_ADC_DELAY_TEMPSENSOR_STAB_US used instead of      */
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US because needed      */
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       in case of ADC enable after a system wake up               */
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       from low power mode.                                       */
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 362


3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait loop initialization and execution */
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL *
 7991              		.loc 2 3440 87
 7992 0060 284B     		ldr	r3, .L457+8
 7993 0062 1B68     		ldr	r3, [r3]
 7994 0064 9B09     		lsrs	r3, r3, #6
 7995 0066 284A     		ldr	r2, .L457+12
 7996 0068 A2FB0323 		umull	r2, r3, r2, r3
 7997 006c 9B09     		lsrs	r3, r3, #6
 7998              		.loc 2 3440 67
 7999 006e 5A1C     		adds	r2, r3, #1
 8000 0070 1346     		mov	r3, r2
 8001 0072 5B00     		lsls	r3, r3, #1
 8002 0074 1344     		add	r3, r3, r2
 8003 0076 9B00     		lsls	r3, r3, #2
 8004              		.loc 2 3440 23
 8005 0078 BB60     		str	r3, [r7, #8]
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 8006              		.loc 2 3441 13
 8007 007a 02E0     		b	.L452
 8008              	.L453:
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         wait_loop_index--;
 8009              		.loc 2 3443 24
 8010 007c BB68     		ldr	r3, [r7, #8]
 8011 007e 013B     		subs	r3, r3, #1
 8012 0080 BB60     		str	r3, [r7, #8]
 8013              	.L452:
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 8014              		.loc 2 3441 30
 8015 0082 BB68     		ldr	r3, [r7, #8]
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (wait_loop_index != 0UL)
 8016              		.loc 2 3441 13
 8017 0084 002B     		cmp	r3, #0
 8018 0086 F9D1     		bne	.L453
 8019              	.L451:
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 8020              		.loc 2 3448 17
 8021 0088 FFF7FEFF 		bl	HAL_GetTick
 8022 008c F860     		str	r0, [r7, #12]
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 8023              		.loc 2 3450 11
 8024 008e 28E0     		b	.L454
 8025              	.L456:
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           calibration logic.
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 363


3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8026              		.loc 2 3460 32
 8027 0090 7B68     		ldr	r3, [r7, #4]
 8028 0092 1B68     		ldr	r3, [r3]
 8029              		.loc 2 3460 11
 8030 0094 1846     		mov	r0, r3
 8031 0096 FFF7FEFF 		bl	LL_ADC_IsEnabled
 8032 009a 0346     		mov	r3, r0
 8033              		.loc 2 3460 10
 8034 009c 002B     		cmp	r3, #0
 8035 009e 04D1     		bne	.L455
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
 8036              		.loc 2 3462 9
 8037 00a0 7B68     		ldr	r3, [r7, #4]
 8038 00a2 1B68     		ldr	r3, [r3]
 8039 00a4 1846     		mov	r0, r3
 8040 00a6 FFF7FEFF 		bl	LL_ADC_Enable
 8041              	.L455:
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 8042              		.loc 2 3465 12
 8043 00aa FFF7FEFF 		bl	HAL_GetTick
 8044 00ae 0246     		mov	r2, r0
 8045              		.loc 2 3465 26
 8046 00b0 FB68     		ldr	r3, [r7, #12]
 8047 00b2 D31A     		subs	r3, r2, r3
 8048              		.loc 2 3465 10
 8049 00b4 022B     		cmp	r3, #2
 8050 00b6 14D9     		bls	.L454
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 8051              		.loc 2 3468 13
 8052 00b8 7B68     		ldr	r3, [r7, #4]
 8053 00ba 1B68     		ldr	r3, [r3]
 8054 00bc 1B68     		ldr	r3, [r3]
 8055 00be 03F00103 		and	r3, r3, #1
 8056              		.loc 2 3468 12
 8057 00c2 012B     		cmp	r3, #1
 8058 00c4 0DD0     		beq	.L454
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8059              		.loc 2 3471 11
 8060 00c6 7B68     		ldr	r3, [r7, #4]
 8061 00c8 5B6D     		ldr	r3, [r3, #84]
 8062 00ca 43F01002 		orr	r2, r3, #16
 8063 00ce 7B68     		ldr	r3, [r7, #4]
 8064 00d0 5A65     		str	r2, [r3, #84]
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 364


3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8065              		.loc 2 3474 11
 8066 00d2 7B68     		ldr	r3, [r7, #4]
 8067 00d4 9B6D     		ldr	r3, [r3, #88]
 8068 00d6 43F00102 		orr	r2, r3, #1
 8069 00da 7B68     		ldr	r3, [r7, #4]
 8070 00dc 9A65     		str	r2, [r3, #88]
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 8071              		.loc 2 3476 18
 8072 00de 0123     		movs	r3, #1
 8073 00e0 07E0     		b	.L450
 8074              	.L454:
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8075              		.loc 2 3450 12
 8076 00e2 7B68     		ldr	r3, [r7, #4]
 8077 00e4 1B68     		ldr	r3, [r3]
 8078 00e6 1B68     		ldr	r3, [r3]
 8079 00e8 03F00103 		and	r3, r3, #1
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8080              		.loc 2 3450 11
 8081 00ec 012B     		cmp	r3, #1
 8082 00ee CFD1     		bne	.L456
 8083              	.L448:
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 8084              		.loc 2 3483 10
 8085 00f0 0023     		movs	r3, #0
 8086              	.L450:
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8087              		.loc 2 3484 1
 8088 00f2 1846     		mov	r0, r3
 8089 00f4 1037     		adds	r7, r7, #16
 8090              	.LCFI349:
 8091              		.cfi_def_cfa_offset 8
 8092 00f6 BD46     		mov	sp, r7
 8093              	.LCFI350:
 8094              		.cfi_def_cfa_register 13
 8095              		@ sp needed
 8096 00f8 80BD     		pop	{r7, pc}
 8097              	.L458:
 8098 00fa 00BF     		.align	2
 8099              	.L457:
 8100 00fc 3F000080 		.word	-2147483585
 8101 0100 00030450 		.word	1342440192
 8102 0104 00000000 		.word	SystemCoreClock
 8103 0108 632D3E05 		.word	87960931
 8104              		.cfi_endproc
 8105              	.LFE340:
 8107              		.section	.text.ADC_Disable,"ax",%progbits
 8108              		.align	1
 8109              		.global	ADC_Disable
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 365


 8110              		.syntax unified
 8111              		.thumb
 8112              		.thumb_func
 8114              	ADC_Disable:
 8115              	.LFB341:
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         stopped.
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8116              		.loc 2 3494 1
 8117              		.cfi_startproc
 8118              		@ args = 0, pretend = 0, frame = 16
 8119              		@ frame_needed = 1, uses_anonymous_args = 0
 8120 0000 80B5     		push	{r7, lr}
 8121              	.LCFI351:
 8122              		.cfi_def_cfa_offset 8
 8123              		.cfi_offset 7, -8
 8124              		.cfi_offset 14, -4
 8125 0002 84B0     		sub	sp, sp, #16
 8126              	.LCFI352:
 8127              		.cfi_def_cfa_offset 24
 8128 0004 00AF     		add	r7, sp, #0
 8129              	.LCFI353:
 8130              		.cfi_def_cfa_register 7
 8131 0006 7860     		str	r0, [r7, #4]
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 8132              		.loc 2 3496 76
 8133 0008 7B68     		ldr	r3, [r7, #4]
 8134 000a 1B68     		ldr	r3, [r3]
 8135              		.loc 2 3496 48
 8136 000c 1846     		mov	r0, r3
 8137 000e FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 8138 0012 F860     		str	r0, [r7, #12]
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 8139              		.loc 2 3501 29
 8140 0014 7B68     		ldr	r3, [r7, #4]
 8141 0016 1B68     		ldr	r3, [r3]
 8142              		.loc 2 3501 8
 8143 0018 1846     		mov	r0, r3
 8144 001a FFF7FEFF 		bl	LL_ADC_IsEnabled
 8145 001e 0346     		mov	r3, r0
 8146              		.loc 2 3501 6
 8147 0020 002B     		cmp	r3, #0
 8148 0022 47D0     		beq	.L460
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 8149              		.loc 2 3502 7
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 366


 8150 0024 FB68     		ldr	r3, [r7, #12]
 8151 0026 002B     		cmp	r3, #0
 8152 0028 44D1     		bne	.L460
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
 8153              		.loc 2 3506 14
 8154 002a 7B68     		ldr	r3, [r7, #4]
 8155 002c 1B68     		ldr	r3, [r3]
 8156              		.loc 2 3506 24
 8157 002e 9B68     		ldr	r3, [r3, #8]
 8158              		.loc 2 3506 29
 8159 0030 03F00D03 		and	r3, r3, #13
 8160              		.loc 2 3506 8
 8161 0034 012B     		cmp	r3, #1
 8162 0036 0CD1     		bne	.L461
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
 8163              		.loc 2 3509 7
 8164 0038 7B68     		ldr	r3, [r7, #4]
 8165 003a 1B68     		ldr	r3, [r3]
 8166 003c 1846     		mov	r0, r3
 8167 003e FFF7FEFF 		bl	LL_ADC_Disable
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 8168              		.loc 2 3510 7
 8169 0042 7B68     		ldr	r3, [r7, #4]
 8170 0044 1B68     		ldr	r3, [r3]
 8171 0046 0322     		movs	r2, #3
 8172 0048 1A60     		str	r2, [r3]
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get tick count */
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
 8173              		.loc 2 3525 17
 8174 004a FFF7FEFF 		bl	HAL_GetTick
 8175 004e B860     		str	r0, [r7, #8]
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
 8176              		.loc 2 3527 11
 8177 0050 29E0     		b	.L464
 8178              	.L461:
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 8179              		.loc 2 3515 7
 8180 0052 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 367


 8181 0054 5B6D     		ldr	r3, [r3, #84]
 8182 0056 43F01002 		orr	r2, r3, #16
 8183 005a 7B68     		ldr	r3, [r7, #4]
 8184 005c 5A65     		str	r2, [r3, #84]
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 8185              		.loc 2 3518 7
 8186 005e 7B68     		ldr	r3, [r7, #4]
 8187 0060 9B6D     		ldr	r3, [r3, #88]
 8188 0062 43F00102 		orr	r2, r3, #1
 8189 0066 7B68     		ldr	r3, [r7, #4]
 8190 0068 9A65     		str	r2, [r3, #88]
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8191              		.loc 2 3520 14
 8192 006a 0123     		movs	r3, #1
 8193 006c 23E0     		b	.L463
 8194              	.L465:
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 8195              		.loc 2 3529 12
 8196 006e FFF7FEFF 		bl	HAL_GetTick
 8197 0072 0246     		mov	r2, r0
 8198              		.loc 2 3529 26
 8199 0074 BB68     		ldr	r3, [r7, #8]
 8200 0076 D31A     		subs	r3, r2, r3
 8201              		.loc 2 3529 10
 8202 0078 022B     		cmp	r3, #2
 8203 007a 14D9     		bls	.L464
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
 8204              		.loc 2 3532 18
 8205 007c 7B68     		ldr	r3, [r7, #4]
 8206 007e 1B68     		ldr	r3, [r3]
 8207              		.loc 2 3532 28
 8208 0080 9B68     		ldr	r3, [r3, #8]
 8209              		.loc 2 3532 33
 8210 0082 03F00103 		and	r3, r3, #1
 8211              		.loc 2 3532 12
 8212 0086 002B     		cmp	r3, #0
 8213 0088 0DD0     		beq	.L464
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8214              		.loc 2 3535 11
 8215 008a 7B68     		ldr	r3, [r7, #4]
 8216 008c 5B6D     		ldr	r3, [r3, #84]
 8217 008e 43F01002 		orr	r2, r3, #16
 8218 0092 7B68     		ldr	r3, [r7, #4]
 8219 0094 5A65     		str	r2, [r3, #84]
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8220              		.loc 2 3538 11
 8221 0096 7B68     		ldr	r3, [r7, #4]
 8222 0098 9B6D     		ldr	r3, [r3, #88]
 8223 009a 43F00102 		orr	r2, r3, #1
 8224 009e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 368


 8225 00a0 9A65     		str	r2, [r3, #88]
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
 8226              		.loc 2 3540 18
 8227 00a2 0123     		movs	r3, #1
 8228 00a4 07E0     		b	.L463
 8229              	.L464:
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8230              		.loc 2 3527 17
 8231 00a6 7B68     		ldr	r3, [r7, #4]
 8232 00a8 1B68     		ldr	r3, [r3]
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8233              		.loc 2 3527 27
 8234 00aa 9B68     		ldr	r3, [r3, #8]
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8235              		.loc 2 3527 32
 8236 00ac 03F00103 		and	r3, r3, #1
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8237              		.loc 2 3527 11
 8238 00b0 002B     		cmp	r3, #0
 8239 00b2 DCD1     		bne	.L465
 8240              	.L460:
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 8241              		.loc 2 3547 10
 8242 00b4 0023     		movs	r3, #0
 8243              	.L463:
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8244              		.loc 2 3548 1
 8245 00b6 1846     		mov	r0, r3
 8246 00b8 1037     		adds	r7, r7, #16
 8247              	.LCFI354:
 8248              		.cfi_def_cfa_offset 8
 8249 00ba BD46     		mov	sp, r7
 8250              	.LCFI355:
 8251              		.cfi_def_cfa_register 13
 8252              		@ sp needed
 8253 00bc 80BD     		pop	{r7, pc}
 8254              		.cfi_endproc
 8255              	.LFE341:
 8257              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 8258              		.align	1
 8259              		.global	ADC_DMAConvCplt
 8260              		.syntax unified
 8261              		.thumb
 8262              		.thumb_func
 8264              	ADC_DMAConvCplt:
 8265              	.LFB342:
3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 369


3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8266              		.loc 2 3556 1
 8267              		.cfi_startproc
 8268              		@ args = 0, pretend = 0, frame = 16
 8269              		@ frame_needed = 1, uses_anonymous_args = 0
 8270 0000 80B5     		push	{r7, lr}
 8271              	.LCFI356:
 8272              		.cfi_def_cfa_offset 8
 8273              		.cfi_offset 7, -8
 8274              		.cfi_offset 14, -4
 8275 0002 84B0     		sub	sp, sp, #16
 8276              	.LCFI357:
 8277              		.cfi_def_cfa_offset 24
 8278 0004 00AF     		add	r7, sp, #0
 8279              	.LCFI358:
 8280              		.cfi_def_cfa_register 7
 8281 0006 7860     		str	r0, [r7, #4]
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8282              		.loc 2 3558 22
 8283 0008 7B68     		ldr	r3, [r7, #4]
 8284 000a 9B6A     		ldr	r3, [r3, #40]
 8285 000c FB60     		str	r3, [r7, #12]
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
 8286              		.loc 2 3561 12
 8287 000e FB68     		ldr	r3, [r7, #12]
 8288 0010 5B6D     		ldr	r3, [r3, #84]
 8289              		.loc 2 3561 20
 8290 0012 03F05003 		and	r3, r3, #80
 8291              		.loc 2 3561 6
 8292 0016 002B     		cmp	r3, #0
 8293 0018 4BD1     		bne	.L467
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8294              		.loc 2 3564 5
 8295 001a FB68     		ldr	r3, [r7, #12]
 8296 001c 5B6D     		ldr	r3, [r3, #84]
 8297 001e 43F40072 		orr	r2, r3, #512
 8298 0022 FB68     		ldr	r3, [r7, #12]
 8299 0024 5A65     		str	r2, [r3, #84]
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
 8300              		.loc 2 3570 14
 8301 0026 FB68     		ldr	r3, [r7, #12]
 8302 0028 1B68     		ldr	r3, [r3]
 8303              		.loc 2 3570 24
 8304 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 370


 8305              		.loc 2 3570 30
 8306 002c 03F00803 		and	r3, r3, #8
 8307              		.loc 2 3570 8
 8308 0030 002B     		cmp	r3, #0
 8309 0032 21D0     		beq	.L468
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 8310              		.loc 2 3573 49
 8311 0034 FB68     		ldr	r3, [r7, #12]
 8312 0036 1B68     		ldr	r3, [r3]
 8313              		.loc 2 3573 11
 8314 0038 1846     		mov	r0, r3
 8315 003a FFF7FEFF 		bl	LL_ADC_REG_IsTriggerSourceSWStart
 8316 003e 0346     		mov	r3, r0
 8317              		.loc 2 3573 10
 8318 0040 002B     		cmp	r3, #0
 8319 0042 32D0     		beq	.L469
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
 8320              		.loc 2 3576 13
 8321 0044 FB68     		ldr	r3, [r7, #12]
 8322 0046 1B68     		ldr	r3, [r3]
 8323 0048 DB68     		ldr	r3, [r3, #12]
 8324 004a 03F40053 		and	r3, r3, #8192
 8325              		.loc 2 3576 12
 8326 004e 002B     		cmp	r3, #0
 8327 0050 2BD1     		bne	.L469
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8328              		.loc 2 3579 11
 8329 0052 FB68     		ldr	r3, [r7, #12]
 8330 0054 5B6D     		ldr	r3, [r3, #84]
 8331 0056 23F48072 		bic	r2, r3, #256
 8332 005a FB68     		ldr	r3, [r7, #12]
 8333 005c 5A65     		str	r2, [r3, #84]
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 8334              		.loc 2 3580 20
 8335 005e FB68     		ldr	r3, [r7, #12]
 8336 0060 5B6D     		ldr	r3, [r3, #84]
 8337              		.loc 2 3580 28
 8338 0062 03F48053 		and	r3, r3, #4096
 8339              		.loc 2 3580 14
 8340 0066 002B     		cmp	r3, #0
 8341 0068 1FD1     		bne	.L469
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8342              		.loc 2 3582 13
 8343 006a FB68     		ldr	r3, [r7, #12]
 8344 006c 5B6D     		ldr	r3, [r3, #84]
 8345 006e 43F00102 		orr	r2, r3, #1
 8346 0072 FB68     		ldr	r3, [r7, #12]
 8347 0074 5A65     		str	r2, [r3, #84]
 8348 0076 18E0     		b	.L469
 8349              	.L468:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 371


3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
 8350              		.loc 2 3591 11
 8351 0078 FB68     		ldr	r3, [r7, #12]
 8352 007a 1B68     		ldr	r3, [r3]
 8353 007c DB68     		ldr	r3, [r3, #12]
 8354 007e 03F00203 		and	r3, r3, #2
 8355              		.loc 2 3591 10
 8356 0082 002B     		cmp	r3, #0
 8357 0084 11D1     		bne	.L469
3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8358              		.loc 2 3594 9
 8359 0086 FB68     		ldr	r3, [r7, #12]
 8360 0088 5B6D     		ldr	r3, [r3, #84]
 8361 008a 23F48072 		bic	r2, r3, #256
 8362 008e FB68     		ldr	r3, [r7, #12]
 8363 0090 5A65     		str	r2, [r3, #84]
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 8364              		.loc 2 3595 18
 8365 0092 FB68     		ldr	r3, [r7, #12]
 8366 0094 5B6D     		ldr	r3, [r3, #84]
 8367              		.loc 2 3595 26
 8368 0096 03F48053 		and	r3, r3, #4096
 8369              		.loc 2 3595 12
 8370 009a 002B     		cmp	r3, #0
 8371 009c 05D1     		bne	.L469
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8372              		.loc 2 3597 11
 8373 009e FB68     		ldr	r3, [r7, #12]
 8374 00a0 5B6D     		ldr	r3, [r3, #84]
 8375 00a2 43F00102 		orr	r2, r3, #1
 8376 00a6 FB68     		ldr	r3, [r7, #12]
 8377 00a8 5A65     		str	r2, [r3, #84]
 8378              	.L469:
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
 8379              		.loc 2 3606 5
 8380 00aa F868     		ldr	r0, [r7, #12]
 8381 00ac FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
3607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 372


3608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8382              		.loc 2 3626 1
 8383 00b0 0EE0     		b	.L472
 8384              	.L467:
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8385              		.loc 2 3611 14
 8386 00b2 FB68     		ldr	r3, [r7, #12]
 8387 00b4 5B6D     		ldr	r3, [r3, #84]
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8388              		.loc 2 3611 22
 8389 00b6 03F01003 		and	r3, r3, #16
3611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 8390              		.loc 2 3611 8
 8391 00ba 002B     		cmp	r3, #0
 8392 00bc 03D0     		beq	.L471
3617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 8393              		.loc 2 3617 7
 8394 00be F868     		ldr	r0, [r7, #12]
 8395 00c0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 8396              		.loc 2 3626 1
 8397 00c4 04E0     		b	.L472
 8398              	.L471:
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8399              		.loc 2 3623 11
 8400 00c6 FB68     		ldr	r3, [r7, #12]
 8401 00c8 DB6C     		ldr	r3, [r3, #76]
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8402              		.loc 2 3623 23
 8403 00ca 5B6B     		ldr	r3, [r3, #52]
3623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 8404              		.loc 2 3623 7
 8405 00cc 7868     		ldr	r0, [r7, #4]
 8406 00ce 9847     		blx	r3
 8407              	.LVL0:
 8408              	.L472:
 8409              		.loc 2 3626 1
 8410 00d0 00BF     		nop
 8411 00d2 1037     		adds	r7, r7, #16
 8412              	.LCFI359:
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 373


 8413              		.cfi_def_cfa_offset 8
 8414 00d4 BD46     		mov	sp, r7
 8415              	.LCFI360:
 8416              		.cfi_def_cfa_register 13
 8417              		@ sp needed
 8418 00d6 80BD     		pop	{r7, pc}
 8419              		.cfi_endproc
 8420              	.LFE342:
 8422              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 8423              		.align	1
 8424              		.global	ADC_DMAHalfConvCplt
 8425              		.syntax unified
 8426              		.thumb
 8427              		.thumb_func
 8429              	ADC_DMAHalfConvCplt:
 8430              	.LFB343:
3627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8431              		.loc 2 3634 1
 8432              		.cfi_startproc
 8433              		@ args = 0, pretend = 0, frame = 16
 8434              		@ frame_needed = 1, uses_anonymous_args = 0
 8435 0000 80B5     		push	{r7, lr}
 8436              	.LCFI361:
 8437              		.cfi_def_cfa_offset 8
 8438              		.cfi_offset 7, -8
 8439              		.cfi_offset 14, -4
 8440 0002 84B0     		sub	sp, sp, #16
 8441              	.LCFI362:
 8442              		.cfi_def_cfa_offset 24
 8443 0004 00AF     		add	r7, sp, #0
 8444              	.LCFI363:
 8445              		.cfi_def_cfa_register 7
 8446 0006 7860     		str	r0, [r7, #4]
3635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8447              		.loc 2 3636 22
 8448 0008 7B68     		ldr	r3, [r7, #4]
 8449 000a 9B6A     		ldr	r3, [r3, #40]
 8450 000c FB60     		str	r3, [r7, #12]
3637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 8451              		.loc 2 3642 3
 8452 000e F868     		ldr	r0, [r7, #12]
 8453 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
3643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 374


 8454              		.loc 2 3644 1
 8455 0014 00BF     		nop
 8456 0016 1037     		adds	r7, r7, #16
 8457              	.LCFI364:
 8458              		.cfi_def_cfa_offset 8
 8459 0018 BD46     		mov	sp, r7
 8460              	.LCFI365:
 8461              		.cfi_def_cfa_register 13
 8462              		@ sp needed
 8463 001a 80BD     		pop	{r7, pc}
 8464              		.cfi_endproc
 8465              	.LFE343:
 8467              		.section	.text.ADC_DMAError,"ax",%progbits
 8468              		.align	1
 8469              		.global	ADC_DMAError
 8470              		.syntax unified
 8471              		.thumb
 8472              		.thumb_func
 8474              	ADC_DMAError:
 8475              	.LFB344:
3645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 8476              		.loc 2 3652 1
 8477              		.cfi_startproc
 8478              		@ args = 0, pretend = 0, frame = 16
 8479              		@ frame_needed = 1, uses_anonymous_args = 0
 8480 0000 80B5     		push	{r7, lr}
 8481              	.LCFI366:
 8482              		.cfi_def_cfa_offset 8
 8483              		.cfi_offset 7, -8
 8484              		.cfi_offset 14, -4
 8485 0002 84B0     		sub	sp, sp, #16
 8486              	.LCFI367:
 8487              		.cfi_def_cfa_offset 24
 8488 0004 00AF     		add	r7, sp, #0
 8489              	.LCFI368:
 8490              		.cfi_def_cfa_register 7
 8491 0006 7860     		str	r0, [r7, #4]
3653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8492              		.loc 2 3654 22
 8493 0008 7B68     		ldr	r3, [r7, #4]
 8494 000a 9B6A     		ldr	r3, [r3, #40]
 8495 000c FB60     		str	r3, [r7, #12]
3655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 8496              		.loc 2 3657 3
 8497 000e FB68     		ldr	r3, [r7, #12]
 8498 0010 5B6D     		ldr	r3, [r3, #84]
 8499 0012 43F04002 		orr	r2, r3, #64
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 375


 8500 0016 FB68     		ldr	r3, [r7, #12]
 8501 0018 5A65     		str	r2, [r3, #84]
3658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 8502              		.loc 2 3660 3
 8503 001a FB68     		ldr	r3, [r7, #12]
 8504 001c 9B6D     		ldr	r3, [r3, #88]
 8505 001e 43F00402 		orr	r2, r3, #4
 8506 0022 FB68     		ldr	r3, [r7, #12]
 8507 0024 9A65     		str	r2, [r3, #88]
3661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Error callback */
3663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 8508              		.loc 2 3666 3
 8509 0026 F868     		ldr	r0, [r7, #12]
 8510 0028 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
3667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 8511              		.loc 2 3668 1
 8512 002c 00BF     		nop
 8513 002e 1037     		adds	r7, r7, #16
 8514              	.LCFI369:
 8515              		.cfi_def_cfa_offset 8
 8516 0030 BD46     		mov	sp, r7
 8517              	.LCFI370:
 8518              		.cfi_def_cfa_register 13
 8519              		@ sp needed
 8520 0032 80BD     		pop	{r7, pc}
 8521              		.cfi_endproc
 8522              	.LFE344:
 8524              		.text
 8525              	.Letext0:
 8526              		.file 4 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 8527              		.file 5 "c:\\programdata\\chocolatey\\lib\\gcc-arm-embedded\\tools\\gcc-arm-none-eabi-10.3-2021.10
 8528              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 8529              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 8530              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 8531              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 8532              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 8533              		.file 11 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 376


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_adc.c
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:20     .text.LL_ADC_SetCommonClock:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:25     .text.LL_ADC_SetCommonClock:00000000 LL_ADC_SetCommonClock
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:71     .text.LL_ADC_SetCommonPathInternalCh:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:76     .text.LL_ADC_SetCommonPathInternalCh:00000000 LL_ADC_SetCommonPathInternalCh
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:121    .text.LL_ADC_GetCommonPathInternalCh:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:126    .text.LL_ADC_GetCommonPathInternalCh:00000000 LL_ADC_GetCommonPathInternalCh
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:167    .text.LL_ADC_SetOffset:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:172    .text.LL_ADC_SetOffset:00000000 LL_ADC_SetOffset
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:232    .text.LL_ADC_SetOffset:00000044 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:237    .text.LL_ADC_GetOffsetChannel:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:242    .text.LL_ADC_GetOffsetChannel:00000000 LL_ADC_GetOffsetChannel
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:292    .text.LL_ADC_SetOffsetState:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:297    .text.LL_ADC_SetOffsetState:00000000 LL_ADC_SetOffsetState
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:352    .text.LL_ADC_REG_IsTriggerSourceSWStart:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:357    .text.LL_ADC_REG_IsTriggerSourceSWStart:00000000 LL_ADC_REG_IsTriggerSourceSWStart
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:407    .text.LL_ADC_REG_SetSequencerRanks:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:412    .text.LL_ADC_REG_SetSequencerRanks:00000000 LL_ADC_REG_SetSequencerRanks
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:479    .text.LL_ADC_INJ_IsTriggerSourceSWStart:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:484    .text.LL_ADC_INJ_IsTriggerSourceSWStart:00000000 LL_ADC_INJ_IsTriggerSourceSWStart
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:534    .text.LL_ADC_SetChannelSamplingTime:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:539    .text.LL_ADC_SetChannelSamplingTime:00000000 LL_ADC_SetChannelSamplingTime
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:606    .text.LL_ADC_SetChannelSingleDiff:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:611    .text.LL_ADC_SetChannelSingleDiff:00000000 LL_ADC_SetChannelSingleDiff
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:665    .text.LL_ADC_SetChannelSingleDiff:00000044 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:670    .text.LL_ADC_SetAnalogWDMonitChannels:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:675    .text.LL_ADC_SetAnalogWDMonitChannels:00000000 LL_ADC_SetAnalogWDMonitChannels
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:745    .text.LL_ADC_ConfigAnalogWDThresholds:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:750    .text.LL_ADC_ConfigAnalogWDThresholds:00000000 LL_ADC_ConfigAnalogWDThresholds
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:811    .text.LL_ADC_GetMultimode:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:816    .text.LL_ADC_GetMultimode:00000000 LL_ADC_GetMultimode
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:857    .text.LL_ADC_GetMultiDMATransfer:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:862    .text.LL_ADC_GetMultiDMATransfer:00000000 LL_ADC_GetMultiDMATransfer
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:903    .text.LL_ADC_DisableDeepPowerDown:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:908    .text.LL_ADC_DisableDeepPowerDown:00000000 LL_ADC_DisableDeepPowerDown
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:951    .text.LL_ADC_IsDeepPowerDownEnabled:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:956    .text.LL_ADC_IsDeepPowerDownEnabled:00000000 LL_ADC_IsDeepPowerDownEnabled
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1006   .text.LL_ADC_EnableInternalRegulator:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1011   .text.LL_ADC_EnableInternalRegulator:00000000 LL_ADC_EnableInternalRegulator
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1055   .text.LL_ADC_IsInternalRegulatorEnabled:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1060   .text.LL_ADC_IsInternalRegulatorEnabled:00000000 LL_ADC_IsInternalRegulatorEnabled
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1110   .text.LL_ADC_Enable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1115   .text.LL_ADC_Enable:00000000 LL_ADC_Enable
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1159   .text.LL_ADC_Disable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1164   .text.LL_ADC_Disable:00000000 LL_ADC_Disable
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1208   .text.LL_ADC_IsEnabled:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1213   .text.LL_ADC_IsEnabled:00000000 LL_ADC_IsEnabled
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1263   .text.LL_ADC_IsDisableOngoing:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1268   .text.LL_ADC_IsDisableOngoing:00000000 LL_ADC_IsDisableOngoing
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1318   .text.LL_ADC_REG_StartConversion:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1323   .text.LL_ADC_REG_StartConversion:00000000 LL_ADC_REG_StartConversion
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1367   .text.LL_ADC_REG_StopConversion:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1372   .text.LL_ADC_REG_StopConversion:00000000 LL_ADC_REG_StopConversion
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1416   .text.LL_ADC_REG_IsConversionOngoing:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1421   .text.LL_ADC_REG_IsConversionOngoing:00000000 LL_ADC_REG_IsConversionOngoing
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1471   .text.LL_ADC_INJ_StopConversion:00000000 $t
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 377


C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1476   .text.LL_ADC_INJ_StopConversion:00000000 LL_ADC_INJ_StopConversion
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1520   .text.LL_ADC_INJ_IsConversionOngoing:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1525   .text.LL_ADC_INJ_IsConversionOngoing:00000000 LL_ADC_INJ_IsConversionOngoing
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1575   .text.LL_ADC_ClearFlag_AWD1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1580   .text.LL_ADC_ClearFlag_AWD1:00000000 LL_ADC_ClearFlag_AWD1
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1620   .text.LL_ADC_ClearFlag_AWD2:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1625   .text.LL_ADC_ClearFlag_AWD2:00000000 LL_ADC_ClearFlag_AWD2
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1665   .text.LL_ADC_ClearFlag_AWD3:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1670   .text.LL_ADC_ClearFlag_AWD3:00000000 LL_ADC_ClearFlag_AWD3
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1710   .text.LL_ADC_EnableIT_AWD1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1715   .text.LL_ADC_EnableIT_AWD1:00000000 LL_ADC_EnableIT_AWD1
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1757   .text.LL_ADC_EnableIT_AWD2:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1762   .text.LL_ADC_EnableIT_AWD2:00000000 LL_ADC_EnableIT_AWD2
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1804   .text.LL_ADC_EnableIT_AWD3:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1809   .text.LL_ADC_EnableIT_AWD3:00000000 LL_ADC_EnableIT_AWD3
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1851   .text.LL_ADC_DisableIT_AWD1:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1856   .text.LL_ADC_DisableIT_AWD1:00000000 LL_ADC_DisableIT_AWD1
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1898   .text.LL_ADC_DisableIT_AWD2:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1903   .text.LL_ADC_DisableIT_AWD2:00000000 LL_ADC_DisableIT_AWD2
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1945   .text.LL_ADC_DisableIT_AWD3:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1950   .text.LL_ADC_DisableIT_AWD3:00000000 LL_ADC_DisableIT_AWD3
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1992   .text.HAL_ADC_Init:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:1998   .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2778   .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2412   .text.HAL_ADC_Init:00000284 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2423   .text.HAL_ADC_DeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2429   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7637   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8114   .text.ADC_Disable:00000000 ADC_Disable
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2820   .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2759   .text.HAL_ADC_DeInit:00000248 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2772   .text.HAL_ADC_MspInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2814   .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2856   .text.HAL_ADC_Start:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:2862   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7919   .text.ADC_Enable:00000000 ADC_Enable
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3105   .text.HAL_ADC_Start:00000168 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3112   .text.HAL_ADC_Stop:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3118   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3198   .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3204   .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3509   .text.HAL_ADC_PollForConversion:000001a4 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3516   .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3522   .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3751   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:3757   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4144   .text.HAL_ADC_Start_IT:00000258 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4151   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4157   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4245   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4251   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4490   .text.HAL_ADC_Start_DMA:0000015c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8264   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8429   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8474   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4501   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4507   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
ARM GAS  C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s 			page 378


C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4640   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4646   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4687   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:4693   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5393   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5064   .text.HAL_ADC_IRQHandler:00000228 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5069   .text.HAL_ADC_IRQHandler:00000234 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5477   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5519   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5381   .text.HAL_ADC_IRQHandler:0000042c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5387   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5429   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5435   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5471   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5513   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5555   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5561   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5631   .text.HAL_ADC_ConfigChannel:0000005c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:5635   .text.HAL_ADC_ConfigChannel:0000006c $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:6693   .text.HAL_ADC_ConfigChannel:0000067c $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:6696   .text.HAL_ADC_ConfigChannel:00000680 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:6902   .text.HAL_ADC_ConfigChannel:000007c0 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:6915   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:6921   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7352   .text.HAL_ADC_AnalogWDGConfig:000002d4 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7359   .text.HAL_ADC_AnalogWDGConfig:000002e8 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7536   .text.HAL_ADC_AnalogWDGConfig:00000414 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7541   .text.HAL_ADC_GetState:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7547   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7586   .text.HAL_ADC_GetError:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7592   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7631   .text.ADC_ConversionStop:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7908   .text.ADC_ConversionStop:00000174 $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:7913   .text.ADC_Enable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8100   .text.ADC_Enable:000000fc $d
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8108   .text.ADC_Disable:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8258   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8423   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\ep_ygh\AppData\Local\Temp\ccdFVOly.s:8468   .text.ADC_DMAError:00000000 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
